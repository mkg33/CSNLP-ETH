I'm not an expert on the subject, but I do have a degree in Computer Engineering. In theory (this is a highly conceptual answer), a quad-core 3GHz each processor can be the equivalent of one 12GHz processor if, for example, there were four sets of calculations needed for a single end result. That is what's called parallel processing.
then, the dual-core processor would take twice as long as the single-core processor because in the second instruction, the value of a is dependent on the first instruction and thus cannot be executed in parallel. This is how some software can take advantage of multi-threaded processors.
Various Constraints like shared memory, cache contention and other resources too are common to all the cores so running a piece of code parallel on these cores will not be as efficient as running it on 12 Ghz processors (although it is difficult to build such a processor ).
Two cars each going 50 miles per hour don't "add up" to 100 miles per hour. It really is that simple. The clock speed of a processor is not a measure of the rate at which work is done, it's a measure of how fast the clock ticks.
then, those two calculations could be executed on separate cores, and an xGHz processor would be equivalent to a single-core 2*xGHz processor. This is because the two calculations, although done at x speed, would be processed at the same time. Whereas the single-cored processor could do them at 2*x speed but one after the other. If the two CPUs executed this code at the same time, they would finish at the same time. However, if the code were:
Also i read somewhere that if we double the transistors embedded on the chip (CMP) , the speed up we are going to get is only 40% . This provides a significant hint to this topic also.
So, in theory, a 12GHz single-core processor can always run as fast (or faster) than a 3GHz quad-core processor, but not vice-versa.
To simplify the logic, let's say we're talking about a dual core processor. If a set of calculations were, say: