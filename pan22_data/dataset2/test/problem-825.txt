It takes about 10 minutes to clone to a second Micro SD card. I then switch off, take out both cards, store the original and boot using the clone. Hence I know that the backup works. I rotate 3 cards in this way, so that I always have a safe card. It works for me ;-)
You can't write to the currently mounted OS partitions without a spectacular crash, at least not wholesale like you're asking. Not least, Linux caches data so your new write will get bollixed when the cache flushes old data onto the new...
An alternative would be to go the NOOBS method and store boot files on a separate partition then either booting to NOOBS or to an OS if installed. NOOBS somewhat already does what you said, but instead of re-imaging the entire SD, it only replaces the OS partitions. This link tells how NOOBS works.
Sounds like you could use rpi-clone? I've been using rpi-clone every day for a few weeks to clone my running RPi3 running Raspian Jessie.
Sure you can. Just hld down the shift key when the grey screen appears.  It even tells you that on the screen.
Also, the file needs to be at the end of the storage space so it doesn't get immediately overwritten.
With a big enough SD card, you could have 2 usable boot options - and manipulate the one not in use, which is fine, then update grub & reboot to the new OS.
Or at least that's how I think Linux deals with files. The last time I tried this (I did a few months ago), the Pi just hanged. Based on this experiment, you really need another computer to re-image the SD card.
Not quite. You would overwrite the partition tables when you re-image it and replace said tables with the ones from the image. After your imaging program is done, it would release the file handle to the image file, but since the partition where the file is stored technically doesn't exist anymore, your program can't read it again. In theory, it would work but only once.