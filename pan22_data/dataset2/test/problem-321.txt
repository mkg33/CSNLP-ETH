It might be obvious to you, or maybe even to someone else, what the 1 and the 10 are supposed to represent, but I for one am not totally sure.  It is a good idea to eliminate all magic numbers in your code, and replace them with things like this:
I am not sure if you simply made a mistake when copying the code onto this site, but you have some indentation issues here:
Finally there is not enough white space in some of your if statements such as in these two examples:
The above snippet is a good example of why your comments should explain the Why of your code, rather than the What.  In this case, it looks like you changed the size of the grid from 7 to 6, so the comment is not accurate.  If the comment is accurate, then it should instead say why a 7 is going to make a grid of size 6.
I would recommend that you put the { bracket on the same line as the if statement, and have a tab on the next line. Whether you decide to follow this guideline, or some other guideline, it is important to be consistent throughout your code. I would also recommend more white space, like this if (hits % 3 == 0) {.  It is simply more readable this way.
I would like to touch on a few points, some of which are minor and others that are big picture.  I will start with the minor issues first.
This way it is immediately clear to you or to anyone else exactly what the numbers are supposed to be.
There are lots more issues related to the overall flow of the code.  I had a hard time following the logic of the game with the way that you have it organized.  I would recommend structuring it differently, though I do not have a specific suggestion in this regard.  The bottom line is that the different pieces of code are located in places that makes it hard to immediately tell what is going on, and when.
It is important to follow the language conventions for whatever language you are using, and it is also important to have proper indentation and white space.  It might be easy for you to read and understand the code in its current form and at this moment in time, but it is hard for anyone else to read it with these kinds of problems, and you will be left wondering what is going on when you come back to the code at a later time.  
Any time that you have a variable name followed by a number, it is easy to tell that there are problems with the code.  It would be much better to have the game designed in such a way that it can take a number of ships as input rather than hard coding them.  This is a sign that you should change the organization of the code (possibly dramatically).