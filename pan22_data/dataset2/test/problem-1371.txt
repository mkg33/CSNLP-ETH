Also note how if we decide we want to change which calculations we support (one of the most likely changes for the application), it becomes a 1 line change, and the user input processing code doesn't need to be touched.
When I find a match, I just evaluate it with the argument pi.  In your real application, you'd need to do further process to gather the user's input for the argument.
You were right to be concerned about repeating similar pieces of code. That's something that should be avoided at all times. Coding is about being concise and minimal.
Should sqrt, exp, etc. be in your Trig function? This seems to break the S in SOLID. I would abstract out your trig function and write something like:
Here's a toy program to illustrate the separation of user input collection from the string matching that determines which calc to use, as we discussed in the comments.  Note that the class NamedCalculations has no knowledge of IO with the user.  All the IO is encapsulated in CmdLineCalculator.