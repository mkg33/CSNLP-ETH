I know all this terminology is a confused field atm, but I'm trying to interpret how they are being used at: http://www.cpu-world.com/CPUs/Xeon/Intel-Xeon%20E7-8870.html
The context I've got is that I've got an old program written in VB6 that I can fire up many instances of. And I'm wondering how many instances I would be able to fire up before the processing significantly slows down? Eg. for the Xeon E7-8870 would it be the 10 cores, the 20 threads or the 8 multi-processors that throttle me?
Even under the best circumstances, hyper-threading only adds about a 15% throughput boost. That would mean two threads each running about 57% as fast as a single thread.
Once you saturate the physical cores, each instance will slow down significantly. This is especially true if all threads are running substantially the same mix of instructions. If you have 10 physical cores, you probably will start to see a drop in total performance if you launch more instances.
You really won't know until you try though. If the tasks do a lot of I/O, you may find that more instances lets the CPU stay busier even during I/O. However, if the tasks use a lot of memory, you may find that greater pressure on the caches and memory controller causes total throughput to actually drop, possibly drastically.