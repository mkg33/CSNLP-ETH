You're going to have to live with the fact that making an HTTP proxy server do this particular task requires you to do server administration, of one kind or another, on the machine running the server, whichever machine that turns out to be.
You're asking for the impossible.  The machine running the proxy server is where the name→address lookup (to find the HTTP content server) is done, when you use an HTTP proxy server (as you want to).  So the machine running the proxy server is where you have to add lookup overrides such as your example.com→1.1.1.1.  If you want that to be your own machine, then you'll have to run the HTTP proxy server on your own machine.
Of course, you could set up some Rube Goldberg mechanism where the machine with your proxy server uses a proxy DNS server on a machine somewhere else, and the machine with the proxy DNS server has the lookup overrides.  But all that that will have given you is (a) an extra external dependency for your HTTP proxy server machine, (b) a different machine that you still have to SSH into and edit data files on when you want to add another lookup override, and (c) possible severe adverse effects on other services on that server machine such as mail, news, FTP, LAN user authentication, and so forth because DNS lookup overrides apply to more than just HTTP.
(I'm not going to touch upon even more arcane mechanisms such as sending mail to a squid@server.example.com mailbox on the server whose ~alias/.qmail-squid file invokes a bespoke program that parses the mail for edit commands that are then applied through ex to squid.conf et al..  Because I'd then have to cover the extensive security ramifications of allowing the whole of Internet at whim to edit your server's configuration by mail.  It would be vastly silly to set up such a system solely because one didn't want to expend the comparatively tiny effort of using ssh.)