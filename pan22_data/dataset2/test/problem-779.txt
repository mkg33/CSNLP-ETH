One other flag to keep in mind is the -inc flag, which was included in Cassandra 2.1.  This option will only repair new data (data that hasn't been previously repaired).  Be careful when relying on this, especially if you frequently delete data. (more on this)
In looking through the documentation, I am having a hard time finding a reference for this, but the short answer is "yes" you need to run nodetool repair on each node in your cluster.  The closest I can find is the documentation on repairing nodes which suggests that you should not run repair on more than one node in your cluster at a time.
Something else to keep in mind is that the default way repairs are done in Cassandra can vary.  As of Cassandra 2.1 when running just nodetool repair it performs a full sequential repair by default.  You will want to look up what your version does.
You can also run repair with the -pr flag, which limits the repair operation to the first token range that current node is responsible for.  This cuts down on the duplication of work when run on the remaining nodes.
How it behaves depends on your configuration, what version of Cassandra you use, and how you run the repair command.
That said, it's possible to define what hosts and data centers to perform repairs on using the -hosts and -dc flags.  Additionally if you use the -pr flag (which will only pick the first token range the node is responsible for) you will have to run nodetool repair -pr on all nodes in the cluster.
If you just run nodetool repair on a single node in a cluster it will repair all of the data (token ranges) that node is responsible for and also the other nodes that are responsible for that data.  
Do you have to run nodetool repair on every node in a cluster, or do you only need to run it on one node, and from there Cassandra will take care of the rest?