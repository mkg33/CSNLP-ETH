If there's a cost to installing all the components required to support your software, can you minimise the cost? (e.g. do you just require a server with .net4 on it vs. all the workstations on a network needing it?). This principle also works against requiring the latest version of .net "just because you can", for example.
I would be more hesitant on the server side, and it depends how your software installs.  Is it pretty large and usually has a dedicated VM, not that big a deal.  Or does it install in a small office where it shares the server with everything else?  Then it's a lot bigger deal because then they are calling you asking why your software broke their website.
If you can, target the lowest version of the .NET framework you can get away with and point out the drawbacks with going to 4. The question becomes do the technical benefits you get from .NET 4 outweigh these drawbacks?
Installing any extra software is always a concern for IT departments and network administrators. If your product is useful to a company they will buy and install it, but things like this are barriers you have to overcome by making your software that much better.
In our organization the software we develop has been using the 2.0 framework. I suppose it would depend on the size of the organization. If they're a company of 30 than they may not have a problem with the upgrade. If they're a company of 500 then I would think there would be more resistance. If you need the 4.0 framework than you should write out your reasons. Perhaps you could present it in a way that makes it look very advantageous for them to upgrade (security, performance, features you're taking advantage of, etc).
To sum up... Look at it from the customers perspective.  Look at the use cases for your software.  And above all, don't be afraid to ask your current customers?
What type of customers are they?  Customers that computers are a valued and important part of the business that they treat that way, with upgrades, etc?  If everyone is running Windows 7+ there doesn't seem to be a lot of disadvantages to going to .net 4.0.
Can you demonstrate to the decision makers in a company that the benefit of the software will make up for the cost of installing it? It's really that simple.
I'm not going to say anything about .net 4 itself because I don't see that as relevant. Same question, same answer whether you're talking about an app that requires .net 4.0 on a Windows network, Safari 5 on an Apple network or Java on a Linux network.
Another consideration is the fact that the resistance may not necessarily be due to cost of installation and deployment of the framework but rather managing risk of braking existing mission critical enterprise applications. I am currently in that war at work with infrastructure team and are demanding for me to prove that deploying .net 4.0 framework will not break any existing apps. if anyone knows of such a majical tool that will do that I would be much in debt to you :). 
From an IT perspective, I don't find it to be that big of a deal on the client side.  Microsoft patches, updates, and components have been decently stable for a few years now and I would think most don't have a problem pushing out .net 4.0.