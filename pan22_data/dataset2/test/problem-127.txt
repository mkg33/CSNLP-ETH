I use Jailkit at $work, and it takes only a few commands.  They even provide a chroot shell howto.  The hardest part about maintaining a chroot for your users is copying in the libraries and binaries they need to run programs.  The jk_cp command takes care of copying in dependencies.
The easiest to do this is to set the user's shell to /bin/rbash. This puts bash into "restricted" mode. From the bash man page:
No. A user environment requires certain files to exist, and that article makes sure that they are present.
Also ensure that /bin/rbash is NOT in /etc/shells otherwise he will be able to change his own shell to something unrestricted using chsh.
Note: rbash is not an impenetrable fortress. It is still possible to leave gaping holes, and a sufficiently skilled "attacker" (i.e., one who knows more than you) will probably be able to do plenty that you won't want (or circumvent your restrictions entirely).
I'm inclined to think that you're confusing outcome with method.  What are you actually trying to achieve by locking users into their homedirs?  Running a secure yet functional non-trivial chroot is somewhere between "not worth it" and "impossible"; the chances are whatever you want to accomplish can be done some other, better, way.