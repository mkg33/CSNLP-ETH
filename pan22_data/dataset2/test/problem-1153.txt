I want to write a small PHP application for monitoring logs on a Debian server, including syslog logs and Apache/PHP messages. The problem here is that Apache user (www-data) has no access to /var/log directory. What would be the best way to grant an access to logs for PHP application? Let's assume that log files can be really large, like hundreds of megabytes.
I would recommend using rsyslogd to log directly to a mysql database which can be accessed by php.  This is a supported configuration of rsyslog.  I believe lenny+ for debian rsyslog is the default sys logger, so it should be just installing mysql if its not already there, configuring the security, setting up the tables, and configuring rsyslog.
As pablo hints at - the log files don't need to be written to /var/log. They don't need to be written on the local machine - these settings can be configured out of the box. The problem with using MySQL, is that your logging system suddenly gets very complex - and what happens to log entries invoked when the dbms is down?
You could set the files to be readable by 'other' (and the directories to be executable by other) have a look at the man page for logrotate to see how to control permissions on log files.
But the process which reads the logs does not have to be run by the apache uid. Indeed, I would recommend running cron job - or prefereably a daemon - as a different user to read the logs - and extract the information you need to a common repository.