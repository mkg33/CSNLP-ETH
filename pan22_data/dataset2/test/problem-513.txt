LE: On a second read, it seems you might want a member function (not a simple one). That is slightly more complicated, because you'd have to pass the object instance around when you want to call its method. More info on this topic you can find on Parashift's superb website: http://www.parashift.com/c++-faq/pointers-to-members.html. 
Or if you want something a little more streamlined you can use something like FastDelegate: http://www.codeproject.com/Articles/7150/Member-Function-Pointers-and-the-Fastest-Possible
If you want simple callbacks, you can just use normal C function pointers. You can see here a small tutorial on them: http://www.learncpp.com/cpp-tutorial/78-function-pointers/
C++11 has them built in: http://en.cppreference.com/w/cpp/utility/functional/function  They're also a part of Boost if you're using an older compiler: http://www.boost.org/doc/libs/1_53_0/doc/html/function.html
So, in your case you'd add a parameter like void (*clickedCallback)() in the ctor of the Button. Then, when it is clicked you'd call the function your saved before: m_clickedCallback();
Basically you'd need some sort of wrapper/struct that holds both the function to a member (similarly to the C one, but with the class specified) and the member instance where to call the callback function on.
Optionally, you might want to send the button which called the callback as argument. The definition/calling will become: