If you want to implement a D-Pad, the easiest way that comes to my head is to create four rectangles (one for each direction of the D-Pad) and then check if the touch location is within the bounds of any of the rectangles.
Like the others have said, it's best to come up with a design that fits the environment, not force the environment to fit your design, but if you do stick with the D-Pad, here's how you might do it:
I know this isn't the most useful answer, but unless you are porting a project over from another platform, I'd suggest reconsidering on the virtual D-Pad. Most implementations of virtual D-Pads have been poor at best, the lack of tactile feedback make them a poor choice for the platform.
A touchscreen device is much more than a device "lacking a true D-pad", as you put it. A touchscreen device allows the player to touch anywhere on the screen and so interact with any visible game element. This gives a wide range of game design possibilities, and these designs are likely to be much more pleasant to use than an emulated D-pad.
Something like what epic has done with Infinity Blade for the iPhone may give you inspiration Movie Link
You are far better off looking at building an interface to your game that highlights the platforms strengths instead of building to the platforms weakness.
If you think of the "touch point" as a mouse cursor, you are basically create a "hot spot" that reacts to the cursor movement.
The best/simplest way to do it I think is to make a semi-transparent(remember, you are covering the game screen) box or circle in one of the bottom corners, where the player is most likely to have their finger already. Then you just track the position of the player's finger relative to the center of the hot spot, and that's your input delta value.
As the other guys said; think twice before implementing a D-Pad on a touch screen. On the other hand IÂ´ve seen people playing those GBA emulators all day on their iPhones. 