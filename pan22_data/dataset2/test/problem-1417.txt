I am sure there are other examples but the mainframe is the only one I can think of right now that qualifies.
The hardware would have to specifically support it. A normal PC cannot do this. A mainframe can do it via logical partitions. I think this qualifies as there is no real separate operating system running underneath the LPARs. (Note mainframes also use "hosting" but here there is a single OS running on the hardware like z/VM.
Neither guest OS (the only interactive bits in the scenario) relies on the other to operate: the part you find objectionable in your question.
In order to do this, you would need a custom motherboard that implemented pretty much the entirety of its functionality twice, with special circuitry to allow two southbridges to share a physical bus, dedicated memory slots per CPU (for parallel northbridge operations), etc.
Simply put, no. Most of the interconnects within a motherboards circuitry are buses, and the operation of a bus MUST be coordinated by a single arbiter. Interrupts could not function effectively. 
I think ESXi is the vmware type 1 hypervisor, and can run on e.g. a Dell Poweredge. My office runs a few servers (phones, storage) on a single powedge bought used on ebay for about 250$. I did not set it up, but I helped.
You can typically dedicate single CPUs in a multi-CPU setup to a specific guest, and allocate memory and storage space for each guest.
Back in the day if you had a PC card in your Mac you could run both operating systems at once. Would you count this as hosting? I think I probably would...
The closest thing to what you are asking is generally referred to as a type-1 Hypervisor. However Hypervisor is really a "minimal OS" (if it even qualifies as an OS) host for multiple guest OS. A sort of supervising kernel.