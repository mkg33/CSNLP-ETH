This will cause output to apperar on serial console (in your terminal program) and on standard tty. Sometimes SOL (Serial Over LAN) is available.
Some newer linux distros use init replacements like Upstart (for example, Ubuntu).  These generally don't use /etc/inittab and instead use some other config files.  Here's a discussion of how calling mingetty works on Ubuntu.
If nothing else helped, you can grab your laptop and capture all the kernel log through serial console by adding something like this to kernel parameters:
Most of the information you want will be in /var/log/dmesg and /var/log/messages after the system boots, you should check those files first.
When booting into Linux, there are sometimes one or two lines that get quickly cleared. I think that some of them don't even appear in dmesg. If nothing else, I want to suppress the clear before the "login:" prompt. Is there a kernel command or sysctl that I can set to prevent this so I can read them on the console screen after booting?
Perhaps this is some bios message or part of your boot loader?  Either way, there are so many different things that can blank the screen, without knowing where exactly in the process it happened it's hard to say what to do about it.  Is the only thing left on the screen "Login:"? or is there some other boot-up stuff above it?  If it's immediately before the login prompt and nothing else is on the screen, then perhaps /etc/issue has a screen-blanking command in it?  Otherwise, you could be using some kind of console frame buffer that is switching the video mode.  On my computer, the screen is blanked when a console font is loaded.
Generally linux machines run mingetty for the virtual terminals.  If you have a traditional sysv init system, those are controlled by /etc/inittab.  You can add the --noclear option to mingetty to prevent clearing the screen.  To do this, edit /etc/inittab and change this line: