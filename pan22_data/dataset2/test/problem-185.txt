I have an older but yet usable machine (AMD Phenom/ASUS M4A88T-M with 16GB) and was easily able to install Ubuntu 17 BUT obiously the board cannot boot from the PCIe SSD. As the Ubuntu Installer could see and write to the SSD it is save to expect that Linux can handle the device. 
The goal is to evaluate the performance gain of this server-grade SSD compared to SATA or M.2 SSDs for specific desktop applications.
You could set up a bootloader on an older SSD or HDD and then tell it that you have a Windows install on the NVMe.
After you systemctl kexec hopefully the current kernel will replace itself with a new kernel entirely skipping BIOS or UEFI. (If BIOS kicks in it means kexec didn't work.)
I have a server-grade SSD (Intel DC P3520) that will eventually end up in a server. Until the server is deployed in the data center I want to conduct some tests in a desktop machine.
Install a small Linux on another machine (could be Ubuntu 17, why not). Mount your SSD. Set up kexec to load next kernel from SSD and set up the kernel options so that it mounts SSD as root.
Is there an (easy) way to somehow chain-boot from a "Helper" USB stick to the Ubuntu installation on the PCIe SSD? That is, boot from USB into a trampoline system (GRUB/Linux/Bootmanager) that has drivers for the PCIe SSD and loads the kernel just as GRUB would.