BTW, it's a best practice to use the full cmdlet name in scripts. Shorthand / aliases are fine for interactive stuff. Sure, we are all habited in using 'dir', but the shorthand got Get-ChildItem is 'gci', which is just as short as did, but, you know.
... well, you could be in a path that is X level deep from the root drive, so, now you are in a child, and the extrapolation is that you want this only from the child.
So, now you have to search every drive on your machine to find them, or remember where you were when you did this. 
Save this off to a text file, then would never have the drive path and as such when you go back to use it, you are going to have to know that and put it back in manually in order to use the files again.
So, I am not sure what you use case is, for this effort, but logically it will come back to bite you.
Well, those that follow you make take a stance. So being a good PowerShell citizen is really a good thing.
BTW, if you were going to do this in a script, there is an automatic variable for this sort of thing as well. Well, getting the location where the script was ran, and anything associated in that location.
Yet, that means, not only do you not know what drive it came from, but you don't know what root parent in came from either.
PowerShell will, in many cases try to coerce things, but it will not try and figure out what you want to do. You have to tell it what to do. Well, this is true for any computer language. 
--- and the prudent decisions are those that work for us, regardless of what anyone else thinks. ;-}
This question translates in to the impression that you are very new to PowerShell. So, it is vital that you get ramped up on it to limit / avoid misconceptions, bad habits, errors, and serious frustration, that you are guaranteed to encounter. Hit up YouTube/MSDN Channel9 and search for beginning, intermediate, advanced PowerShell, as well as PowerShell file system management and PowerShell file and folder management.