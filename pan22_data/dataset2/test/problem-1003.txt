What you've got is a good start, but could be further adapted.  First, if numRows == 1 or numRows >= s.size() then we can just return s.  Second, if numRows is 0 or less, the current routine returns an empty string.  Assuming that's correct behavior, we can put all of that into an early bailout at the head of the function:
We can think of each column having two delta values that add up to a period.  For each line, the deltas are as follows:
It's clear that the delta values must always add up to the period and that their usage alternates for each line.  Also, if we're going to increment, it doesn't make much sense to increment by 0, so everywhere 0 appears as a delta value, we can replace with the period.  I wrote a little class to handle that and the increments automatically:
This is perhaps somewhat unusual advice to give for a C++ review, but there's not really any point to having convert be part of an object.  It could function much more logically as a free function.
First, there's no need to create str because we can append a single character just as easily using push_back.  Second, this would be better expressed as a for loop:
The code already correctly calculates the variable num (which could use a better name, by the way -- maybe period).  One way to think of this is that we process columns.  Each column is period units wide.  Within that column, either 1 or 2 numbers are printed.  There is 1 number if it's the first or last row or 2 if it's any other. For example, if there are 4 rows, the array looks like this: