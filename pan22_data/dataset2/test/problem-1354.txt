Edit: It must be something to do with postfix. A normal php script echoing "Hello World" renders just fine, when I put a mail() function in there it hangs.
What's happening? Can this be occuring because some files aren't owned by their proper owner? If so, which files/folders are those and what owner is it supposed to have?
If you ran that command on /, all the files are owned by your webserver (www-data) user not root. Without further context into your system I imagine a connecting system to your application can not write to its file. Is postfix started? 
There are a lot of important permissions throughout a Linux system and just fixing the bare minimum to get your application working may leave serious security issues. For example right now your webserver can write to your /etc/shadow file.
I'm running 2 magento apps on my web server and I accidently set "chown -R www-data:www-data *" from the root of the server. Meaning, all the files were owned by the user root.
You probably wont like this answer but the best solution is to remake the system, reinstall the apps and just point it to the same database.
The websites run fine now, but when I try to finalize an order, it hangs there for a minute before timing out. The order registers on the backoffice but it doesn't display the "Order sucessuful page" as it is supposed to.
Assuming you were root when you did this and that it completed the chown (and wasn't cancelled with CTRL-C quickly).
Depending on your Linux distribution, some maintain information about the original ownership and file permissions in their packaging system. It may be possible to 'reset' the permissions to how they were when the package manager installed them. This link, for instance, speaks to how to do it on RPM-based distros: http://www.cyberciti.biz/tips/reset-rhel-centos-fedora-package-file-permission.html
At the end of the day, though, I'd really sorta recommend starting over if that's at all an option. 'chown -R' on * is one step up from 'rm -rf *', but the end result may end up being the same -- easier to start over.
This immediately spawned problems on the magento websites, namely: mysql didn't connect because it was supposed to use the "mysql" user.
When I hear something like this -- that a chown or chmod (or an rm -rf) was done recursively to the entire filesystem, I tend to suggest it's time to start over. You're going to be chasing down issues for, well, ever. This is an extremely destructive thing to do to a Linux box, and many of the subsequent problems will be less than obvious as to what's wrong (especially if some other guy unaware of the chown -R comes along and is trying to troubleshoot things).