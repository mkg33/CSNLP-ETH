Under the Application Menu (in this case 'Finder') there is (almost) always a Services menu option which will provide Services that apply to the current Application and its current state. Typically the state is what type of object is selected (text, files/folders, etc).
They can be enabled, disabled, and assigned keyboard shortcuts in the System Preferences panel that only makes sense for the last of those three, Keyboard.
Basicly an applescript app that calls a shellfile located in the app with the dropped files as arguments. You can modify the shell script as needed.
automator will automatically place it in your ~/Library/Services folder when you save which will make it available (almost) immediately via the Application -> Services menu, or the contextual (right click) menu.
As alternative, you can use folder actions. It is possible to associate a script Applescript to a folder that will be executed all the times some files (or directories) are dropped over the folder.
The easiest, built-in way to do this is to just drag the items from Finder to a Terminal window. When you drop them, Terminal will “type” their (escaped) pathnames. You can then use your shell's command line editing to enter the rest of the command. Or if you are thinking ahead, you can type the command first then drag in the items.
You can (as other answers have indicated) turn to AppleScript or Automator if you need more a more automated solution. Since the extra “moving parts” can add some complexity to the solution, you will have to weigh the benefits of the above process (manual, but flexible) against the the complexity of implementing one or more of the automated solutions.
In Mac OS X, the preferred script language is Applescript. You can create a droplet (a script that will do something when you drop some files over its icon), place the script (which can be saved as application) icon over the desktop, and drag and drop the files you want to pass to the script.
Based on commonpike's answer, I have created a AppleScript, that redirects all files dropped onto it, to a shell script with the matching name. Simply save as application from within Apple's ScriptEditor and rename as script.app to match your script.sh