Go build something, anything and then after two hours of trying to get it to compile go back and read the book again.
Although SDL has been around longer and has a CRAP LOAD of existing resources and tutorials, SFML is worth the investment. I've worked with both, and I can tell you SFML is just nicer. An added bonus is that 2D rendering is hardware accelerated in SFML. So it's faster too.
Books are often not the best of resources when it comes to learning programming. Especially in a language as complex as C++. If this is your first language I strongly suggest starting out with another language such as Java or C#/XNA which are both easy to learn and give you a good understanding of whats involved in building a game. Simply diving into SDL/OpenGL and expecting to build a game without having much understanding of how things work is a big mistake, one that many people make which results in them disliking programming.
Just as a side note. 3D programming is a lot more complicated than 2D programming (I'm assuming you want to build 3D games). Try building console games first then go to 2D. Once you learn more only then you will have the skills to attempt 3D and graphics programming.
As a side note, I would highly recommend using SFML instead of SDL. Since you've been hitting on C++ books, how SFML is organized will make a lot more sense that SDL. SFML is very object oriented.
The book should only be used as a reference. You need to personally think of problems which you can solve and then solve them. Then begin writing more complex programs such as, for example Battleships in a console environment. The more programming you do the better you get. Furthermore, books don't teach you how to design your code, you get that from experience. Designing a good structure for your program is a difficult task but the more your practice the better you will get.