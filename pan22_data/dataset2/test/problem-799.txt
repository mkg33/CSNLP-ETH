Whenever you are performing operations that might throw an exception (SQL operations, File handling, Service calls, ...), it's more than recommended to implement Exception Handling. This way you can catch the exception and let your program handle it instead of letting the exception crash your program:
and even more, you could build up a unit test case around this simple function and ensure it's reliable! and believe it's neat and readable too. 
However you may want to consider following points which help you to write reliable (maintainable) code and improve performance.
Apart from storing the connection strings into config, using stored procedures and exception handling, I also suggest you to think about code re-usability: 
You can see this is not perfect, but at least extracts non-business related function out as a standalone and re-usable function, where suits most of reading-query needs. and this will leave your business function much simpler and more readable. 
As @Nil suggested you should use Stored Procedures for your queries instead of hard-coded queries. The reasons he provided are what I'd also suggest.
In programming world, readable, maintainable and re-usable codes are most welcome. I just wrote a quick example of extract the query to a generic method for future re-use for your case: