You could separate your console code into smaller functions with representative names of what they do.
Also, it will be near impossible to unit test whether or not your switch/case for getting the user's input on Hit/Stand without having those be their own separate functions.
This is by no means a full review, but I figured I'd mention some of the things I noticed real quick.
From a Unit Testing perspective, I would say many of the hard-coded strings in your Console.WriteLine() calls should be retrieved from some function that generates those strings.
Each action/input/output should have it's own function that will either return something or set a property on your Player class in order to Unit Test properly. This will also increase readability throughout your code, and will make debugging far easier, as you'll likely only have to step through a function or two to find any problems rather than stepping through that massive PlayerAction function.
Secondly, we PascalCase names of classes in C#. See Microsoft Casing Guidelines. Also, looking at your github the Filenames should match the class names (e.g. card.cs should be Card.cs) and you should generally try to restrict each class to its own file. Helps you stay organized when projects get larger.
You seem to take this advice into account in some places and not in others. Try to be consistent in your coding habits. Hope these tips help.
This next suggestion is purely personal choice, and maybe nit-picky, but this block here lacks consistency: