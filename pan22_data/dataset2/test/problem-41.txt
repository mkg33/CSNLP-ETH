When a hard drive gets a bad sector, it's usually due to a head crash of some sort that physically damages the media rendering the sector or the seek traces on the media unreadable. A hard drive can re-map these during a write operation to spare sectors if they're available. During a write operation is the only time the controller attempts to correct them.
Unfortunately with SSDs, being an essentially emerging technology, how one manufacturer and another manufacturer handle errors are totally up for grabs. I've seen some controllers leave bad block in place and writable until they're allowed to go through their clean up routines (a BAD controller) while others will immediately exclude that block from use and properly re-map it. The latter is the model that seems to be gaining acceptance, as it should, because you shouldn't be writing data to a bad block.
Your friend is experiencing an I/O error because the SSD can't read one (or more) bad blocks. The bad block is corrupt. HDs and SSDs are not the same, but they handle errors similarly. 
As I said, SSDs are still an emerging technology, but they aren't and never will be perfect, regardless of what marketeers tell you.
With an SSD a marginal block may "just go bad" for no apparent reason. It's usually a manufacturing defect. There are no moving parts in an SSD so physical damage (except in extreme cases, like dropping it off the Empire State building) isn't likely. Like an HD, most, if not all correct this during a write operation. The logic is to leave the file in place so that as much that is recoverable can be recovered, which make sense.