I also made some tools to make it easier to manages all my password, because you need to be able to change a compromised password, remember max length of a password, etc...
Suppose a user uses a secure password at site A and a different but similar secure password at site B.  Maybe something like mySecure12#PasswordA on site A and mySecure12#PasswordB on site B (feel free to use a different definition of "similarity" if it makes sense).  
You should be just fine.  And remember to always have different passwords for different services—don't simply use the same password for everything, and do not even use the same password twice.  It is important to guard against stupid companies that refuse to follow best practices when it comes to the storage of user data such as passwords.
If I am an attaquer it is really easy for me to understand the pattern you used and try it on other websites. For example strongpassword+paypal.com
A clever attacker who is certain that her original attack (the one that got your passwords) went unnoticed would do this processing before using the passwords she mined. In that case, any predictable modification is dangerous, according to how obvious it is to the attacker.
Suppose then that the password for site A is somehow compromised...maybe a malicious employee of site A or a security leak.  Does this mean that site B's password has effectively been compromised as well, or is there no such thing as "password similarity" in this context?  Does it make any difference whether the compromise on site A was a plain-text leak or a hashed version?
But, for most things this really isn't an issue at all.  If your password on service A differs from the password on service B by only a single character, and both services are secure (e.g., store salted hashes for your password instead of the straight hash or the plaintext itself) then it is “computationally infeasible” to determine whether the passwords are similar, let alone how similar they are.
If your password is, say, a prefix plus a random element, and the attacker suspects this, and the attacker has your password hash on another site, they can get your other password slightly sooner.
A short answer is this:  If your passwords follow any sort of pattern, then yes, it is likely that the compromise of one password will lead to the compromise of others.  However, that doesn't mean that it's going to be feasible to do so.  As long as you:
This depends on what you are worried about. For a wide-scale, automated attack using credentials from one site on others, the attacker will go after the easiest portion first -- people using exactly the same password. Once that has been exhausted, if the attack is still unnoticed, the attacker will look for what he thinks are common patterns -- probably something like base password + site.
You can create your passwords by hashing something predictable, but if this practice becomes at all common or you're receiving personal attention from your attacker, that won't save you. In some ways, password strength is a matter of popularity arbitrage.
There are an arbitrary number of methods for determining whether a password is similar to another one.  Let's say for example that you use a password card, and that somehow someone else has the same one (or simply knows which one you have).  If they compromise one of your passwords and can see that it's just a row down the password card, they're likely to guess (maybe even correctly) that your passwords are all derived from that card in a similar fashion.
If you wand more details, I made a blog entry about password security which answer exactly to your question:
Using mathematical properties about hash (I use sha1), knowing first password it is difficult to discover strongpassword and the second password.