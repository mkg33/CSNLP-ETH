@DavidPostill is correct, but doesn't actually resolve your problem. The actual answer is much simpler: Command Prompt, like any program, receives its environment variable at startup. When you set a persistent environment variable (either per-user or system-wide), you are changing the registry values that determine the environment variables for future processes. You aren't actually changing any environment variables in the current process at all!
There are two ways to address this. The simple one is, as the documentation indicates, start a new instance of CMD. That's easy enough, but then you won't have your command history, etc. The more complicated one is to set the local environment variables (use the set command). The best way to do this is actually to use set first, and then invoke setx using the current environment variables. Here's an example, from what you are doing above:
Note the use of % characters. You use them when you went to expand an environment variable, not when you want to refer to one. The setx lines above are processed as "Set the user-wide environment variable JAVA_HOME to this process' current local value of JAVA_HOME", which is equivalent to saying "Set the persistent environment variable JAVA_HOME to C:\JAVA\jdk1.8.0_60\" because that's what %JAVA_HOME% expands to in the current process.