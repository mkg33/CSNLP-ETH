Whether it is worth fixing the model, depends on your understanding of mutually-exclusive vs non-exclusive classes in the problem, whether the current model meets its goals (it is not a big issue in practice, if the model is not a strict theoretical match to the problem, but has a perfectly good accuracy) and how much effort it would take to alter your code and re-train the model.
If your model is using a sigmoid output layer, then the values for a classification problem can be interpreted as the individual, non-exclusive probabilities. In that case, it is possible for an example to not be in either of your classes (an output close to [0,0]), or to definitely be in both classes (an output close to [1,1]) - if that is not the case in the problem that you have trained the NN to model, then you might want to consider altering the model.
When I was asked why the sum is greater than 1, I gave the guess that the probability stands for confidence concept in mathematics. 
If your model is using a softmax output layer, then the values are usually interpreted as mutually-exclusive class probabilities and should sum to 1. 
So, if your classification should be mutually-exclusive, then the person asking you the question has a valid point. The probabilities should sum to 1, and you may need to fix the model. In that case, you should use a softmax output layer, and would not have this problem because the probabilities would always sum to 1.
is technically correct, but not useful as an answer to your colleague's query. For classification, the terms confidence and probability are almost interchangeable, so you cannot really use one word to explain the other. If someone asked why one of the numbers was larger than another in your model, you would not answer "that is because x is greater than y" - essentially this is what you have done here. So your statement is not wrong as such, but neither does it explain the result.
In the result, for classification of two categories, if I sum up the probabilities of both cats, them some sum would be greater than 1.