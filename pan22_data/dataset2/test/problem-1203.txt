Either use this account as a backdoor in case you have this issue again, or give out accounts with these permissions instead of the actual master account? (obvs. you should really do least privilege/not share passwords/[insert your best practice here] - but im guessing you already know that :).
I recently ran into a case where development was occurring on a client-provided account, and no IAM users were setup so everyone logged in through the root account (there's issues here, obviously).
I dont think theres a way of explcitly blocking changing the master password. You could use IAM to lock down modifying the RDS instances properties (RDS IAM permission ModifyInstance i think) - but that wont just prevent changing the password, but any modification of the instance.
An RDS instance running MySQL 5.6-compatible Aurora "Writer" instance had its master DB instance user password reset unexpectedly, causing many issues. Is there a way to disable this capability, which the acknowledgement that the data will be unrecoverable if access credentials have been lost?