Generally, (although not guaranteed by the standard), a nonzero return value is understood by the operating system to mean that an error has occured, while in this case, the code always returns a non-zero value.  Better would be to simply delete the return. When a C or C++ program reaches the end of main the compiler will automatically generate code to return 0, so there is no need to put return 0; explicitly at the end of main.  
Unless it's specifically disallowed to have the number 0 in the input stream, this line is a bug and should simply be deleted:
In C++, it's usually advantageous to initialize variables when they're declared.  This allows us to always count on some kind of rational value for it, regardless of what happens in the rest of the program.
There are two reasons not to use system("cls") or system("PAUSE").  The first is that it is not portable to other operating systems which you may or may not care about now.  The second is that it's a security hole, which you absolutely must care about.  Specifically, if some program is defined and named cls or Color, your program will execute that program instead of what you intend, and that other program could be anything.  First, isolate these into a seperate functions cls() and color() and then modify your code to call those functions instead of system.  Then rewrite the contents of those functions to do what you want using C++.  For example:
This program would be a bit more usable if it either read from std::cin or was passed a filename as a parameter.  Right now, it's quite inflexible because the input filename is hardcoded.