Using it in production at www.orcsweb.com.  Absolutely love it!  It's so simple and yet so powerful.  Every time we try something creative against it, ARR works with that too.  IIS7 itself is rock solid too, so building something on top of IIS7 is a great idea.
http://blogs.iis.net/anilr/archive/2009/03/03/client-ip-not-logged-on-content-server-when-using-arr.aspx
Hardware balancers are getting so cheap, I dunno how big the adoption will be. I'm interested as well
We are using it in production for a company info website. And we havnt had any problem at all with it yet. And it works smooth to take down servers and loadbalancing also work nice. Using least reponsetime so one of the server is getting some more requests. We are going to move one of our ecommerce stores also that have alot more trafic then the company info site. So we will see how it works under more heavy load. But our tests have showed that it should handle it without problems
I suggest using it with NLB and create 2 ARR nodes.  Set the first node to take all traffic unless the 1st fails.  That way the statistics will be on the first node.  Use Shared Configuration so that you don't need to manually manage the 2nd node except to import and assign the SSL certs.
- IPs from the original user are logged to the logs, and REMOTE_ADDR and REMOTE_HOST are updated to the user's IP
We've used hardware load balancers for years with great success, but are moving towards ARR for most sites now.
I looked at this same thing last week.  In the end I decided the IIS7 tech was still kind of green.  Load balancing/routing is really the kind of tech you want someone else to find the wrinkles in :-).  Have had a good experience with HAProxy and if your needs are simpler, nginx is easy to set up.