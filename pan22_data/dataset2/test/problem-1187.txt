The app, whatever it is, needs to use other relevant data to determine what makes the user unique within the context of whatever the app is doing. If you're doing an app to generate mail flyers, for instance, you probably don't want to send more than one flyer per unique postal address.
Yes we keep every user ever hired.  I usually reccommend a first initial,middle initial,lastname to minimize the number of JQPublic1 accounts but it happens, however from an AD perspective users are just numbers.  You can see the number for any account with this script:
Peter, my own experience with this is - don't expect the username to be unique, unless you have a way to guarantee username uniqueness. As you say, it never really works out. 
Other have already posted script snippets and you'll find plenty of code snippets, for a variety of languages at the usual coding sites. Try searching those for things like "user to guid", "user to id", etc.
I am therefore left to wonder if there is a standard or best practice that addresses this issue of reusing usernames in an organization wide directory, especially in larger companies.  When bringing up my concerns at a meeting I was told that "there's no way [big company name] still has a record of every user that's left the company", and that struck me as crazy.  So, is there a generally accepted solution to handling usernames?  Or does every company make it up as they go?
I am a programmer with an application that needs to be integrated into the new company wide Active Directory login scheme.  This means changing all the usernames in our system to use the new scheme.  The new scheme is  "first initial, last name", so Joe Smith would have a username of jsmith.  If John Smith now gets hired, he'll get jsmith2.  BUT as soon as Joe leaves the company, his AD account is deleted, and jsmith is available again.  So if Jill Smith now is hired, she would get jsmith.  From an applications standpoint this causes problems in my view, because I could now have records relating to Joe and records relating to Jill that are indistinguishable, because they were both created by "jsmith".  