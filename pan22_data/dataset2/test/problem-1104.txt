If you are in a cloud setup you should consider EC2. There is no better backup than one that you can bring up in minutes with a new instance. All you need is some regular snapshots and you will be set in case of failure.
We have a similar situation and we use automysqlbackup (instead of mysqldumper as in your case) and rsnapshot as well. Automysqlbackup can inform you as well by email.
You appear to have specific requirements for your backups: you know what to back up, what are the intervals you like to use, how you like delete old backups etc. I think it is very unlikely that you find a free gui-based application to do all these in a way you like and make it all an automated process.
Specifically you mentioned backing up databases. Bacula supports running client and sever-side scripts at various stages of the backup, so you can, for example, dump all you databases to a file before the backup begins.
I used to use shell scripts for backups, but I gave up as they were ultimately unmaintainable. I use Bacula an Open Source network backup and restore solution. Once I got it running I never looked back. It should do all you need and more (I won't list all the features here as I'm sure there are better guides to be found with Google).
Bacula will email you backup reports on success or failure. You can set a complicated schedule for full and incremental backups. You can span you backups over multiple volumes on multiple storage media. The server and storage systems can each all be run on different machines separate from the clients.
The solution I suggest is to use command line tools to do the steps and then glue them all together with a scripting language like Perl or Python to make it a single cron-started process. You can catch subprocess return values in you script and take appropriate actions. You can do whatever logging you like and you can even add verify steps and a recovery test to your script. I would trust to this kind of solution more than to a gui-based application.
I use a combination of backupninja and duplicity for backups of my server. Backupninja has the ability to backup MySQL databases. Duplicity creates incremental backups (optionally encrypted) using an algorithm similar to rsync, and can transfer backups using a number of protocols (like SCP/SFTP, FTP, WebDAV, or storing in Amazon S3). 