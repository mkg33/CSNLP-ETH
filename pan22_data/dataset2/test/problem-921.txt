As @RonTrunk pointed out, NAT translates from an inside interface to an outside interface. The router can source lots of thing from interfaces with the correct commands.  You could create an access list of the addresses to translate, add a loopback as a inside interface in the access list, and try to source what you want translated from that.
However, I am unable to connect to 172.16.1 network from the router itself - the source address comes from the tunnel interface IP of 169.254.x.y. I could add a route for 169.254 on the remote network, but would rather want packets originating from the router to have the source address translated to 192.168.1.1. Is it possible to do this? 
The adjustment to the first access-list (the addition of the deny) allows me to add the ip nat outside to the tunnel and not translate 192.168 traffic headed to 172.16. The 2nd access-list allows me to identify router-originated traffic headed to remote private network, and the 2nd ip nat inside rule ensures translation from tunnel IP to private inside IP (.1.1).
Since the other network already has an interface on 169.254.x.y, I don't think adding a route will help.
NAT translates addresses from an inside interface to an outside interface. So packets coming from the router won't be translated.
Finally got it to work, after much playing around. The high level steps to complete were as follows:
Dialer1 is a pppoe internet connection and Tunnel1 a VPN connection to another network - 172.16.1.0/24. Routes are configured for 192.168.1 and 172.16.1. Network is working as expected between these 2 networks, and between 192.168 and the internet (ip nat outside on dialer1, inside on fa0/1, and ip nat inside source list 192-168-1-0  dialer1 overload)