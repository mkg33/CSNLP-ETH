I understand it is important with Neural Networks but I am not understanding the importance of it with RF. I understand the idea of having a third unseen set of data to test on is important to know the model isn't overfitting, esp with Neural networks, but with RF it seems like you could almost not even have test or validation data (I know in practise this isn't true) but in theory since each tree of the forest   uses a random sample (with replacement) of the training dataset.
But if you want to tune the model's hyperparameters or do any regularization (like pruning), then you'll need a validation set.  Train with the training set, use the validation set for tuning, then generate an accuracy estimate with the testing set.
At the moment I am missing out on approx 250 samples by keeping them unseen from the train and test set and I know the model would improve with the extra data, so is it possible to have only train and test and not designate a seperate validation set, whilst still having a reliable model?
Sure! You can train a RF on the training set, then test on the testing set.  That's perfectly valid as long as the model doesn't see any of the testing data during training.  (Or, better yet, you can run cross-validation since RFs are quick to train)