My approach is to not use file/directory level file permissions; use file share level permissions, and set the whole server filesystem data drive to Everyone Full Control (which becomes moot).
The downside of using Domain Local Groups for resources is that you end up with more total groups.  The upside is that you have less of a problem with replication, as Zypher noted. 
At my last job we were even able to set up permissions so HR employees applying for jobs wouldn't be able to see their own application data on their server. It took some inheritance-rights-filters to do it, which is similar to the "block inheritance" tag on Windows. The tricky part there was documenting it all, but it worked.
I'm looking at a migration from NetWare to Windows Server 2008 so this has been on my mind a lot lately. Server 2008 (and to some extent Server 2003R2) have some very nice features that really ease this transition. Server 2008 comes with Access Based Enumeration out of the box. This is a very nice feature that allows users to only see directories they have rights into. If you have a share like...
Another thing that Server 2008 seems to do better than its earlier versions is ACL inheritance. It just seems faster at propagating down to the leaf an ACL change at the top of a large tree.
Due to our Netware legacy, we have a large number of groups that are named based on who is in them, with a few out there named for what they give access to. For directories that have regimented access, we also use the "RO" "Full" nomenclature. 
Your method of using resource group for each access level is correct.  The only thing I would consider is using Domain Local Groups for resources.  You don't necessarily need to use Universal Groups if you're creating server-specific resource groups.  
We have a monolithic "shared" volume (still on NetWare, but we plan to have it monolithic when we move to Windows) that is the single shared volume for all 4,400 workers, and has over 3.5 million files on it. The top-level directories are all department names, and each department regulates what goes on inside them. There are a few exceptions for the really large departments, those have a 2nd level of directories with ACLs. 
Use your read/write groups the same, but on the whole file share using Comp Mgmt MMC. Don't do full ... users will shoot themselves with partial-knowledge/best-intentions.
Over the years (10+), I have found that NTFS permissions are more complex and leads to more errors. If the permissions are set wrong, or the inheritance gets broken, you expose data and its hard to find and see it. Plus, you are exposed to the move/copy problem ... users moving files also move the file's ACL, whereas copy inherits the destination ACL.
Without ABE the end user would see tens/hundreds/thousands of directories. With ABE the end user would see only one. The same holds true of shared shares. With ABE you can have a single huge volume for all of your departmental directories if you wish, and not spam the heck out of your users with directories they can't get into. While not an ACL issue, it is somewhat related so I bring it up.