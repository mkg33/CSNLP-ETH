I have seen games that seem to allow rapid, free movement and zooms over an entire world.  There's probably a lot of genius and a lot of laborious programming and artistry there; they didn't just download some free graphics software.
When loading a scene in Unity, the already existing objects are trashed and therefore a whole new level is loaded. You can indicate which objects you want to keep with the DontDestroyOnLoad method.
In your build settings when publishing a game, you can also indicate which scenes are used in your game and include them in your current build. This makes it possible to make a distinction between multiple platforms that contain different levels, but the same code logic.
Basically, I'd say that during the "Loading" process the game tries to load and precompute all operations that cannot be done in runtime. For example, retrieving images (to be used as textures) for the hard drive is usually a slow process. On the "Loading" step these images can be copied to RAM memory, which is muuuuch faster access storage, enabling real-time access to images on run time. 
A 3D graphics scene takes time to set up, and maintaining it can push a computer beyond its limits.  The contents require extensive memory.  The visible contents require extensive time.  And as the observer zooms out and looks at the horizon, an awful lot of the total contents can become visible.  (Ever notice how some games work better if you don't zoom out too far?  Ever notice how some games don't let you zoom out too far or look at the horizon?)
Unity specific questions can be asked on the unity answers forum as well. These users are more specified to Unity, instead of overall questions on game engines.
In Unity, scenes are a combination of multiple game objects. So if you don't want to specify all your gameobjects separately and load them one by one, you can simply load a complete scene.
The solution is to set up individual scenes with limited contents.  Now the game works fine until the observer leaves one scene for another.  At that point, the old scene is discarded and a new scene is set up, which takes time (and a loading screen to try to keep the user from getting bored).  3D engines usually try to do as much work as possible during the set up to make the graphics as smooth as possible later.