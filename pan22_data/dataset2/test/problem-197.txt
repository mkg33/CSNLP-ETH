If you were to roll your own, how about a streaming client that runs only off a proprietary boot cd? That way it could monitor what other processes are running and die if anything unknown (which could be a screen grabber) is also running. Not sure if it could tell if it was being run within a vm, but it should refuse to run if so. The client would stream a limited buffer of data with no pause or rewind control, and would not cache to disk ever.
As a stand-alone file this would be very difficult if not impossible for several reasons, the most obvious probably has already been mentioned - that the file could simply be copied, and if it was sent as an email attachment, the recipient would technically already have a copy before it is even played.
If you are able to create a program that interacts with outside resources, you have a few more options. For example, you could create a program that embeds an encrypted video clip, and checks with a database that you control for permission to decrypt the video. You would then design the program to update the database upon the first playing of the video (as a condition of providing the decryption for the first play) to disallow future decryption/playing.
Of course, if your recipient is aware that this is going to happen and wants to keep the video he could use a screen recorder or even an external camera to record the video on the first play. Not much you can do about that really.
This could be a stand alone appliance which could be built hard-wired to "melt-down", even literally explode(!), at end of playing.
You could make it unplayable using DRM permissions. Some online stores allows you to download a video with DRM and play it for a period of time.