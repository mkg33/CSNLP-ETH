I thought you might like to hear that there are already commercial anti-spam vendors who do this.. though IME it adds to a spam "score" for countries outside your home territory, to prevent overblocking.
Using a combination of DNSBL at the mail server/app level and GEOIP at the server level should remove the majority of your spam for you without having to implement spam scoring, fasle positives, etc.
I have been using Sendmail together with milter-greylist for exactly this purpose for several years on several medium-volume mail-servers with no issues whatsoever. It is easy to configure the desired GeoIP, SPF, whitelist, DNSBL etc. rules in greylist.conf to selectively enforce greylisting.
We are looking for a way to be able to block spam based on geographic location by filtering using geoip.
No single technique is effective, but a concerted defense-in-depth approach can substantially reduce inbound garbage. DNSBLs, URIBLs, greylisting, content filtering, and hand-tuned white- and blacklisting work well on my small domain, but I can afford to be more liberal in what I reject.
After a little Googling I have found a couple of solutions that may work (or not), but I would like to know what other sysadmins are currently doing or what they would recommend as a solution.
Argosoft mail server for windows does a good job of this but I am not aware of a similar linux based solution.  That's why I'd recommend using a trusted MTA on Linux (preferably with DNSBL) and then do a GEOIP solution at the server level.
Using PowerDNS and its GeoIP backend it is possible to use geoip for filtering. Normally this backend is used to help distribute load as a kind of load balancing but I dont see why it couldnt be used to kill spam as well?
I'm not trying to be a naysayer; 'oddball' character encodings and GeoIP information probably correlate well to spam but may not be reliable enough to use as single criteria to block mail. However they may well be helpful indicators in a system like Spamassassin. The takeaway is that spam defense is a complex problem in cost-risk-benefit analysis and it's important to know what your values are before implementing or changing a system.
What additional latency are you willing to accept? Some very effective low-falsing anti-spam techniques (e.g. greylisting) can delay mail. This can irritate some users who (unrealistically) expect email to be immediate communication.
context: we rarely have any email correspondence outside of the USA, so we would like to block all incoming email outside the US except for maybe one or two countries.
Ideally what I am looking for is a solution that would handle decent load and scale well too...aren't we all! ;)
This is especially true if your mail server/company only receives email from a handfull of known countries such as USA, Canada.
Other questions you need to ask: what is your acceptable false-positive and false-negative rate (how much legit mail are you willing to lose and how much junk are you willing to accept?)
As for implementation - there are a few inexpensive, commercially obtainable geo-IP databases. I would be inclined to integrate these "manually" - so you can at least let the message get up to the point where you know the sender recipient pair, for logging.
Reflect on how much you wish to externalize your costs when planning an anti-spam system. For example, ipfilter-based blacklists are unforgiving but do not materially affect any other system. Greylisting conserves sender and recipient bandwidth but keeps mail in remote queues longer. Mail bounce messages and challenge/response systems can be (ab)used to mailbomb an unrelated third party. Techniques like tarpitting actively externalize costs by intentionally holding open SMTP connections for long periods of time. DNSBLs require you cede some amount of control to a third party (blacklist maintainers) but ultimately as a mail admin you are responsible for explaining your blocking policy to your users & management. The upshot is that there are ethical considerations that go along with each technology and it's important to be aware of your effect on others.
Unless things have changed recently, blacklisting IPs by country of origin is not terribly effective. I had the idea of using ASN and OS fingerprint (via p0f) to judge the quality of an inbound connection but didn't pursue it; the statistics would be interesting to look at but I'm not convinced it would be any more useful than the standard techniques already described. The upside to using GeoIP, ASN, and OS fingerprint info is that while they may individually be weak predictors of connection quality, they are available at TCP/IP connection time, long before you reach the SMTP layer (fsvo "long".) In combination, they may prove to be useful and that would be helpful because spam becomes costlier to block as it approaches the end user.
How tolerant will you be toward misconfigured external systems? (e.g. those without FCrDNS, broken HELO/EHLO strings, unauthorized pipelining, those that don't properly retry after a temporary failure code 4xx, etc.)