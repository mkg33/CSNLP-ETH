When we consider a Code Smell Metrics and look at the code, we will find at least two points, that apply:
Initiate an arraylist, do second traversal, if count of that element is 1, append the element to list.
The code has an inconsistent formatting. Some key words are on a new-line and some times on the same line of a {.
It isn't clear that you specifically need to be working with arrays or if you just need to be manipulating a set of numbers. If there's no such requirement, you could use an ArrayList and dynamically allocate your buffer instead. This also gives you some built-in ways to find and move entries around using the List interface. (Technically, if your input and output type is strictly an array, perhaps you still could still convert to an ArrayList to do your work then convert back.)
Additional the code is format in a more C-like style, which I respect but you should have a look into Oracles Code Conventions for the Java.
Here's an example that prioritizes minimizing the number of loops in the code, this one has two loops and an inner loop (input, search, replace):
There's certainly room for a little improvement, but for phone-typing I'm hoping I got the point across. Let me know if you've got any questions, like the funky j-loop for instance.
Here I tried to simplify your code. As you are new to programming I havent used a hashmap. Basically after reading the input array, in count array you store how many times they occur. Then you iterate the array, if the current element count is 1 you add it to the result list. 
I think this could be reduced further to eliminate the inner loop and only have an input loop, possibly with a second loop afterwards. Constructs like HashMap could also be utilized to detect duplicates and go down to one input loop. I'll leave that as an exercise to someone else to try.
This example may not be the most efficient but it tries to make the most of built-in functions, and saves you the effort of managing an array directly. In general that would be my advice, see what already exists in standard libraries to do simple operations.