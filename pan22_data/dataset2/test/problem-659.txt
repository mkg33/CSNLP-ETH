I start my students on Blockly for coding, as I find it is really useful to develop some algorithmic thinking.  There is a developer section where you can create code with blocks (like Scratch) and "see" the equivalent Python/Javascript/Lua/PHP/Dart.
My preference might be different from most, but some of the things you seem to be asking for are inconsistent. For me, an "IDE for beginners" is one that doesn't need to be abandoned for a different language. Once you spend the time to learn it, you can adapt it to anything. For me, also, that means a professional level IDE like Eclipse, which I now use for everything. 
As other answers suggest, there are no supports in Notepad++ such as autocomplete or autoindent.  Learners really have to get used to doing it for themselves.  After a few weeks, I introduce the PEP8 check.  There is also an auto-correct version here but I don't show this until they have worked on fixing some code in class. 
We are waiting to have Thonny installed as it looks like the best IDE for Python Beginners imho.  I know learners last year struggled with PyCharm, which is my own preferred IDE.  There are many great IDEs out there, but from my evaluation of them all, I have settled on Thonny as a great "beginner" IDE and PyCharm as my preferred "intermediate" IDE, although there is little difference with Eclipse or Visual Studio Code imho.
But Eclipse isn't, technically, just and IDE, but a plug-in platform. You can plug in just about any language, but you can also plug in UI elements that can tailor it to beginners, say, showing fewer elements - or more. But anyone who can handle Visual Studio won't be put off by Eclipse. 
It supports just about anything you could want as a programmer, including unit testing. And, like riding a bicycle, once you know it, you know it. 
Why would you use an IDE anyway ? You can go directly with command line, either with Linux or Windows, you'll just need a text editor and a command line terminal and here you go. (I recommend Sublim Text)
We use NotePad++ for html and css but will swap to Atom.io next year (most like Sublime Text but free). When we start coding in Python, we use the same text editor for this as well, and so the class must use the terminal/shell to navigate to the file location and run their code.
If you’re interested in developing algorithms, I’ve found Jupyter Notebook to be a great way to develop Python (or R).