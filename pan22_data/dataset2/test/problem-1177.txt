Those two games don't really have much to do with each other, and World of Goo doesn't actually contain anything that I would call "goo" since all the characters are just points. The closest I can think of to a generic answer to this question is that a "goo" is usually just a high viscosity fluid and could probably be modeled using a vector space. That wouldn't be particularly fast though, so you could probably cheat and use a triangle mesh with some extra vector data for each vertex.
If you look carefully at the game you linked to, you can see that it's just a triangle fan with all the vertices merely ray casting to the collision in the world. This is why sometimes the goo looks a bit thin. Gish seemed to have more volumetric stability, probably through being constructed from a flexible mesh of points.
To emulate the movement of the linked-to game, all you need to do is sum the forces (highly damped I guess) that are being exerted on the centre of the character by the ray cast collisions that are pretty obviously being used to power the character rendering. The sideways forces are simple as they apply whether on ground or not, and jumping can be managed through making the lower springs more tensile, but, that said, personally I'd actually return to platformer game physics and use some impulse system to directly affect the vertical momentum rather than try to get the physics to behave right for gameplay.
You can check out the source for the game I made for PyWeek, "Bouncy 2". I'm sure there are better/more efficient solutions but it worked quite well for us.