There was another issue: the cron launches the firefox without env variables, so I had to define the display where to work. 
If there is a running firefox, the call to firefox just contacts it, transmits the print request and exits immediately. The print request is executed asynchronously in the running instance. I don't know if there is a way to get a notification when the printing is finished.
which should get you at least some delay - it waits until there's a non-zero-length output file before continuing.  Hopefully this will slow it down enough that subsequent calls will use the existing firefox and not think they have to spawn their own.
A workaround (untested) would be to create a fresh profile in your script (unpack a prepared zip under a random name). You can run multiple instances of firefox as long as they use different profiles. Erase the temporary profile once firefox exits. This assumes that the printing extension doesn't leave the firefox instance running; if it does, you could hack it to exit firefox once it's finished.
The problem is that inside a bash script firefox is called many times in a few seconds instead of being called once at a time and waiting to finish.
When you call firefox without specifying a full directory, it will run a wrapper script which does an exec of the actual executable. This may be causing your problem or the executable may be doing a double fork which causes it to run in the background without using &. I don't know how you can prevent this.