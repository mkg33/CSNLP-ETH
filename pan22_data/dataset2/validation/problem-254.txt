When you're at home and connect (for example) from HOME to OFFICE with agent forwarding enabled, you should see $SSH_AUTH_SOCK pointing to a socket owned by the sshd process which accepted your login â€“ not to any standalone agent process. (You can check with sudo lsof $SSH_AUTH_SOCK.)
If the local agent refuses this request, the troubleshooting process is mostly the same as with normal direct connections: if it's gpg-agent, make sure you have $GPG_TTY set; run gpg-connect-agent updatestartuptty /bye if necessary before making the initial connection and be careful to not use any gpg commands from other terminals.
When you then try to connect from OFFICE to yet another server, the ssh client on OFFICE sends a sign request through that socket directly to your local agent, mostly indistinguishable from a local request. (The local agent only sees the local ssh client as making this request, so there is no option for it to "not support" agent forwarding.)
If your check shows that the remote system has actually pointed $SSH_AUTH_SOCK to its own ssh-agent or gpg-agent process, that is a problem: either the server hasn't accepted the agent-forwarding request, or your login scripts (~/.profile, etc.) are unnecessarily overwriting the environment variable.