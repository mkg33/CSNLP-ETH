As opposed to @coderino I like the use of Files.newBufferedWriter. It makes the code clearer. However you should specify the charset, otherwise the file may not be portable between systems as by default it uses the system default charset which depends on locale.
This is the modified method based on the suggestion given with the additional charset for user convenience. If this is still modifiable to be more efficient, please be patient, I'm a newbie.
To get the Path use File.toPath() instead of getting the absolute path as a string and passing it to the Path constructor.
It seems that you go roundabout to create buffered writer, as new BufferedWriter(new FileWriter(file)); would suffice. In case of exception, it would make more sense to write to System.err stream as opposed to System.out. Also, depending on the context, I would rethrow exception, and catch in place where I am calling this method, so e.g. if I call saveFile method inside save method, I can show a message box saying save failed inside catch clause.