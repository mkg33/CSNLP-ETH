Once you have the database populated just run:  locate file.  If you just use the name of the file it will search for that file starting from /.  So you could get /etc/file and /usr/share/file.  If you want to just limit it to your home directory use this:
That said, find has the distinct disadvantage of searching the filesystem each time that you call it. The locate utility, in its many variations, on the other hand, uses a regularly-updated database of the files in your system.
There are two utilities find and locate.  Since others have suggested find, I will talk about locate.
find ./ -name "filename" or you can do something like find ./ -name "*.jar" to find all the files with the .jar extension.  You can also do find ./ -name "*.jar" | xargs grep -n 'main' to find all the .jar files that contain a main in them.
find has a number of options that allow it to find files by name, regular expressions or even more complex criteria such as size or ownership. E.g.
you say find ·location· -iname means not case sensitive and in the '' is a regular expression if you wish.
You install a package named mlocate or slocate on older systems.  After installing run the command updatedb.  locate uses a database to store the path to all of your files, so searching is much faster but it has the disadvantage of going out of date frequently, and populating the database can take a couple of minutes.
If you want a faster lookup you can use locate, there is a utility which scanns the disc regulary, like every week or day dependin on how it is setup
Pipelining find and grep will work, otherwise find provides itself some options (like -name and -iname) to do this: