Multi-column GiST indexes can combine the columns in a very targeted useful way.  However, signature based GiST indexes can also degenerate very badly when they get over-filled, and it is hard to predict when this will happen.  So you have to test them on your real dataset.  You might also want to try different ordering (putting the bools last, for example, or just leaving them out altogether).
As the other answer says, this likely won't work well even when it is supported (which starts in v11 for bool).  A four column GIN index is really not much different from 4 single-column GIN indexes.  And the boolean columns are unlikely to be helpful on their own, as returning half the index is probably going to cost more than it helps.  By combining the three scalars into one btree index, that gives you the good shot at maximizing the selectivity and minimizing the overhead (and it works in v10).  If the distribution of bools are lopsided, it might help to create partial indexes where you only index rows which the rarer bool value. 