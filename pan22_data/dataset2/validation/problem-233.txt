Alternatively, it would be user-friendly if I could run the method against command line arguments, for example:
The argument to palidrome is a pointer to text which is not altered within the function.  To show that to any calling program, the declaration should instead be like this:
Here are some observations and suggestions that may help you improve your code.  In all, it's not bad at all for a first effort.
Another thing that puts me off is that the main method just runs palindrome in a loop for the same input string.
If this code is ever used elsewhere, you will want to both reintroduce a header file (but give it a decent name!) and also document how the code will handle certain kinds of input.  Right now, it will crash if handed a NULL pointer. 
palindrome is not a good name. It does not tell the user what it does. I suggest simply isPalindrome or, if you prefer, is_palindrome.
Since C99, the compiler automatically generates the code corresponding to return 0 at the end of main so there is no need to explicitly write it.
For a small program like this, it can all easily be in a single file. Unlike Java, C does not force you into proliferating bunches of files for every program.  The declaration can either be in main.c or even simpler, just place the definition for palindrome above that for main and you won't need any forward declaration.