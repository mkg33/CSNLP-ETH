With the typical non-transparent proxies these new packets contain a different source and target IP and port than the original packets. They also might packetize the application payload in a different way. For example the original client might have send a small HTTP POST request in one packet while the proxy might make two packets out of it: one containing the HTTP header and one the HTTP body. 
Contrary to this DPI (Deep Packet Inspection) as found in IDS/IPS works at the packet level. It will analyze the application layer payload (like a proxy does) but then forward the original packet (unlike a proxy), usually unmodified or at most marginally modified (changing some bytes but keeping the size).
Some proxies can run in a destination transparent mode. In this case the original destination IP and port is kept, but source IP and port changes. And some proxies can run in a full transparent mode where additionally the source IP and port are kept. But in all of these cases the proxy might packetize the data in a different way. And even if the payload of the packets is kept the same the TCP sequence numbers will very likely differ.
A proxy is usually a user space program which maintains independent TCP connections to the client and to the server. While the application layer payload might be left unchanged by the proxy (or not, proxies often add some HTTP header like Via and/or X-Forwarded-For) the original TCP packets are not simply passed through but new packets are created. 