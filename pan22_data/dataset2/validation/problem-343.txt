In addition to using the Nagios object inheritance as mentioned you should write a script that automatically adds/deletes the host definitions from data extracted from your configuration management system (AD in Windows-land?). That way Nagios won't get out of date and you don't have to do busy work.
Well, you can just split up the directives into different files with the cfg extension. Nagios will automatically find them if the are in the config folder. You don't need to put everything in one cfg. You don't even need to link them explicitly.
In addition to that, you can use the cfg_dir directive in your top-level config (nagios.cfg) to specify an entire directory of configuration files.  Any file ending in .cfg will be included, which allows for configuration to  be toggled simply be renaming files.
If your systems are reletively similiar, you should try and use object inheritance to limit the amount of code you have to modify in the future.  
I use hostgroups religiously.  By adding machines to a hostgroup and monitoring that serivce on a per-hostgroup basis, adds, moves, and changes are straightforward.  I wouldn't dream of running Nagios any other way.