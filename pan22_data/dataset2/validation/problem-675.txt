Additionally, most FTP implementations support and use the PASV command to negotiate an additional port to establish a data connection.  This allows for multiple data streams to be transferred using the same FTP session.
You can also establish several connections from one computer to another on the same port, as the source port will randomly change.
Yes, and yes. Server connection are all based around 'sockets' not merely ports. Each socket is made up of the following info: 
Multiple connections from different hosts (or even the same host) can be uniquely identified using the above information.
Yes, each connection to your computer is identified by its destination address/port and source address/port.
*Suppose there is an FTP server on port 21 of a PC X. Is it possible for 2 different Pc's (Y and Z) to simultaneously have a connection with this FTP server on port 21? Why or why not?
Because the source port will typically be randomized and thus different for each connection, the FTP server has enough information to differentiate between two connections from the same PC (and the PC has enough information to differentiate between them too, when the replies come back).  So, yes and yes, even though FTP is a stateful protocol.
A server can handle many sockets. If two machines are connecting, then their source IP will be unique, and each connection is given a randomised source port when it connects. Quite how many connections your server can handle varies, limited by memory, network bandwidth, etc. Your FTP server software should give a configuration option for a maximum number of client connections.
*Is it possible for pc Y to have multiple simultaneous connections with this FTP server on port 21? Why or why not?
When a server is listening on a port, it can have several simultaneous connections on that port. Think about the problem we would have if servers accepted only one connection at a time on port 80 : websites would only allow one page loading at a time.