There are two strongly connected but still a bit controversial things in the industry that makes this kind of question being asked all the time since 2010.
I would say DevOps is encompasses managing source control, managing the build pipeline such as CI/CD and managing tests(unit tests, integration test...), managing the infrastructure including managing the cloud service being used(if any). With the tools that are being offered to teams, there is added complexity. The increase complexity required more time for a team to setup correctly. So what would happen was that one or two team members would gain experience in setting up all the necessary tools. These team members would need to spend more time with the operations side of development and these team members became the DevOps. 
So you are absolutely right – DevOps should be done by everyone in a team, just because it is about team itself, not some person who makes changes, and everyone and everything else remain old-fashioned.
People realized, that being badged as DevOps engineer, not simply being a sysadmin or developer – makes them more unique and valuable on the market by that time. That is how market works overall - you make offering and advertise what demanding person is looking for, so he prefers you as a supplier, not the other guy.
The role of DevOps is still being formed so the responsibilities can be different between organizations. Also, this was the developers responsibility not too long ago.
All developers should have some knowledge in the operations side of development, but it has grown to the point that it its too much to ask all developers to have sufficient knowledge current operations and the development work they need to know (how all components are tied together, any frameworks that are needed...)
It is way harder to make same kind of measurement for collaboration between team members, communication improvements, whatever. And higher management usually looking for kind of measurable results, rather then ephemeral ones.
Popularity of the methodology arisen - as it was intended to solve problems that majority of industry players had more or less. So some people started to see non-existent “silver bullet” here. Some magical potion, which simply could solve issues they have.
So we got high demand here. And as a result – supply started to grow as well. And obviously businesses were looking for someone who could implement “DevOps” for them. How do you usually initially identify someone who could work with some tool/methodology/whatever? I bet - the answer is - by looking for appropriate badge in their CV:)
First one is a nature of DevOps methodology itself. It was born all around idea of better collaboration between different parties of software delivery process. This involves a lot of non-technical aspects, like shared responsibility, better communication, knowledge sharing. Another improvement that was aimed - was product delivery itself, starting from designing software and up to deployment and operating live systems. So it brought us technical improvements as well. There was nothing new, actually, as all those things you see in majority of “DevOps job openings” like CI/CD, configuration management, log management, monitoring, whatever – were existing for decades, before even term DevOps was used for the first time. 
And somewhere here we got that focus shifted from whole methodology to technical side of it. I have no exact answer, why this happened, probably because majority of market players missed the key point of DevOps ideas, and understood only those which could be measured easily.