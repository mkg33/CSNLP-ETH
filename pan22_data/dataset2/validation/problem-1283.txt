It's very difficult to say if a web application will handle X number of clients on a particular system. It's heavily depends on many factors including how the application was written, frameworks used etc.
I have a link sharing site (think reddit). It is hosted on godaddy deluxe shared hosting now. I am planning to migrate it to aws.
I have seen an aws webinar on scaling till 10 million users. But basically it just says beyond an extent you can't scale in a vertical manner so choose to scale in a horizontal manner from the beginning itself.
Start with say t2.micro, as the user base grows simply upgrade the ec2 instance. The same goes for the RDS instances.
Please keep in mind that i have no one to assist me and this is a solo effort. I can find someone to assist on the aws side if it hits users.
Being able to scale horizontally will provide a much better route for handling growth in the future. What happens if the site struggles on the larger instances, or you need to scale past 100,000? You may also find that just moving to bigger instances will likely not return a linear increase in performance.
I know that 1 EC2 or RDS makes it a single point of failure. If any of these break i plan to terminate that instance and start an identical one from an image/backup. I am okay if the site is offline for 1 hour every 30 days.
Store the images, and anything else that you don't specifically need application servers to handle somewhere else. As you're already using an AWS stack, S3 is the obvious place for images and other static data. Don't waste application server time on static resources.
I don't need to support 10 million users. Assume that i need to support 100,000 users daily. At most the site will have say 1000 concurrent users.
The best option would be to find something you can use to benchmark/simulate usage of the application. As you already seem to have the web application running you could easily set up any size ec2 instance for a short amount of time, run some tests, then shut it down.