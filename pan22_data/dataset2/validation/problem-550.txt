e.g. I published my Scroll Away UserScript on GitHub that changes the style to position:absolute (keeps the elements visible but they will scroll with rest of the page):
Right click on the offending bit to start a Lizard session. Then you can use key commands to blast away the bits you don't want. I'm working on house projects and finding inspiration images on BHG.com. Their pages have an annoying header that takes up 25% of the page height.
Once I have more data about the typical class names/div ids for fixed headers, I'll look into making a domain-independent stylish style that makes these classes/ids absolute by default.
Fixed (unscrolling) headers are getting less popular as of January 2016, but if anyone still wanted to manipulate the fixed elements programmatically, they are easy to retrieve in plain JavaScript:
After months of dealing with this problem through either Firefox's "inspect element" or really painful editing of my Firefox userChrome/userContent files, I've found that Stylish is easily the best solution for this problem.  It's still not automated, but it's far faster than anything else I've found and it persists across visits to websites.
javascript:(function(){var%20found=true;while(found){var%20elems=document.body.getElementsByTagName("*");var%20len=elems.length;for(var%20i=0;i<len;i++){found=false;if(window.getComputedStyle(elems[i],null).getPropertyValue('position')=='fixed'){var%20el=elems[i];el.parentNode.removeChild(el);found=true;break;}}}})()
This is an improved version of ccpizza's code. It fixes a bug where only one top level element is removed instead of all of them.
You could use a plugin like Greasemonkey. Then just add a bit of custom javascript to edit the css for just that element on that site. It should be there again next time you visit the site.