For example, I have a local webserver known as COMPUTER8, which handles some requests. However, when using Google DNS, the DNS fails to return the local IP address. 
BTW, you typically set up servers with fixed IP addresses. This is precisely because DNS servers cache the IP addresses of servers. If DHCP changes the IP address of your server, the DNS server wouldn't know.
Is there a good way to use Google DNS and still be able to use local servers? I presume the local servers obtain their DHCP IPs from the router, so would it be possible to set the secondary DNS server to that of the router? 
SO, the typical setup is that you have your own DNS, and hook that up to some upstream DNS, which may then forward the requests even further. Your own DNS is probably smart enough to cache many names, so www.example.com will be requested only once. Your own DNS thereby also speeds up webbrowsing, it's not only resolving local names.
The solution is to create a local DNS server as default DNS for your machines on your local network, and on that local DNS configure google DNS as Forwarders. So the result is a merged DNS with local and web entries
I would like to avoid using hosts or specifying hard IP addresses due to the dynamic nature of the local network. 
DNS is very much a federated system. Google's DNS don't know the IP for some.internal.sever.at.example.com. However, the Google DNS does know how to contact the DNS server for *.example.com and forward the answer.