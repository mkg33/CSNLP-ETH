If you're not connecting to your back-end server using SSL, it may fail to detect you're actually using SSL and be configured to force you to go to SSL (hence the infinite redirects). You may want to look at similar mechanisms as what Jetty does with its forwarded option (to be able to tell the back-end it's behind a proxy). Rails might be able to interpret the X-Forwarded-Proto by default. In this case, add this to your Apache config (in the SSL virtual host):
If the backend server uses out-of-date self signed certificate, one more option is needed (if there is no access to the backend server):
Alternatively, if you really want to connect your reverse proxy to the back-end server using SSL as well (mostly useful when that server isn't where the Apache Httpd reverse proxy is), in addition to https://backend-server-address, use the SSLProxy* directives to set up the CA certs, as documented in the introduction to the mod_proxy documentation. In particular, you would need to configure SSLProxyCACertificateFile and make sure the certificate of the backend server is issued to the right host name as seen by Apache Httpd (i.e. localhost in your case).
Don't bother with HTTPS between your front-end and your back-end server, there's little point in enabling SSL for a localhost connection.
To add to vbartoni's answer, it seems that from Apache 2.4 and up, there are different defaults and a new directive.
I had a similar problem (the same error logs), except that the proxy was forwarding https traffic to another host.