You don't need to check for input lengths of 0 or 1; your initial values of "start" and "end" will catch that: end <= start in either case.
You are returning a String so for symmetry it is better to accept a String as parameter and convert to a StringBuilder internally.  You can change that if you have already done the  conversion elsewhere in your code.  In that case consider returning a StringBuilder instead, so input and output are the same class.  That avoids possible future errors from an invisible change of class, hidden behind a method call.
Your code assumes that there is at least one vowel in the supplied text.  Currently it will fail on an input of "zzzzzzz" as the indexes will fall off the ends of the array.  If your input guarantees at least one vowel, then that is not a problem.  If it does not, then you will need to fix it.
Your "isVowel()" method does not recognise A, E, I O, U as vowels.  You know more about the expected input than I do, so this may not be an error.  You can always use toLowerCase() on the character before checking.
The class name should probably be something like VowelReverser, and the methods should not be static.
I'm not familiar with StringBuilder, but it seems that it would be more natural to pass around a String instead.
@heijenoort's reworking of the while loop condition is the same as mine.  Better to avoid break in the middle of loops if you can, and this one is easy to avoid.
Rather than juggling start, end and charAt() you should instead iterate over the characters in the string. This should also remove the need for the initial length check.
I find it confusing that you call a StringBuilder variable "string", better to call it something like "text" or "sbText".
Why do you pass the number of test cases on standard input? Why not just process standard input while scanner returns something?