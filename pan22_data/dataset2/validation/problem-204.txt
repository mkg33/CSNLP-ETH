I suppose that XNA vs the world ( aka OpenGL and DirectX as real alternatives ) can easily look like a religious question especially when targeting a new developer, but i find that the right adjective for XNA is simplified and not powerful.
I should also remark the fact that OpenGL is a rendering technology when DirectX is a complete framework oriented to all the main aspect about multimedia, but the thing is that today there are frameworks available for every purpose that you have in mind, most of them are free and really well tested, with an history of several years of testing and they are really reliable, they are also cross-platform and with a really good license most of times if not in every case.
Especially as a hobbyist developing for yourself, if you want to develop games in managed code, C# and XNA will serve you very well.  You will be able to accomplish everything that you could at a baser level of coding, and you will save countless headaches.
The ANX.Framework is a framework which is source compatible with Microsoft's XNA framework 4.0. Source compatibility means, that you can "translate" a XNA game project to be a ANX game project by simply replacing all namespaces from Microsoft.XNA.Framework to ANX.Framework. The advantage of ANX is simply that you are able to swap the RenderSystem, the InputSystem and the AudioSystem. By swapping this systems you are no more limited to run your game using DirectX9 which XNA is using. ANX comes with a DirectX10 RenderSystem as a default. A DirectX 11, DirectX 11.1 and a OpenGL 3 RenderSystem is currently in development. This will make it possible to run your games on Linux and other plattforms which are supported by OpenGL etc. simply by swapping the namespaces. 
The last part about what framework you are supposed to learn, again, i will go for the most business friendly and the best choice as an investment these days is OpenGL with a programmable pipeline approach and this means OpenGL 3.0 and above.
You have also to consider one aspect both C# and XNA ( or DirectX ) are technologies that are available only on Microsoft platform, this is important to stress, my point is that today Microsoft is not a big player in the industry, if you consider on how many platform you can make games, including desktop and mobile, you will easily realize that Microsoft is simply struggling in the market and more and more Microsoft will see its own market share resizing to a smaller size.
If you ask me the language for you is the C++ because learning C# or C++ is the same thing for a newbie, it's always a new language, but what the C++ can offer the C# can only dream about it; you also will develop a real know-how that you can spent on as many platform as you want and on all levels, from small games to serious development.
You may want to check out ANX, it wont let you publih on WindowsPhone and XBOX360, but it opens Linux, MacOS, PSVita and Widonw8Metro (or ModernUIStyle) to you. Good thing is you may use XNA documentation and samples to get yourself started.
XNA is a subset, someone can argue that, but in the end is just a subset of DirectX, this framework is well suited for small project and not for serious gaming.
As soon as the OEMs will stop installing Windows on their machines, and most of them already do that in practice, just see the market share percentage of Windows Phone, the entire Microsoft ecosystem will collapse and just looking at what is now, it's not that good anymore. Look at the marketplace, Microsoft has a marketplace by years until now and there is absolutely nothing, it's empty compared to what you can find on the marketplaces of the competitors. Look at the technologies, C# lives thanks to the web development, if it was for Windows Phone 8 development it were dead by years; Silverlight is a big flop, find 1 technology that Microsoft has introduced recently and see how good is performing on the market, even Internet Explorer have lost its throne.
I personally believe that C# and DirectX/XNA will have a really hard future, i think that during the lifetime cycle of Windows 8 many many people will realize how bad their choice was about the language to adopt as main language, C++ is much more suitable for the performance, for the business and for cross-platform compatibility.
I would recommend trying out those resources that seem to only applicable to windows phone or xbox.  Nearly all the xbox example projects provide pc versions, all of which have liscensing open to free use.  Look at this search list:  http://xbox.create.msdn.com/en-US/education/catalog/?contenttype=4&devarea=0&platform=0&sort=2.  Also, XNA generally performs better on the PC than on the xbox, because the second stage of the CLI peforms inlining.  (And the infinitely better garbage collector doesn't hurt, either.)
Most of the resources for XNA seem to revolve around XBOX or Windows Phone. I have successfully built some prototypes for Windows but am not sure what the limitations are in terms of distribution, etc.
I'm new to game development and want to implement a few ideas I've had as a hobby over the next few months. I want to use only C# as the development language for 2D and very light weight 3D games.
Yes.  It certainly is, despite naysaying advocates of Linux, Mac, OpenGL, and C++.  They tend to ignore the main criterion of your question: "on Windows".
no  limitations that i'm aware of although you will need to access MonoGame if you want to sell on the windows 8 store
I know that most of the people that will read this, especially advanced and senior developers, will get this as a ranting against Microsoft, but when even the founder doesn't believe in its own Corporation that is performing so badly before an important launch, that is losing important assets and presence on the market on every field, i think that you just have to consider the facts.