So to your first question I have to say 'category error'. It's a little like misunderstanding what a car is and asking if you can pull it with a team of horses; sure you could but it isn't even slightly what you'd do in practice.
A Pi is not a microcontroller - the ARM cpu it uses is a full microprocessor (a quad-core on the Pi2) with floating point hardware, the ability to use a lot of ram, blah,blah,blah. Just because it's so cheap you shouldn't think of it as some sort of PC adjunct or Arduino-like. 
If your needs are not much bigger than lighting up an LED when a button is pushed then you'd really not need a Pi. It would be like using a Tesla as a golf cart. If you want a fairly powerful SBC that can do that and go on to do a whole lot more, maybe a Pi is the answer. A big practical factor is that a Pi is so cheap you may as well get one anyway.; you're going to have fun with it one way or another.
You can run full linux (the default is a Debian derivative) and develop using any gcc stuff (plus many other languages) or a minimal RTOS, or even do bare metal if you really want. The forums at raspberry.org cover all of them. You can even run RISC OS which is the only OS worth caring about (yeah, yeah, I know). I shudder to write it but you can even run the Windows 10 IoT kernel. Yuck, now I have to wash my hands.