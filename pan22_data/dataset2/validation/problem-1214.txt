In short, it takes a single cer and applies it to the local machine. If the user is not admin, it prompts them to restart the script as admin. I intend to scale this out in a foreach fashion so that when a cer is added to a particular network directory, the script will notice on launch and attempt to install the new cert. If user is not admin, it prompts ONLY when it needs to install a new cert.
The easiest way to pull a thumbprint from a .cer file would be to create an certificate object in powershell and import the cert in that.
I could just install every cert in the directory every time my script is ran, but I fear unnecessary overhead, and the show stopper is that it would require admin rights each time it is ran, rather than on first launch or detection of new certs.
There is a little more logic in the middle, but overall that is what I seek to accomplish. My primary problem is pulling the thumbprint from the remote .cer files, or determining if they are installed locally in a different fashion (to my knowledge the thumbprint is the most logical way, but I am totally open to suggestions).
The primary problem is that I am unable to gather the thumbprint from the .cer file, and Google suggestions are fruitless thus far. If I can figure out how to pull the thumbprint from the remote .cer, I am fairly certain I could figure out the foreach logic necessary from that point.