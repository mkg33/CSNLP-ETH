I believe a work around using DirectoryIndex instead of FallbackResource might also work. The following will match /a/script/ to the file /some/path/to/a/script/index.py then  /some/path/to/a/script/index.html then /some/path/to/subfolder/index.py and  finally /some/path/index.py. This relies upon DirectoryIndex honouring absolute paths.
Repeated calls to DirectoryIndex are appended to previous calls. In my case FallbackResource was not working and i stumbled upon this as a solution. The above is for CGI/Python files but I believe it will work in your scenario as well.
In your case you would need a top level .htaccess file with FallBackResource /index.html, then FallBackResource /subfoldername/index.html in each relevant sub folder.
The sites about which I originally asked this question are no longer live, but here's what i ended up doing.
I can use it the way it is if that's the answer, but it would make it a lot easier to manage the sites that I have if this can be done.  The sites use the same basic code with different themes and database connections, and the way it works now I have to modify the htaccess file every time we deploy a new version of the code (because it is checked into Git).  If we can make it that someone doesn't have to remember to make this modification every time, that would be really great.
As you could probably guess, the / at the beginning means that the path is relative to the site/vhost, and here the path needs to be relative to the directory.
I would have thought that the FallbackResource path is relative to the .htaccess file in which it is configured, but it seems that it is actually relative to the requested URL.
I manage a large number of PHP applications using front controllers and the following htaccess file:
However, when the site's rewrites contain slashes, for example, if the application is /store/ and the path within it is products/1234, then Apache looks for /store/products/index.php instead of /store/index.php and returns a 500 with the following message in the log:
I ended up moving these sites to a server running Nginx, where all configuration is done in the config files of the server using a try_files directive. It was much easier to manage that way.
I don't think this is possible to do easily. I've tried various combinations of DirectoryMatch and LocationMatch in the main configuration files using the newish variable interpolation available in these two directives.
Although something like FallBackResource index.html is entirely valid configuration, I share Michael Hampton's concern that any use of relative URLs can cause problems. In the case of FallBackResource index.html for a particular directory tree, index.html must always be present otherwise you will get the recursion loop you describe for requests where index.html cannot be found.
(If I were using mod_rewrite for this instead of mod_dir, I would have to add a RewriteBase to each subdirectory as needed, in a similar fashion.)