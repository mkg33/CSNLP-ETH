I'm particularly interested in what others who has walked the same path as us feel. For the record, the game is a spin on the real-time strategic genre with a classic 16-bit look and feel.
I would suggest reduction. Generally break down game development into series of tasks, not abstracted under Marketing or R'n'D umbrella but actually tasks.
It seems to me like the only problem with what you're doing is that people will feel like they're being undercut and that you may be 'weighing' the money in your favor. Otherwise, it seems doable, albeit complex.
It's somewhat similar to what's some of Agile methodologies use, when features are broken down to functional and non-functional tasks and each assigned points depending on time this task will consume.
A friend and I are building a game together and having a great time with it, and we hope to sell the product at some point. The prospects for actual earnings maybe be practically nil (and we aren't getting our expectations up), but regardless, we wanted to get some of the hard "profit splitting" questions out of the way.
You're a small team, hobbyists, and all expending effort towards just one game to be sold and not even founding a studio and therefore you need to act like a Volunteer organization and everyone's help is important.
I'm going to suggest the simplest method of all.  Take a small cut off the top as founders, 10% between the two of you maybe.  Split the remaining 90% equally between anyone who puts in a solid amount of work, including you two in the mix.
If you're uncomfortable with that then offer a deferred salary to be taken out of first sales and remove the percentages entirely to make it entirely a business transaction instead of a shared effort.
I've personally only experienced working on a project(s) with one other person, but I think I can still offer my two cents.
Once you start playing games with "your job is only worth 75% of what this other guy did" with a deferred payout on a hobby project you're only asking for bad feelings when what you really need is team spirit.
So this example, one person can find and filter candidate for example for programming role, but I guess he won't be interviewing the, existing programmers will interview candidates for programming roles, and existing artists will interview potential artists. This is more accurate way of dealing with tasks I think.
For example you already broken HR into: hiring, legal, distribution. You can move further and break following actions: Finding candidates, filtering candidates for interviews, interviewing candidates, handling contracts.
Originally, my feeling was that we are both putting a full time effort into the game and would split the profits evenly. I am a programming and his role would be art and music/sound. Game design and concept generation is something we are both doing together. This has become complicated, as we are now looking at "hiring" a few other interested parties and we want to split any profit up fairly. We were looking at perhaps hiring another artist, and perhaps a sound person. We are not sure at this point what level of commitment our hired hands will be willing or able to commit.
Our idea was to make a very large list of all tasks that need to be done across all categories (programming, marketing, art, sound, research, design, etc) and assign weighted values to each task based on the time requirement, difficulty/value of skill set required, and importance to the project.
The classic formula tends to go something like a 40-40-20 split if there's a programmer, artist, and sound designer. Although even this is just the 'general' thing, and by no means a rule of any sort.
Then, we can assign tasks to our hired hands and as they complete them, they would earn that percent of any profits that came in. My hope is that my original partner and I would divy up the "remaining" profit (the money our hired hands don't earn) equally when all is said and done. There's still a lot of details to work out, but our feelings were to divy things first into broad categories as follows: