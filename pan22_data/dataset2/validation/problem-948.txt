If you can't or don't trust the person you are giving access to data, than no technical controls can give you what you are looking for. Users will forever be the biggest security hole. 
It is certainly more secure than sending a plain text message. Once a message leaves your servers you can not be sure that the transmission is secured with TLS thru the entire journey (Unless you set up a direct trust and force TLS between two endpoints).  You have to assume your message is in the clear once it leaves.
With the encryption service - Microsoft allows you to encrypt the message and send to a recipient.  The recipient can read the message by accessing it thru a web portal or mobile application.  They have an option to sign in with a matching Microsoft ID (it must match the recipient address) or use a one time pass code that is generated and sent to the recipient address. 
You can try to layer in additional features like TLS (but you can't guarantee it) for transport.  You can also be sure proper SPF, DKIM, and DMARC records configured (but these still rely on recipient honoring them) to help.
Because you do not own and can not dictate the terms from which the recipient will receive and open the message you must TRUST that they are the person you are sending it to.  If the recipient account is compromised than they may be able to open the message.  This includes some man in the middle scenarios where the means to access the message (the portal link and encrypted message), as well as snagging the key.  
If you want end to end encryption you need to rely on S/MIME or something like PGP. But even with these tools you can never be 100% sure of who has the private key or if the recipient was compromised. 