Assuming that's the case, and that the work you're doing will end up on a Web server/hosting provider eventually, I'd recommend getting into the habit of setting up test sites (with or without authentication) on the Web server that will host the site eventually or a dedicated test or staging server.  
As ErikA mentioned though, it would be much better to just use the firewall rules or Apache config and limit access to the appropriate users.
If you had a dialogue opened up for every time someone hit your IP on port 80, you'd have a never-ending flood of dialogue boxes. The real solution is to either require authentication on your site (.htaccess style) or alternatively, set up your firewall to only allow connections to port 80 from a pre-determined list of IP addresses.
You could keep a terminal open and tail -F /var/log/apache2/access.log (or equivalent). You could also tail -F /var/auth.log | grep -i port 80 (or equivalent) in another window. Or you could use multitail to watch both files in the same window.
The reason for doing this is a) you don't have to open up the world to your workstation b) you can leave it up 24/7 c) you won't have any "surprises" when promoting your changes live (like broken paths or absolute URLs that you forgot about) because you've already been doing this all along.
Is there a reason why you have port 80 open to your development machine in the first place?  i.e. are you letting clients view the work in progress of the site off of your Mac?
This can be as simple as setting up another virtual host in Apache on a sub-domain such as dev.example.com or if you don't have control over their DNS, setting up client.yourdomain.com and having that on a separate virtual host somewhere.
You could just use tcpdump/wireshark and watch eactly what is happening.  Add the appropriate filters so you don't get flooded with more information then you need.
You could also check out the app, Little Snitch. It's pretty great at catching all kinds of traffic, and let's you decide which bits you want to allow and deny. I think it's exactly the tool you are looking for.