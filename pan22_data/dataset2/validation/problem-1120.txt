Thus, your component container should be the abstract "Component" type. Behavior specific to each component should be contained entirely within the specific component class.
The more important thing to cache friendliness is combining components that need each other's data. Position and speed will usually be accessed very close to each other. Same with position and, say, rotation. So put them all that data in a physics component with the physics behavior. So rather than trying to optimize all the components in aggregate, focus on the actual function of each component. Basically, assume the cache will be wiped between each component update and structure your data accordingly.
The main purpose of the ECS pattern is to be programmer friendly, not speed. So this is essentially an architecture problem, although I will also address your cache-friendliness concerns.
It seems like you're setting your components up like data records, whereas they should contain all the relevant behavior for their subject. Think