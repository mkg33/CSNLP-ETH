... and deal with raw files. rsync -aAXv /path/to/mounted/mmcblk1 /path/to/destination/folder. This may or may not work for you depending if your filesystem is mounted or not.
... and accept larger space useage. Instead do something like dd if=/dev/mmcblk1 of=NanoPi.img bs=64K conv=noerror,sync status=progress. Smaller block size gives you a little bit more security in case of read errors. If dd fails to read at least one sector - rest of the block will be not processed. Block size is the max amount of bytes you may loose for one bad sector. conv=noerror ensures cloning continues in case of error. conv=sync shifts pointer in destination file forward in case of read errors so data remains aligned and thus valid.
I am using a Nano Pi device which has Debian OS in it. The OS image is existing in its internal memory (8 GB). The total size of the used memory is somewhat 4GB. I want to take a backup of this OS into an image file.
You can not do this easily using dd because block device is just a dump of bytes. It may contain data of long deleted files in unallocated space. dd is not aware of that because it is filesystem's job. You have few options:
The total image file size goes up to 8GB. How can I make the image of only the used by memory and not all?