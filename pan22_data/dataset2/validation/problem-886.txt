I prefer to move it to /tmp because I remove the file from the web application but keep it just for if I removed the wrong file or I just want to know how is built the file.
In addition to his answer, I would like to say that when attackers infect your server they usually (not always) create a file with execution permissions.
Allowing www-data to write on public directories like wp-content/uploads don't prevent the attacker to write a php file and call it from outside. In this case, and using apache2 as a webserver, you can add a .htaccess file in your public directory to disable the php execution. Here is the .htaccess file that I place in wp-content/upload to avoid php execution in public directories.
Moreover, set the right permissions are ultra-important. I'm one of those who think that apache user (httpd, www-data, apache...) must not be able to write anything on the server but wp-content/uploads or whatever public directory you have configured. This prevents of plugins or core to be modified by attacker, if the attacker access to your server with apache user. I like to use this script to set Wordpress permissions.