When you point at someone, there are three fingers pointing back at you, so I have some questions for you:
Or if he's like me, perhaps he might want to try something that involves making something do things in the real world. I always liked messing around with my old Commodore, but what I really liked was building stuff. The two came together when I went to uni and specialised in real-time control. It totally rocks to work on some software, and then jump in the car where the engine controller is driving with that software. These days it's easier than ever to do this, with Arduino and Raspberry Pi.
My advice is to "get used to disappointment", but be as helpful as you can, with whatever your son wants to do. Many people get to college (as another question here recently stated) with no idea what they want to learn about or do with their lives. This is incomprehensible to me (I was asking about computers when I was 7, long before the IMSAI hit the streets) and so I have no advice on how to generate interest, convey it, inculcate it, support it, or any other thing to do with it. It just is whatever it is, or it aint.
For example, you can take a game that has shooting dynamics like an FPS or a scroll shooter (could be 2D to make things easier), and try to modify the shooting dynamics. Maybe have the shots fire 3 bullets at a time at different angles. Let him see you browse through the code, grepping around to find the relevant code. For a more complicated modification make the bullets travel slower, light up like lasers, and curve toward the enemies.
That's where your son has to think about what he enjoys. Does he want to write games? Does he have ideas for some app? Does he want to try playing with AI? Does he like making up automated Word and Excel documents? Is he keen on music technology, perhaps?
The other solution I found was to readjust expectations. Rather than imagining 'super cool awesome game that rakes in loads of money', I aimed more for what the programming language could do, within the resources I had. Text-based Rock/Paper/Scissors with a learning AI, for example.
A screwdriver is one of the tools you'd use as a mechanic. Coding is one of the tools you'll use in software engineering. But coding is not engineering. Engineering is making something. I'm sure your epic coding sprees are not just "hey, I'm writing C++"; they'll result in you saying "I've made this, isn't it cool?" for an end product you think really is cool.
It is quite possible that your answers are: zero, zero, zero. That has been the case for me throughout my life, about basically every area which interests me. That bad news is that you cannot get anyone else to like the same things you do. I look in vain for anyone else who has even heard of 16 Bit Lolitas, let alone likes their music. (You could start.) I don't know anyone else who eats bags of Ghirardelli dark chocolate chips. When I was a child I had no friends who also scavenged parts from discarded TVs, or was even interested in electronics. 
When trying to initially build things, the reality didn't match expectations (my expectations were: 2D game that's super-cool awesome, the reality was a console text 'game' where you input a number and got a generic response back).
You say that your son is interested in something "related to programming, technology, and/or game development", but that is a massive area which includes many non-programming things. I used to own an acoustic and electric guitar, but try as i might, I had trouble making myself practice. What really interested me was the equipment: guitars, amplifiers, microphones, PA systems... But I couldn't "form a band" that did event staging. (I was involved in theater in High School though.)
Besides making a simple game from scratch, like Kevin Workman suggested, you can also look for an open source game and try to modify it together. It'll allow him to see the reward much quicker. You can make incrementally more complex modifications. Let him watch you and imitate you. Explain everything you do, including the thought process as you're doing it.
And conversely, if I'm slogging through some configuration scripts to do testing, that's pure work for me. No fun at all. It needs to happen, and it's still programming, but it's the bit where I just have to push through the boredom.
I did a computer science degree but after that in order to learn industry specific skills in web application development I taught myself by creating simple games. What I did was actually trace art I loved (by sci-fi and fantasy artists) to simplify the digital component. This resource development is separate to programming but it made that part very easy and captured my imagination. Then I broke the graphics apart to make "puppets" I could animate and interact with then coded the collisions, movements etc. and a game loop using Flash ActionScript. Then I built a website locally so learned HTML etc. The total scope of the project was clearly defined, simple, and and felt and looked good when I showed people. It was fast to develop (outside of the learning component), rewarding and built my self-esteem. Many years later I'm a senior software engineering consultant. However motivation comes from within. I think its best to find a passion he might have and run with it. Computer programming is a broad area these days after all.
These days I get a sense of enjoyment (maybe not 'fun' per se) from solving key issues and automation of particular tasks, which on a small scale seem trivial, but on a larger scale combined with other automation tasks are really awesome.
When I was a member of a large and active Amateur Radio club recently, I did not know one other person whose interests really were similar to mine. The field is simply too large. I was an expert in magnetic loop antennas. We had an expert in contesting, one in Morse code, another in microwave equipment, and so on. All of us were essentially alone in our interests, and no matter how many times we introduced our fav topic, it fell flat, even in a group of like-minded people! 
Some things are just not available. When I was a child, no one ever sought out and took me to the large, active Amateur Radio club right there in town. Parents and other adults didn't know or care about it, so I was not helped with that. Maybe you could find out what your son is really interested in and get him there? Taylor Swift's parents relocated the family to Nashville when it was obvious that she could sing and write music.
I find there's two causes for programming not being fun: not be able to do a particular thing in a particular way, and a very 'manual' (low-level) programming language.
Of course, this was frustrating and made the amount of effort seem not worth it. I was trying to program in C++. In reality, I probably should have been using a higher level language (JavaScript, Python, even Java). C++ does feel like work in comparison, and without knowing what language he's programming in, it might be worth introducing a language that does more of the legwork, if not already.
Let me explain. Programming is a tool, not an end goal in itself. Suppose your son was interested in being a mechanic. You haven't come here saying "my son isn't enjoying fixing cars", you've come here saying "I've spent all this time teaching him how to use a screwdriver, but he doesn't see the fun in using a screwdriver".