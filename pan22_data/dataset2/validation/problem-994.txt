Ultimately, you must do your own due diligence to determine if you want to trust something and then take countermeasures (run in a sandbox, a virtual machine, etc.) to mitigate any unknown factors or miscalculations you made when deciding whether or not to trust.
The point is, publishing hashes is useful for lots of special cases other than just downloading the file from the same site hosting the hash.
I downloaded a huge amount of files, but discovered the use of md5 and sha as integrity checkers quite recently. From then I always prefer to check it for big downloaded files, even if I never found them to be corrupted. 
I usually only bother to check if my download was interrupted and I resumed it later, because HTTP requests with a seek offset are not as widely used, so something silly might have happened.
Verifying it with a hash from the same site I got it from is of little use, security-wise, as other answers and comments have said.  It can be more useful if you downloaded from a mirror, but the hash is from the original upstream.  Or if the filename is ambiguous, and for some reason you aren't sure you got the exact version you wanted.
Checking MD5/SHA1 hashes is a good first step and you should do it when you have time. However, you must consider your ability to trust the hash provided. For example, if the the author's website with the hash is hacked, then the attacker can change the hash, so you would not know. If the hash you calculate is not the same as the hash provided, you know something is up. However, just because the hashes match does not guarantee the file is good.
A better alternative for a software author to provide integrity and authenticity is through digitally signing the files being distributed. This attaches the authenticity information to the file and does not rely on trusting some website. If an author digitally signs the file, the only way for this to be faked is a compromised certificate authority or if the developer's signing key was stolen. Both of these cases are far less likely than a website on the Internet being hacked.
The answer and choice one makes is going to be based on his/her risk tolerance and considerations of time and effort in verification.
For security reasons, YES. Consider that a Tor exit node was found to be patching binaries during download, then remember that your ISP may or may not have the slightest morals, and that they are in complete control of your internet connection.
In many cases, the download is a compressed file that won't decompress if it's broken.  If that's NOT the case, checking is not a bad idea.  I might check an ISO before burning it to write-once media.