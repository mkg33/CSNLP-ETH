If you think the hacker hacked her way into the server and then edited some files you should block the hackers way in to the machine, not just preventing her from editing certain files.
Do you have any idea how I secure those directories so the server can write in them but malicious javascript code injection is prevented?
I created several websites where some directories are set to the permission 755 and set the owner to "www-data" and group to "www-data".
This is so that I could prevent setting permisson to 777 for those directories and still make them writeable by the webserver for stuff like cache files, user uploads etc.
Schedule regular malware scans for the directories that can be written to by the web server.  This should only be the cache and upload directories. 
The culprit is probably in your web application. There are lots of interesting things to read at BadwareBusters.org.
What I think after some log research is that the hacker scanned my server and found files with those exact permissions and the where able to edit these files and inject code into them.
Setting owner to www-data make the directories and files writable by your web server.  Set this ownership only for directories you want the web server to write to.  Configure the server not to run active code from these directories.  
The injection likely comes from the active code you are running on your system.  You may want to limit access to javascript files only to directories that can NOT be written to by the web server. 
It seems my method is VERY insecure since these websites are very different in terms of which applications runs on each website. That makes me think it is not a particular upload script that is insecure, but more something to do with my permission setting.