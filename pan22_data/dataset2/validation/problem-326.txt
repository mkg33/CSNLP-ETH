So rm will warn you if you try to delete a file you don't have write permissions on.  This is allowed if you have write permissions on the directory but is a little weird, which is why rm normally warns you about it.
I may get errors because one of the files doesn't exist.  Is there any way to tell rm to ignore these files?
I'm way late to the party, but I use this all the time. In a makefile, add - to the beginning of a line to ignore the return value of that line. Like so:
The -f option means that you will not be prompted if something is not as expected. It does not mean that permissions are not taken into account.
BUT, if you have enough privileges to change privileges, you file will be removed. This is the case when you are the owner of a file with readonly permissions for owner (-r--------). As owner, you can chmod u+w, then remove it: rm -f will remove that file.
That sounds like almost what I want, but I'm not really sure about the permissions part.  Is there a way to do this?
I'm writing a makefile that will clean up some useless files at the end of the compilation.  If a target has already been made, it will of course skip that target and the useless file may not be there.  So if I do this:
you newer get error message Problem occurs, if error generate not to STDERR 2 but STDOUT 1... It's take place when command generate not error but warning.