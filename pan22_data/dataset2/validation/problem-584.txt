There is no solution from SQL Server that allows for 'transparent' data access. Querying across many servers requires Distributed Queries (ie. linked servers) and having a solution deployed with hard coded queries against linked servers across many instances will quickly hit the ground, for reasons of availability and maintainability. Is surprising how mobile databases really are: server change names, failover happens, databases are moved for reasons of load balancing. Given the tight coupled nature of DQ this doesn't really work.
Here is a blog with an example: http://www.mssqltips.com/sqlservertip/1767/execute-sql-server-query-on-multiple-servers-at-the-same-time/
Other options I'm weighing are using replication, SSIS packages, service broker, or physically attaching more databases to one of our larger machines.
Linked servers are the obvious choice, but I'm worried about performance and tight-coupling of a query to a particular server.  Am I too worried?  Do you have experiences to support this solution? 
I want to be able to create a sort of "single logical database" from many different server instances.
Other big deployments approached this by going SOA and relying on messaging, see MySpace Uses SQL Server Service Broker to Protect Integrity of 1 Petabyte of Data. This implies a serious paradigm shift in programming and how one approaches the solution, existing apps that use T-SQL queries will not magically transparently work on a 'farm' of servers.
We have multiple MSSQL 2005 servers that contain silos of information.  We want our database developers to be able to join across these silos in the most transparent and performant way possible.  The databases vary in size, but average in the tens of millions of rows, and are updated frequently.  The servers are physically co-located. 