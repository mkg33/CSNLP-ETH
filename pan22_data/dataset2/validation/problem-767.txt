I would be looking at the resources availible on the servers when the slodowns happen, is there a spike in RAM or CPU use, is the Database having trouble keeping up with requests etc.
2Run Virtual VM against the java process and monitor the memory usage.  (if you cant run VirtualVM, then run jconsole.exe .
Things don't magically change. There has to be a piece missing from the picture you've presented us. 
The first thing is to determine if this is a resource issue, or a problem with the application its self.
Has your application become more popular and being used by more users, concurrently than it used too, how many users are connected when the problem occurs? Are users using the application more often, or perhaps leaving it connected all day.
Secondly, could it be Java related, have you updated the JVM recently and has this caused a problem or conflict with the application that is slowing it down?
Is the application multi-threaded and has there been any increase in user load?  Sometimes threading deadlocks in an application do not appear until you get into just the right load situation, and therefore they can be a real pain to diagnose.  How long has the application been in production?  Has there been a significant increase in the database size in that time where specific malformed queries might be tying the system up?