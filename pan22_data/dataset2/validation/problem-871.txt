Or in other words, that specific bit in the bitmask cannot be set, and is returned after calculating the permissions on the user object.
We run a multi-directory environment (AD and OpenLDAP) and perform password synchronization via an internal webapp. This works well because we've disabled users from changing their own password via OpenLDAP and AD could only be accessed by the few services that require AD.
If you're having issues with setting the security, ensure that you have Advanced Features enabled in ADUC (View --> Advanced Features).
I am not sure how you can achieve this using program but in Active Directory User and Computers. Select User and go to properties. There is Option of "User cannot change password" option.
However, we are now looking into allowing PC's to attach to the AD domain. Initially, I believed that disabling password change for users would be as simple as changing the initial userAccountControl LDAP attribute we assign during account provisioning. This proved to not be as simple as I assumed.
We currently use Python and python-ldap for account provisioning (code below), Per Microsoft docs, we set userAccountControl to 66048 (Normal account and don't expire password). I tried changing it to 66112 (66048 + Disable user password change) but AD did not retain that value and instead, recorded it as 66048.
What you're looking to do is deny the SELF pseudo-user access to change the password. The best way to do this would be configure permissions on an entire OU to restrict password changes. From here, move all of the relevant user objects into this OU and ensure that the user objects are inheriting their permissions from the OU.
Also linked from that document is http://msdn.microsoft.com/en-us/library/aa746398.aspx, which describes how to programatically adjust permissions on user objects.
Similar to maniargaurav's solution, but you can do this programmatically using PowerShell (if it's Server 2008 R2 or using the Qwest AD cmdlets link text) or VBscript. If you're using Python now, you should have no issue enumerating all users and doing a script such as the following (from Scripting Guy at MS) link text.
Has anyone done something like this before? I'd prefer to accomplish it either by using Python or a set-it-and-forget-it setting on AD.