I wanted to set this up as I don't think my 2950 switch supports private/public keys and I hope at some point to get that knowledge, but I am not there yet.  
Note:  This answers the question in title only for those using search engines.  If you are using servers like the question example, private/public key pairs and not this answer should be used
To avoid the string of comments:  Yes, this is insecure (not even arguably insecure).  I would strongly recommend you only do it in a lab situation on an isolated network or a similiar situation that does not involve production servers or potentientially production server without a full reset/format.  
The password will be then kept valid for the remainder of the session.  You only need to run the first command once, and can add as many keys as you want after that.  When the session is killed, so is the agent so there is no hard-coded storage of a password.  
You definitely would want to use keypairs for passwordless authentication as Michael stated, in the end private key is pretty much a big password in the file.
Your environment is holding your password and it is risky that any scripts executing can leak this password if you don't know what you are running 
No, There is no method to specify or provide on the command line the password in a non-interactive manner for ssh authentication using a openssh built-in mechanism. At least not one what I know of. You could hardcode your password into expect script but it is not a good solution either. 