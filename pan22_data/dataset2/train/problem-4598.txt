This is largely reimagining what you're doing, and depending on how you prefer it, you might move the nullcheck into updateLogo.
Also it cleanly abstracts away the Image-loading and has clear behavior in error cases. It also gets rid of the superfluous boolean flag you have.
Oh and I changed the variable names slightly. Use speaking names wherever possible, future maintainers (including yourself) may not be able to map out which number corresponds to which URL :)
I'd personally go one step further than the previous answer. I hate null-checking and therefore passing null as arguments and/or as return value. The only reason for me to do that would be if it was in an environment where performance is very important. This does not appear to be the case here. So here's my take:
This neatly hides the hardcoded dropbox URL in a (not further specified) Configuration, which allows changing the logo location without having to replace classes.
This allows you to hide the image and get rid of the IMO .. clunky null-initialization before the try-block:
This code is based on the premise that "Error handling is a responsability", which due to the SRP (Single Responsability Principle) is supposed to be separated from the code as is described in Robert C. Martins Clean Code .
I'd restructure this code significantly. The first thing I'd do is move the image-retrieval into a separate method and the image placing would then be "simpler"..