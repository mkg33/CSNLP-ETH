Basically the game is really simple and the communication only include sending a few string from the client to the server every turn and sending the calculated scores back to all the clients after each turn.
In your situation what I would do is implement the XMPP protocol and send game state via that protocol - XMPP is particularly well suited to this because it is not only restricted to human-to-human messages (you would use IQ stanzas to transfer the commands) - and servers should blindly transmit IQ stanzas that they don't understand. The advantage here is that GTalk uses XMPP so you can obviously take advantage of Google's infrastructure (or indeed any public XMPP server like Jabber.org).
The problem is when trying to use 3G internet for the server, I guess the problem is that 3G ip address isn't global and you can't use port forwarding there, correct me if I'm wrong here.
I tried this solution and it seems to work great when all the players are using the same wifi connection or by using router port forwarding.
Finally you could also try and initially negotiate a Jingle session. If your NAT is traversable you would thus get a P2P connection, and if it is not you could simply use the XMPP connection that you have open. I doubt you would actually need to do this though, because of the fact that your game is turn-based.
Why you would want to do it in the first place is beyond me. Get a real server. You can rent a VPS for like 5$/month or even less...
the idea is that one of the players creates the game and thus initialize the server, and each player connects to this client using ip.
Due to the fact that your game is turn-based you can get quite creative with your solution - you can still run the server on one of the phones but you don't need to rely (directly) on a direct IP connection.
Is there a way to overcome this issue? or the only solution is to limit my game to wifi only or think of a different solution than the standard socket programming solution? I.E web server etc.
I found a few tutorials on how to implement a basic chat on android and I started extending that example to suit my needs.
The only way to host over 3g would probably be to setup the 3G device to use a VPN, but it would be easier to just setup a Rackspace Cloud VPS.
Instead of having some one host it, just have the server make the first person in the room be the leader, and have the ability to pass leadership of they leave the game. Plus maybe use a password system for private games, but all servers show up in a public list, and have a lock icon next top the password servers. If someone starts a server they should be able to change the name and setting as leader.