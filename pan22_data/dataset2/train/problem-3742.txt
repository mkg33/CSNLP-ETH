Since everyone who has root also per definitions has access to all files on the server - no, you can't. If you don't trust the people who have root, then you shouldn't run anything sensitive from that server. 
You should be looking at these things even if you don't worry about the other sudo users - because even if you trust everyone with root on the server to not be malicious, you still cannot be certain that they won't make mistakes leading to the server being compromised, and you don't want any third party attacker to have unfettered access to your database. 
You can still protect your MySQL server, though. You can use specific accounts for specific things, so that if you e.g. have a script that does a lookup, the account used for that can't also be used to delete things. You can allow access for an account only from one IP address, so that even if someone gets your password, they can still only use it from that one machine. Or you could set it up so that the script/cron job runs on the MySQL server instead, and have it connect to the other server to get the data it needs e.g. by using passwordless SSH keys. 