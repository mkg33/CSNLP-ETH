You should be able to go into the DotEasy DNS manager and add a new A record of api.dev.myapp.example.com to the IP of that box and an A record of api.myapp.example.com to the appropriate IP for this box.
I'm comfortable leaving DotEas as my DNS as well, however if it is at all possible I'd like AWS Route 53 to be the DNS. Eventually I'll migrate onto AWS as the registrar as well.
I'm wondering what I need to do from either inside DotEasy, or AWS (either EC2 or maybe even in Route53) so that:
Also, per AWS best practices, I have separate AWS accounts for dev and prod, so they are totally isolated from one another.
You should be able to add any A record with your registrar for anything within your domain. It doesn't matter who's hosting the DNS, as long as it's properly configured. I'm assuming that DotEasy is still configured to be your nameserver (the SOA and NS records).
I'm using DotEasy as a registrar for my domain (let's call it myapp.example.com) but am hosting the app's backend on AWS EC2. I want this app backend (its a web service) to have a production URL of api.myapp.example.com and a non-production/dev URL of api.dev.myapp.example.com.
I'm not entirely sure how Amazon's Route 53 works, but assuming it's just a DNS server, you would need to configure the SOA and NS records in Route 53, and configure DotEasy to have the NS records point to the Amazon Route 53 servers. By doing this, you're telling the world that Amazon's Route 53 is the Start of Authority (SOA) for your domain example.com and the NS servers are the final say in the domain infrastructure for that domain. If you do this, ALL DNS entries will have to be transferred (created) in Route 53. By moving the records, DotEasy will only be the registrar of the domain name, but not the DNS host. You still pay them to renew the domain yearly.
This sounds like it should work, except I'm not sure if its possible (from a general networking standpoint, not even specifically with DotEasy) to configure two different A records (both sharing the myapp.example.com domain) with two different sets of NS/SOA records!
Once this populates across the world's DNS servers, you should then be able to resolve the two domains to their appropriate IP's.