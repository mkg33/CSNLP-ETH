Well this is basically very subjective, while I cannot tell you what could break from the code side I could definitely point you towards article which list down all breaking changes. Please refer to Breaking Database Engine Changes in SQL Server 2012.
Here is a link to some information on compatibility levels with reference relevant to MSDN pages: LINK
Apart from syntax changes that might break your code, you should also test for performance as SQL Optimizer and other features might have been changed that would generate different query plans then they previously were.
You should review what changes were introduced between the versions you are referring to. If any of the changes affect your workload, you should test it thoroughly and make any necessary adjustments.
With my past experience changing database compatibility level does not makes database totally dysfunctional. The compatibility level only defines how certain features would work in certain compatibility level. To help you again MS has listed down such changes in ALTER DATABASE (Transact-SQL) Compatibility Level. The article is thorough and includes details of all versions of SQL server
Using above 2 links you need to jot down the what could possibly fail in your scenario and fix it beforehand. After this is done the process is easy you run the command
Please make sure you run this during off production hours. Now you can ask users to test if something fails and it is really important for it to work run the command again and change compatibility level back to 90. So whole process also includes bit of hit and trial method.