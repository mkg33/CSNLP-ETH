In my case, it was kicking me out of a full-screen app to display the warning message at the top of that post when I still had about 1.2GB left.  More than enough for most apps.  Anyway, nars's fix was to jump around the call to the
so you can easily see the usage peaks and upon mouseover, PH will tell you how much is being used and usually, what processes is using the most.  PH is at http://processhacker.sourceforge.net/.  It's not a cracker tool -- but it does everything sysinternals(an MS website now) Process Explorer does, and much more.  It might be described as a taskmanager (the builtin taskviewer) on steroids.   It can replace taskmgr.exe as the manager that comes up when you press Ctl-Alt-Del -- though make sure it is set to always be on top if you do that).  
then copy the original to a new name and patch the new file (I used dwm.bin so I could patch it with gvim).  Then I stopped the desktop manager, copied my patched dwm.bin over dwm.exe and restarted the desktop manager (through the Services control panel).
The middle graph shows memory.  The 2 bumps to the right are where it hit the max, bumped me from full screen and asked me what I wanted to do, then continued, with the app regulating its gpu memory down soon after.
Anyway, I digress -- it will show you how much dedicated memory you are using and if that is a real problem.  Apparently, "shared" video memory doesn't count.  Lemme know if that works.  Would be interested to know if 'nars's method works for you if you are comfortable using it (if not, very understandable!)... 
Disable "Do you want to change the color scheme to improve performance?" warning and the answer posted by 'nars'.  His answer is the only one that actually solved the problem for me and others.  Most people seem to think that the warning actually "means something".  It's a MS message not too different from another: "Who'd ever need more than 640K"?   In this case, MS's trigger points are based on fractional points (2/3's and 3/4's for warnings and it switching off the aero desktop).  While that heuristic may have worked when GPU memory was smaller, it doesn't, today, when GPU's have GB's of memory.  