Personally, I totally roll with VMs and I prefer VMware ESXi. I've not had the problem you did. A similar alternative (that I haven't tried in a year) to VMware ESX is Citrix XenServer. Last time I explored Citrix XenServer, I found the support utilities to be too underpolished for my use, but I continue to hear good things about it. VMware also has the Virtual Appliance Market Place, which I think is very handy.
The utility nLite (or RTSe7enLite for Win7) is really really awesome for helping you create your own custom Windows installation disks - with that you can arrange for software updates to be preinstalled as well as various software packages too. This is more work to set up than Ghost, but is free to use and will deal with differing hardware too.
I love the portablity of VMs, the scalabilty of their hardware footprint and the abilities to snapshot and make copies, I find those features invaluable and extremely enabling.
As I see it using something like Ghost can be pretty (extremely) helpful for this sort of thing - however not as much if you're dealing with differing hardware configs.
What you're asking for can be done. However, in my experience the effort expended to set up the environment to do so is pretty large. When expressed in units of "effort to hand-install a server", the effort break-even point is further down the road than it is for Unix. If you're only doing it once or twice a year and have no prospects of having to do it a lot in a short period of time, it's still easier to do chunks of it by hand. 
If you used a virtualised system such as Hyper-V or VMWare ESXi you could create templates/clones of the various stages or configurations of installations to either re-use directly or branch from. This can be an astonishingly fast way of deploying customised servers.
It IS possible to PXE boot a naked server, install Windows based on a prepared answer-file, deploy the SQL software to it, and configure the SQL software. And if you really wanted to go there, Wake On LAN capability would allow you to trigger this all from remote after a server gets plugged into the network. I do recommend the blog-post for a list of the technologies used in each step.