If you have the need (space/security/whatever) to move any schema to a different database, you won't be able to handle the references any longer. That is probably the main reason to request killing the references.
Schema are nice to isolate tables from logical subsystems. Foreign keys guarantee data integrity. These are orthogonal concepts - as obviously data integrity between subsystems is also a must have. Accounting and Shipping and possibly Central CUstomer Data do not live in silos where a customer can get deleted while being used in accounting.
In Oracle you resolve this problem by creating SYNONYMS for objects that are outside of the current schema.
While demanding the destruction of foreign key constraints without detailed reasoning is foolish, it makes sense to keep the outside references under control. What if the schemas you are referencing are named differently on your new server?
Just think of of this: The child table owner schema begins to create record in its table and unknowingly prevents the parent table schema user from deleting records from the parent table. Is it something it anticipates and appreciates?
The only "bad idea" that I can imagine from doing this, is that you cannot grant the  REFERENCES object privilege (the one needed to create a constraint that refers to a table) to a role. I has to be done schema/user by schema/user. 
As such, I think the requirement of the DBA is a sign of incompetence. Please anyone can step in and provide a counter-argument - I would be happy. But this is how I do it on SQL Server (although, again, our definition of schema is IIRC a LITTLE different from the oracle definition).