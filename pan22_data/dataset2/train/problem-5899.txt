While it is not usual and might not be a good idea, it should be possible to bridge a public network interface similarly as the private 192.168.8.0/24 subnet has been bridged in the example, giving clients IP addresses between 192.168.8.128 and 192.168.8.254.
However, it still would have prerequisites that aren't currently met. You would need to have a public IP address subnet to be bridged (i.e. used for your VPN client address pool) instead of these independent IP addresses from here and there.
OpenVPN bridging (TAP mode) behaves more close to your desired state. You should learn the difference between bridging and routing, but basically it simulates link layer device, giving you an IP address from the other side. You should also learn about OpenVPN Ethernet Bridging as it is useless to copy the whole manual here, but here's a relevant citation (configuration after installing brigde-utils & editing/running bridge-start script) for further discussion:
The exact behavior you would like to achieve seems impossible. With a VPN in TUNnel mode you'll always get an internal VPN IP and be behind a NAT towards Internet. While all your traffic seems to originate from the IP address on the other side, it's still shared among other VPN users and doesn't expose the client computer directly to the Internet with that IP.