OpenVPN w/ Sophos SSL VPN ran into an issue as well where the "OpenVPN Interactive Service" service was not starting successfully on boot.  The client machine was a Lenovo Thinkpad T530 and came with pre-installed services from Lenovo that were causing the issue.
The answers above all concentrate on the "official" openvpn client - the Securepoint client http://sourceforge.net/projects/securepoint/ doesn't suffer this problem, and is also open source.
If you disable both of the Lenovo services above then the "OpenVPN Interactive Service" was able to start.  It seems the Lenovo programmers fiddling with what is allowed to start and what it can pause on boot does not play well with OpenVPN.
It has to do with permissions.  Run is as an administrator with the UAC disabled and it will work.  You have to disable the UAC.
Finally, I created a down script to re-enable the UAC when the VPN tunnel is disconnected - thus, returning the user's machine to the original state.  
To get it to work for me, I go to the openvpn-gui binary, select Properties, select Change Settings For All users, and click Run this program as an administrator in that window.  Stop and restart the Openvpn-gui.
So I sought out for additional solutions and came across several that suggested disabling the UAC for Admins only.  Since most of my users needing to VPN in will usually be local admins on their laptops, I figured this solution would work.  So I tested it and it did work.  Here's my final solution.
I'm having trouble getting the OpenVPN GUI application to add routes to a Windows 7 client.  I'm using the same config file I've used on a Windows XP client except that I added the following two lines:
The issue was less pronounced after running Lenovo & Intel updates but was still occasionally the "OpenVPN Interactive Service" would timeout when booting up the computer.
To get this to work, I had to run OpenVPN GUI as administrator.  Thanks to David Mackintosh's suggestion, I modified the exe file to always run as administrator for all users.  Now, timing was key - I needed to make sure that the UAC was disabled before the VPN connection was even initiated.  Fortunately, the OpenVPN GUI supports the creation of a pre-connect script by simply creating a batch file with the same name as the config file with a suffix of _pre.
FINAL NOTE:  I realized that the OpenVPN GUI provided at http://openvpn.se doesn't like some of the directives in the config file (such as script-security or key-direction) and will not start unless you comment them out.  This may not hold true for all, but I had to use the OpenVPN GUI that comes with release 2.3.2 of OpenVPN
The last two lines above will repeat for about 30 times then a notice will appear showing that the VPN is connected with an IP of 10.8.0.6.  The last line of the log, however, shows this:
I can make a connection, and I am assigned an IP address from the 10.8.0.0 pool - which makes it seem to me that the tunnel is up.  But looking at the log below, it appears the routes aren't being added on the Windows 7 machine.
With this, OpenVPN GUI runs without any complaints, the routes are pushed from the server and are properly set on the Windows 7 client.  I've tested this on multiple Windows 7 machines and all work.  By doing it this way, I avoid the mandatory reboot that comes with disabling the UAC.  Thanks again for all the assistance, I hope this will benefit somebody out there with the same problem I ran into.
I'm truly grateful for the assistance from Zoredache and David Mackintosh.  You both offered suggestions that pointed me in the right direction.
Several Google searches reveal that I needed to run the application with Administrator priviledges.  I am doing that, and I have even attempted running the application in Windows Vista compatibility mode.  For some strange reason, Windows XP isn't an option I can select.  Is there something I'm missing?  My config - without the two lines I told you about earlier - works perfectly fine in Windows XP.  Also, it works fine on the Windows 7 machine if I use the OpenVPN Client (and not the OpenVPN GUI).
Disabling the UAC altogether did work for me, as well as modifying the openvpn-gui binary to always run as administrator for all users.  Unfortunately, however, I wasn't comfortable with having my users disable the UAC permanently - or with the mandatory reboot that must be done each time the UAC is enabled or disabled.  This meant a reboot each time they used the VPN and disconnected from it.
Once the "OpenVPN Interactive Service" is allowed to properly run at startup it then is able to allow the OpenVPN to commit the routes even with a Standard User logged in.