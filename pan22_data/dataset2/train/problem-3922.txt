As far as I know, Zabbix has installations with 10k+ devices. Maybe you need to distribute the load, i.e. by placing the database server (if your solution needs one) to another machine. You also might want to look at Zabbix Proxy.
For that type of environment, the key will be CPU threads and something that can handle low latency disk writes. I would use a standalone server (versus a VM), provide 12 or more cores and plan around direct-attached storage that either has 6 or more spindles or can leverage SSDs for the OpenNMS RRD directories. OpenNMS can also be tuned on the data collection and logging fronts to make it more efficient. Reaching out to their professional services team to help with the install would be a good option.
Here's how I'd do it, keeping in mind that my default viewpoint is minimum cost, open source, and the assumption that whoever is implementing it can do some coding:
Coming from a University environment where we did availability monitoring (Ok/Warning/Critical with alerts) and performance monitoring (graphing, RRD) of MANY network devices (mostly Cisco, but checking lots of metrics)...
I think this is being overanalyzed. First off, identify the minimum set of metrics that you need, what resolution, and how long you need to store them. Even if you really do need to poll each one of the 3,000 devices every 5 to 10 minutes, for 40 metrics, do you need to retain RRD graphed data on them, or can you just use something like Nagios to alert if a metric is outside a predefined threshold?