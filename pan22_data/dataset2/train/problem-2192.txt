If it's a high end game then you may also use SSAO which is runtime. There is a cheap SSAO Pro package in Unity Asset Store too.
I'm creating a low poly 4X game that will likely have upwards of 200 unique hex tile models once everything is said and done. The colour palette consists of 16 different colours. I understand that if I want to reduce the number of draw calls I could simply UV map each individual model to the palette and there wouldn't be a problem.
However, I want to add an ambient occlusion effect which is best achieved by baking it on in Blender. This precludes me from using a single material for all my models since each model will have a different pattern baked onto the palette. I'm going to go out on a limb and say that having a different material for each model could create a pretty severe CPU bottleneck.
So, what would my best solution be? Should I abandon AO altogether? Perhaps I should try lightmapping in Unity (though I've heard AO baking in modelling software yields better effects)?