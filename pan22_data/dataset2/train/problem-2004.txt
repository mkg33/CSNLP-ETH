All of them until recently knew only about classical DNS overt port 53, either UDP or TCP (both are mandated by the specifications). If the software permits, any of them could work in exactly the same way (authoritative or recursive) through DNS over HTTPS or DNS over TLS.
The connection between recursive and authoritative nameservers is still an open problem, which lies mostly about the problem of authenticating the server (which is a mandatory step to have a sensible use of TLS).
As for the overall security, looking beyond just privacy, you also have DNSSEC, which allows for end-to-end data authentication (for signed zones).
DNS is an insecure system 'per se', because the information travels in plain, unencrypted text. As is well known, DNS requests pass through a hierarchical system that includes different servers: "recursive resolvers", "root nameservers", "TLD nameservers" and "authoritative nameservers". But with the advent of DNS-over-TLS and DNS-over-HTTPS, does the system of this entire structure (the architecture itself) change significantly? I say this because I don't know if the DNS servers can, at this time, process encrypted requests. On the other hand, document rfc8484 (which deals with DNS-over-HTTPS) mentions that the servers that support this protocol are called "DoH server", but are there currently "root servers", "TLD servers" or "authoritative servers" prepared to process DNS-over-HTTPS requests? I know that CloudFlare, for example, does have servers of this type, which act as "recursive resolvers".
Authoritative nameservers are nameservers configured with some given zonefiles for some zones  and reply with this data for queries reaching them about these zones. The DNS is hierarchical, so authoritative nameservers delegate part of their zone to other nameservers and so on, from a classical "root" point, that is in fact at the top.
At this point, these are used to tunnel DNS traffic between the client and the recursive resolver in order to provide privacy for that leg of communication specifically. Beyond that point it's still regular old DNS.
* Well, DoH does allow for some new functionality, like push, but that's not really what you are asking for.
Recursive nameservers are the one used by applications: they do all the hard work of providing an answer, no matter what, by doing iterative queries toward multiple authoritative nameservers.
You can find on https://doh.defaultroutes.de/implementations.html a list of implementations of DOH/DOT. Some can be just a "proxy", handling the HTTPS/TLS transport but not doing any real DNS operations as those are just forwarded to a real (over port 53) recursive nameserver. You will note in fact that previous standard recursive nameservers (unbound, Knot Resolver) are more on the DOT wagon than the DOH one.
These  two features use the same protocol (DNS) with the same messages, return codes, etc. A software like bind can provide both, even on the same server, but it is not recommended anymore. Other newer nameserver software are either only authoritative (ex: nsd, powerdns, yadifa, KnotDNS) or only recursive (ex: unbound, Knot Resolver, dnsmasq).
DoT and DoH do not fundamentally change the system*, at least not the way these new(ish) protocol variations are used in their initial form.
To work, the DNS needs two kind of nameservers, two different features: authoritative nameservers and recursive nameservers.
The authoritative nameservers for the root zone (having the list of all TLDs) are called the root nameservers as a shortcut. But they are authoritative nameservers like any others. On the level below, you have set of nameservers per TLD (as each TLD can be managed by a different entity), so those ones are called "TLD servers".
A nameserver is any given server on which a DNS server software runs. One of the oldest one is bind for example.
As a conclusion, while everyone focuses on this, there are other sides that instead do indeed change how the DNS behave, like QNAME minimization.