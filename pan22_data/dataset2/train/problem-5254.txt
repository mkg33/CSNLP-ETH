Ignore specifying overriding the hostname directly via the Hostname declaration and instead determine is at runtime, by evaluating it as part of the ProxyCommand using %h to reference it in the command (also use %p instead of hardcoding port as 22) i.e.
One could even have a more generic stanza, where by you can specify any host without a "-" to just be treated as is, or as per anotehr matching stanza(s), but have a generic "-" approach, to specify any -:
I had a similar problem and ended up writing a script that generated all the boilerplate for me. I no longer change ~/ssh/config, I change ~/ssh/config.in and rerun my script.
I know you can use %h in the Hostname argument, but that would be the hostname. What I really need is some sort of string substitution, like bash's ${VAR%thingie}. Is this possible?
The User parameter is specified in case you need to manually map to different users on the different classes of hosts.  ControlMaster and ControlPath are specified to allow SSH connection re-use.
However I have to connect to lots of these machines. Instead of putting dozens of entries in my ~/.ssh/config, is there anyway I can have something like this:
I have to administer a whole pile of hosts over ssh. However I can only access them through a certain gateway ssh server.
Additionally, newer versions of ssh client support the [-W host:port] to perform the same function as nc (netcat) directly. As such, we can use the modified: