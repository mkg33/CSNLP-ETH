You have the interface Correlation. I think it is confusing to have a variable named correlation which is a Double and not a Correlation and a method correlation() which isn't returning a Correlation. Maybe you should rename the interface (i.e. CorrelationCalculator)
For me it is not easy to give you any hints related to stock related stuff but maybe some general thoughts to think about:
The PearsonCorelationImpl inherit CorrelationVariables and Correlation. Dose this make sense? It seems like other implementations will inherit the same, so you probably could combine the parent class and the interface.
You have a getter for the sourceClosePrices, so you should use this instead of the protected variable. In general I wouldn't use protected members inherited from the parent class (use getters instead). I searched for the definition of those variables in the class and it needed a second before I looked into the parent class member definitions. It confused me. 
The getClosePrices() returns a array of doubles. The ordering of this array depends on the ordering of the stockDetails list. Maybe this is ok in this context but in general this is not very clean (IMO). Each close price should be dependent on its StockDetails like with a HashMap.
And this is why: if you are going to get many requests per second (even minute) and all the computation (which maybe take some seconds) only needs cpu time but no I/O, then you do not get any performance boost (depending on your hardware ), but it'll be slower. Let's say you have 7 request at the same time. For each request you allow 5 threads for calculation, so you have 35 active threads. Your hardware can handle 8 or maybe 16 threads in parallel, then the threads wait for cpu time. Context switching, many cache misses all the time. You have to test if this improves your performance. 
In PearsonCorelationImpl.compute() you have a variable named correlation of the class type Double. Why isn't this a double?