Fortunately, there are also a number of fixes (not specifically for syslog-ng), but you will need to make some kind of compromise, is the short version.
Also, check your syslog's DNS settings - for clients pushing out syslog, there is no reason I can think of to use DNS. For the receiving server, if you can do without DNS lookups, that might be worth trying to see if it helps throughput. 
Also, consider reviewing your logging configuration more generally - I know from (sad) experience that there can be a tendency for people to enable TRACE or DEBUG logging and leave it on, which generally does not do syslog (or the system more generally) too many favours. 
I will note that to reproduce this I had to reload syslog-ng (service syslog-ng reload) while the remote server was unreachable (I'm effectively disabling the network port at the switch) and I was simultaneously generating considerable traffic to be sent to the remote server.
I'm optimistic that I can characterize this well enough to file a bug against syslog-ng, and will update here if/when I do.  
I want every server to send logs to /var/log and and copy to a remote syslog-ng server.  I've heard anecdotes how logging remotely can hang your application if the network has problems.  Should I be concerned about my app hanging when logging remotely, and how would I fix/work-around it?
I would definitely recommend you at least investigate the central log server to make sure it is able to deal with the volume of logging - and tune it otherwise (I've had good experiences doing this with rsyslog, where a fairly 'standard' receiver config was unable to keep up, but tuning it allowed us to support several orders of magnitude more traffic). 
This can indeed happen - there are a number of situations where that kind of lock up can happen, and they all basically boil down to the syslog queue or buffer being full, so that writes are delayed.
also note that I'm logging via UDP, which you would expect to facilitate fire-and-forget non-blocking-ness.  
Do note that there are also bugs that can cause improper behaviour in such situations - notably, rsyslog caused this issue on RH (https://bugzilla.redhat.com/show_bug.cgi?id=519203). 
Rsyslog provides a guide for high performance setups (http://www.rsyslog.com/doc/v8-stable/examples/high_performance.html), and failover syslog servers (http://www.rsyslog.com/doc/v8-stable/tutorials/failover_syslog_server.html).
similar to bagster/growse's and gparent's experiences above, I have also encountered a situation where calls to vsyslog() hang (for 30s to 20m) when using syslog-ng while the remote server is unavailable.  
That (generally) tends to compound the problem, because things start failing, and want to signal as much, but need to wait for syslog to accept their messages. 