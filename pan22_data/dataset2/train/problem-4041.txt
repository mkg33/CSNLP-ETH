Here's a little experiment you can do yourself to see why using a texture atlas (or tileset) is a good idea. 
Now, on my computer I can easily draw a 450x450 (202,500 tiles) checkerboard without breaking a frame rate sweat. That's a pretty significant difference.
Tilesets are good for the engine, since it then has to only store one single path to one picture. And that picture is easily made into power of two to better be compressable and decompressable, reducing the size of your built game.
Although not a big concern for small games, keep in mind that for a computer it's way easier/faster to load one big image, than multiple small ones. So it's one extra reason why putting all tiles together is better.
Finally, you can simulate what it would be like if you used a tileset instead. Simply change the code to only use the white.png texture like this:
The point of using a checkerboard pattern like this is to force the SpriteBatch to continually switch textures during rendering. This simulates what's going to happen if you draw all your tiles on different .png files.
Next you need a way to measure the frame rate. You can make a quick and dirty FPS counter by declaring a couple of member variables in your game class like this:
Now that we know there's an advantage to using a tileset keep in mind that I could still render 22,500 tiles using 2 textures instead of one. Sometimes if you're only making a small game this will do just fine. 
When you run the game you should start seeing the frame rate spew out into the console (in Visual Studio this will be in the "Output" window). 
** Note: this really is a quick and dirty FPS counter. Technically some of that code should be in your Update method but it'll do for this purpose. 
Sometimes it's okay to take some development shortcuts if it makes your life easier. It's always good to know these things but don't bend yourself backwards trying to do something if it's not really achieving anything in your game. At the end of the day, if your game runs at 60 FPS you're all good.
Nowadays the most important reason to use a tilemap instead of separate pngs is just for organisation. Do you want a stage to have a different theme? Then you simply create a new tilemap, that follows the same rules as the previous one, but has a new appearence, and that's it! Compared to making so many separate new tiles, and have to point to them on each stage, it seems simpler.
The goal is to draw a checker pattern using a white.png texture and a black.png texture. The result should turn out something like this:
However, all this texture switching will cause the frame rate to drop dramatically. On my computer I could only draw a 150x150 (22,500 tiles) checkerboard before my frame rate suffered. Depending on your graphics card, you might have to fiddle with the numbers to see the same effect.