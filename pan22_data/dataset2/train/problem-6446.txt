Have you tried replacing the order by with a group by and then having count(*) > 1 statement. That should show if there duplicated rows
Also put an index on (column_to_distinct,primary_key, colA) in table1 and colA in table2 as to allow MySQL to do an index scan.
You can put ORDER BY inside a separate query then use INNER JOIN to get the rest of the columns that you needed.
OK, first things first, talk to the PHP devs to see if this situation is taken care of for you, which would then save a lot of pain and heartache!
Other than that, try with a group by instead of a distinct, see what the performance differences are - it may be that the group by is faster based on the indexes you have on the tables.
With the GROUP BY option, you can add a count(*) then talk to the php devs to ensure they know that if that result is 2 or more, then they need to handle it differently than if the result is a 1.
Putting ORDER BY inside an INNER JOIN allows MySQL to perform sorting faster because there are fewer columns to sort.