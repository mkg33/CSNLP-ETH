In isPrime(), the i != number condition is redundant, since the loop-terminating condition is i < number.  Actually, you could terminate earlier, at ceil(sqrt(n)).  However, a much more efficient way for testing the primality of many numbers is to use another algorithm, such as the sieve-of-eratosthenes.
In addition, I would extract the loop into its own primeCount() function for clarity and reusability.
No, I wouldn't say you're using too many variables (except for c, which doesn't appear to be used anywhere).  Not enough functions, though.  And perhaps too many spurious assignments.  Specifically, I'd suggest something like:
However, it is hard to keep track of them when so many of them have one-letter names.  It would be more pleasant if you renamed b → primeCount, x → primeCandidate.
Yes, you are using too many variables: the compiler should have told you that c was unused, and you should always compile with warnings turned on.
That will do the same thing as your code.  Also, please consider using variable names that are not just single-letters.