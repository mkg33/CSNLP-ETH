I'm not sure if master-slave is deprecated, but I think if you're building mongo fresh, you should consider building a replica set.
If you have high usage of your application with many accesses deploying on two server it's the better way, whereas instead you have an application that is used only during the day, you could stop or lock the database, make a backup, then restart or unlock in the nightly hours ...
I think the new recommended environment for mongo in production involves "replica sets", which is actually at minimum three servers. If the primary server goes down, the other two servers elect one of them to take over. When the original primary comes back online, another election is held, and a new primary is selected.
If you really don't want more servers, then you may consider running all secondaries side-by-side on the same server as the primary (but on different ports). However, this isn't very redundant.
The reason of the wikipedia suggestion is that with mongoDb (until version 1.3.1) you  couldn't make a backup without sopping the database first.