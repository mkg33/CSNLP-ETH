Have the clients send their move (north, east, south or west) to a server. Then, have the server move sprites with these moves and send back the images of each sprite so all the clients can then draw them on the screen. (I have tried this but keep getting an error as I think the data takes too long to send.
My question is, do these make any sense at all? Why don't they make sense (because I doubt they do)? Is there a better way to approach this task entirely?
Another option would be to send the positions of each sprite over the network instead of the move. This way if any client experienced lag their screen would be corrected as soon as they reconnect. This would, however, be the hardest to implement as I would have to write new sprite classes and I'm lazy.
For some context, I am making a Pac-Man game (using pygame) and I need a little guidance on how to structure the multiplayer side (using sockets). I have a few ideas (the first of which I have tried)
I could have the server simply relay all incoming moves to all other clients, but I feel as though this may lead to glitches if the connection is slow for one of the clients (i.e. the different client screens may go out of sync with nothing to correct them as all they are receiving are instructions. I think this would be relatively simple to implement.