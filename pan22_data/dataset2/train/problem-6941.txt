Wow, that's a wide-open question.  There are a lot of things to think about, from configuration details of the OS, to SSHd options (allow public key only), to Apache configuration, which can be a full-time specialty.
Starting from the bottom, there are several freely-available configuration guides and utilities that will help tremendously to get you started:
my standard guide for Linux security is the Securing Debian Manual. you may need to change specifics for CentOS, but the concepts are solid.
I would suggest changing the port of SSH and MySQL to something non-standard to avoid casual port scans.
Stefan, you can tunnel the mysql connection via ssh to manage it from other machine. It still think that you are connecting to it locally as per the my.cnf setting, but you need to ensure the privileges table has admin_user@127.0.0.1 with the proper permission level since you are connecting to it via the tunnel.
Then, don't forget that you need to carefully plan and design the application that runs on top of it all. Since code that's more commonly used tends to be more commonly reviewed, that's an area I'd look at pretty hard.
MySQL can be configured to not use TCP networking at all, but to use Unix sockets instead.  I'd recommend that.  
Also, make sure you apply security patches as soon as they come out, and read and follow all of the security documentation for the products you're using.