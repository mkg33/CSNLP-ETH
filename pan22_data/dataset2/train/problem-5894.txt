My feeling is therefore that HT on multi cores makes sense on applications that need many cores for the same purpose. AND my feeling is that HT will not makes things slower (its effect may be zero in the worst case, but not below zero - i.e. slow down processes).
HT on a multicore CPU is not as good as it was on a single core CPU. But multicore (without HT) is better than HT. And a dual core is not as good as two single cores.
Well, basically it has the same use as on single processor machines: It adds additional hardware threads unless there is ressource contention. That simple. Same argumentation there and as with single processor the use totally depends on the application.
Office applications dont even need 6 cores, the the question is moot. Same for games - most dont even support multiple threads so ecores or hyperthreading makes no difference to them at all.
So all in all - it depends - propably mostly wether the application core fits into the CPU-cache so that HT can switch fast enough to make sense.
I know hyperthreading from the time long ago where the processors used to have only a single core. The technology was really usefull then. Right now, Intel is still offering hyperthreading with 6-core processors (so they can be run in 12 threads). I'm wondering what is the use of this technology for multicore processors? Has anyone done some tests?