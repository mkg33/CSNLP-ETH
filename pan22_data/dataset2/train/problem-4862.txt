For point 2 to work, you need to 'teach' nginx to treat certain files/urls differently. You basically tell it that everything ending in .php should be forwarded to the php server. The same is true for django apps. You need to tell nginx to forward certain URL patterns to a django server, which then runs the python scrpts to generate the HTML. 
According to official uWSGI docs : A web server faces the outside world. It can serve files (HTML, images, CSS, etc) directly from the file system. However, it canâ€™t talk directly to Django applications; it needs something that will run the application, feed it requests from web clients (such as browsers) and return responses.
A Web Server Gateway Interface - WSGI - does this job. WSGI is a Python standard.uWSGI is a WSGI implementation.
Long answer: nginx itself can only serve static files. It can read any file on your server and send it out via HTTP, but that is it. It does not speak PHP, Python, Java, ... by itself. If you would point nginx to a python file, it would just treat it as a text file and display the source code, because it does not know what else to do with it.