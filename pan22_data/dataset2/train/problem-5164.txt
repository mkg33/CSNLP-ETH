This will give you a starting point to see what is going on, and guaranteeing to alert you of any problems until you have the job issue sorted out.
Put an order by on the cursor.  I've seen cursors to sys.databases have "issues" when you allow SQL to select the order the data is returned.  Ordering by name should be enough.
Is the backup running at the same time as backup to tape or some other process copying or accessing the backup files? If so, I'd bet it's failing to overwrite the file because it's in use. If you have room for multiple backup copies, you could change your proc to add a date stamp to the output file, but then you'll need a cleanup routine.
With the introduction of SQL Server 2005, the cursor loop through sysdatabases and even sys.databases appeared to change so it wasn't reliable - and this change in behaviour could be seen with sp_foreachdb as well. 
I have tried to figure out this problem and it seems many times users posted the solution that if you make the cursor declaration insensitive then it starts working. So I tested it and yes it does just make sure you cursor declare is static and it starts working.
Check your server level cursor threshold setting - if it is configured as -1 then it means all cursors are getting populated synchronously in other words while trying to read cursor key set data is synchronous and all is tried to read at same time. If we change this value to 0 that tells SQL server to do a asynchronous population in simple words cursor can fetch the records while key set will still be populating and you will see that after doing this change at server level you will never miss any database using cursors.
I found changing the type of cursor helped (I think it was fast forward), but ultimately I switched to solutions such as Ola Hallengren's backup and maintenance solution. Like most things that are critical such as backups, you still need to cross-check all the databases to ensure they are backed up even with these potential solutions - and you obviously did, so well done!