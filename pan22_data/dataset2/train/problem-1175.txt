It's the price of fame.  Every once in a while someone will try something against pretty much every site (I see a scan for vulnerable versions of phpMyAdmin every couple of days, for example).  Since the machines involved are almost exclusively zombied end-user machines, "taking action" against them is useless (any sort of "active countermeasure" is, of course, completely wrong, but even trying to report the infected machine to the owner is almost certainly futile).
Drawback: You will propably have to explain how to install and use that key in all kind of web-browsers...
As @womble said trying to ban the IP or subnet is worthless.  Odds are the person running the attack isn't even on that IP anyway. They'll just switch to another zombie and keep at it.
Since you are also the developer, you might consider coding an appropriate error handler to ignore and/or maybe even trigger a "tar pit" response/handling.
First thing you want to do is validate EVERY input that you receive and fully parametrize every query that you pass into the database.  This way the SQL Injection attack won't be successful.