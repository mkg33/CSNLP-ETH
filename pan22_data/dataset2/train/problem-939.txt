Using the pull method, the rsync daemon will run on the source server; using push, the rsync daemon will run on the destination server.  Here's an example of a pull daemon config file:
How you specify the path will depend on which rsync port you use (e.g. cygwin specifies paths like this: /cygdrive/c/projects/project_one).  You would then issue this command from the server:
This will only copy across files that meet filespec (e.g. *.avhd in your example) from source dir (c:\Hyper-V\vhd in your example) to destdir (z:\backup\hyperv_vms). The switches tell it to skip older, newer and changed files so it will only copy across files that exist in the source directory that do not exist in the destination already. 
(where the IP address is the source machine's IP address).  If the backup server is a Windows box, you would need one of the many cron-for-windows implementations.
If you need to roll your own incremental backup, I would suggest finding a version of rsync that works with Windows, or install Cygwin with the rsync port. It's designed to do just that and has a lot more options than xcopy.
I've seem same files on different servers having times which are "off by a small amount" - could that be the cause?
The /M parameter tells it to copy only files with the "Archive" attribute set, and resets that attribute at the same time.
You can see whether or not this is set on your files by changing to the folder in a command prompt and running attrib any files with an "A" in the first column are waiting to be archived.
The "archive" bit is a part of the file system, like the "Read Only" bit or the "System file" bit. It was traditionally used for old-fashioned "naive" backup software so that it could tell whether or not a file had been changed since it had been archived last. The OS should switch on the archive bit any time a file is changed (or set it on newly created files) and the backup software then backs up the file and switches the bit off to show that it has been archived now.
I would use rsync for this purpose.  You can download a Windows-compatible binary or get it as part of Cygwin (I recommend the former approach unless you already have Cygwin installed).  You can either push files to the remote site or pull from it.  I prefer the pull method, but either will do.