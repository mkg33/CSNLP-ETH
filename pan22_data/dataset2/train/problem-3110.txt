I've built a Server / Client environment for my Unity game which is pretty simple. It is written in C# with asynchronous sockets. To keep it simple, the player sends his input data and the server broadcasts it to every connected player.
My first approach was to sent the data every frame. As you can imagine that was too often and the game was laggy with only two players moving simultaneously. Then I've read about interpolation. So I reduced sending the data. I now send only position data if a certain distance was walked or after a certain amount of milliseconds. The rest is calculated via interpolation. Unfortunately I got my interpolation code from a tutorial using the Unity multiplayer functionality.
Now the result I get is that the player kind of jumps. I have a guess why. The player sends his position when he reached it. I think that is too late. But I have no idea how I could fix that problem.
I seriously have no more idea and unfortunately I never have been good in maths and physics, so I hope someone can help me here. If there is any more information needed, please tell me. I tried to reduce the question to the most important things.
I have two objects. A player object, which is using the script PlayerMovement and a prefab which is using the CharacterMovement for in game movement. I think these two scripts are the important once to help me, so here they are: