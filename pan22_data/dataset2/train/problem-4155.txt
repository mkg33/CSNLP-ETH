Your current solution is the equivalent of rolling at least 1 million dice and leaving them on the floor. You then get another 1 million dice and manually set them to match the 1 million you've already rolled. You then pick out certain sets of those 1 million dice and start adding up scores, and re-rolling them.
Try a more functional solution where you roll one die and keep running totals. I would bet you could shrink your code by 80% at least and it would run way faster.
This is very inefficient use of time and memory when really all you need is one die. The garbage collector has to keep track of these several million dice and the CPU has to constantly fetch new memory locations when checking the results (the equivalent of you hunting around your floor). You are also forced to write helper methods to add and sum all these dice which makes your code rather confusing to follow.
Think about how you would go about testing your theory by hand. You would roll ONE die and keep three running score totals. One for normal score, one for if you converted the Focus the a hit, and one for if you rerolled Target Locks.
ps. I would agree with eurotrash that extension methods are designed to extend the class they are attached to. Methods relating to dice rolls belong in a die class, or program method. Not attached to a generic list.