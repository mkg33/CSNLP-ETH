Doing some research I found this that indicates that compression also needs to be enabled on the Coldfusion side when it generates the HTML from a template. I can't find the exact source but if I recall correctly the dynamic compression is targeted at ASP.Net and PHP, but for the latter it still needs to be enabled in the PHP framework as well.
Finally, make sure your client is sending "Accept-Encoding: gzip" headers on the request. If it is a standard browser, it will by default, but if you are using wget or some other tool it may not. You can use Fiddler to see the entire HTTP conversation, including headers and data.
Also, IIS will not compress the page by default for an HTTP/1.0 request (used by some proxies such as Squid) or headers which indicate that the request came from a proxy server (Via: or X-Forwarded-For:). This is a conservative default to deal with the large number of older proxies out there that don't handle compressed HTTP content properly. You can override this behavior by editing IIS configuration files (either at the server or site level).
Therefore I am assuming the reason your not seeing the compression happening is because it needs to enabled on the generator side, in this case Coldfusion.
"Content-Endcoding: chunked" should never appear in a server response. "Chunked" is a separate part of the HTTP spec entirely, "Transfer-Encoding". You should be looking for "Content-Encoding: gzip", potentially in addition to "Transfer-Encoding: chunked". Here is an example from Google's home page:
You can follow the troubleshooting steps mentioned here.. HTTP COMPRESSION in IIS 6 and IIS 7 using Service Account
Now, as far as debugging your issue goes, IIS7 compresses based on content-type. So when it sees "Content-Type: text/html", it compresses the page. So first, make sure your scripts are returning a content-type that IIS sees as compressible (text/*).