Have you tried making a Regex that matches any of the strings in the list mentioned? If you create the regex in advance, it will probably be faster than looping over the list of strings. Convert the list into the regex using
As a result, checking _shouldAutoSubscribe only adds extra work.  The only times you perform fewer operations is if the input name matches one of the first three elements in _shouldAutoSubscribe.  It's a wash at four.  Anything else is extra work.
That said, your ShouldNotLog method can be simplified.  There is not much reason to check your auto subscribe list prior to checking your suppress list:
I have the code below that gets hit several hundred times per second. I'm wondering what I can do to improve performance. It seems that there should be some way to build up a substring index. Is there some existing examples of that or an explanation on how to do this?
If possible, though, an even better way of doing it would be to extract your telemetry names to some numerical ID and use enums or ints.  Number comparison will be far quicker than string comparison.  However, you state that your input names are superstrings of those appearing in your lists, so I don't know if that is feasible.
Next, for readability, I would instead use string.Contains.  If you check the .NET source, string.Contains calls string.IndexOf internally with an Ordinal check, so it is effectively the same thing, but it declares your intent far better: