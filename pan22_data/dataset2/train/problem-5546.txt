I wouldn't target a time period so much as a percentage of users, for instance, if you target 4cpus, you'll only hit 45% of users, but if you work to 2, you'll get close to 90%
With 5-ish year old hardware, some people are still using XP. And that means that you can't even code with DirectX 10 or OpenGL 3. And OpenGL 3 has a lot of features that you'd really benefit from, like framebuffers and such. Honestly, I'd bump up your system requirements just a bit so that you can include those features. 
Firstly OpenGL 1.1 stuff like Display Lists will still work in a new context provided you have the compatibility profile (which is generally the case). The only problem is if you expect to port to OpenGL ES, one of the console specific graphic library (they are generally stripped down OpenGL similar to OpenGL ES) or even WebGL (which would require quite a bit of reworking anyway).
Lets consider that 1.1 is likely to be supported, in full, by ALL modern hardware. 1.1 was released in 1992. I'm not coding the hard way just to support 20 year old PCs. :-p I think its reasonable to assume most gamers are running hardware that bottoms out at about 5-year old mid range.
Personally I would recommend using vertex/fragment shaders and VBO's. They have been around for quite a long time now and offer great performance improvements. You could probably even provide a simple fall back if you wrap the functions in a class.
I think the newer methods are designed to universally be either one of two things: better performing, or easier to code. I read somewhere that its never both though! XD
I had a read of a few chapters of one of those fancy new OpenGL4.2 books. Almost all of the features that I rely on have been deprecated (like Display Lists), which lets me assume that there are better ways of doing all these things.
What version of OpenGL is most widely supported by ~5ish year old hardware? What version makes most sense to use, given these considerations?
When the OpenGL spec is updated, they only ever add features. So in theory, the latest and greatest hardware with support for the Core and Compatibility profiles should run super old OpenGL1.1 code just fine. This has turned out to be true. I've spent 12 months learning OpenGL1.1 and have a fair grasp on it.