Notably missing are the infinite permutations of choices for local installations of software, e.g. the GNU tools - usually you want them in the PATH before the system versions. Also, I left out directories that are more likely to be useful as a historical curiousity, like /etc and /usr/libexec.
First - set a basic path which should be valid anywhere. Then you need to know where you're running:
It's endlessly debatable whether the Solaris /usr/ccs/bin should be before or after the GNU versions of the utilities. Realistically, you'll have occasional problems because of this no matter which way you choose.
In particular, you don't want to be adding to $PATH blindly in .bashrc or you end up with a mess on a sub-sub-sub-sub shell. You want to include all the sbin directories, because important tools can be there. You want to include /usr/ccs/bin:/usr/ucb as Solaris puts a few things you're likely to use in there.
The problem I've had in the past, specially with AIX, is that for some commands, you want your 3rd party install to take precedence, so then you place /opt/bin before /bin for example.  Later things break because other utilities rely on the PATH to give them the native tool in /bin/.
what is a good universal PATH setting that allows a good common set of commands, but also includes the extras, like 'ifconfig', 'ping', and 'make' that are often not there by default?
I'd started with saving my old path before modifying it, so that subsequent calls to my startup scripts would not result in ever increasing PATH values...
I wanted X11 (even if only to call eval resize on remote ssh sessions to establish COLUMNS and LINES environment variables)
For the root user, I'd be very careful; and by that I mean to not try and use a common PATH, do it per OS if you have to.
I second dsully's programmatic approach for testing directories and adding paths.  Also, when I add $dir to $PATH, I normally add $dir/../man to $MANPATH (if it exists).