Looking at the guard on the while loop, I would conclude that you don't know the break keyword. As an interviewer, that would be a red flag unless the job was advertised as open to people who don't know programming on the expectation that the company will train them. (Actually even break is unnecessary: the loop just needs to check the break condition).
Even this is more complex than an approach which appends to a longer array and does one loop, trading memory for simplicity:
As mentioned in another answer, LinkedList would be much more efficient for this than ArrayList because of all of the calls to Iterator.remove().
This code doesn't compile. That's a really low bar which you should be sure you cross before submitting it for review.
The main method should at most handle I/O. The calculation should be in a separate method which takes an argument (the number of people in the circle) and returns the solution. There shouldn't be any debug printing.
isTrue has been mentioned in comments and another answer. isNeighbour also warrants inspection: everyone is a neighbour. What matters is whether the person is a shooter or not.
These approaches loop once per shot, and there are \$n - 1\$ shots fired, so it takes \$O(n)\$ time and space. It's possible to solve the problem in \$O(\lg n)\$ time by thinking about who survives an entire turn round the circle.