It'll also depend on how long you keep the session open. The initial handshakes can be quite expensive, but once the connection has been made then it shouldn't slow things down too much. So as long as you have persistent db connections it shouldn't slow down too much.
While there is indeed overhead in enabling SSL encryption (extra round trip at connection, encrypting of packets) –  actual impact will vary based on the characteristics of your environment and application workload.  Even if you’re told (or find) a specific ballpark estimate, it may not apply to your situation. 
I have a security compliance officer that would like me to implement SSL encryption for the data transmission. I have had a look but I can't find any impact studies on this. Does anyone have a rough idea of the performance degradation for adding SSL to an OLTP SQL Server? 
It will have an effect, but i think you'll find it'll probably be insignificant compared to time spent in the database. As usual with all things performance related it's best to do some profiling for your specific scenario. It'll be dependant on the hardware you have, which ssl software, and all sorts of other things.
Recommendation is to test throughput and response time of a known workload - with and without SSL.  While it takes more effort to set up the test, you’ll then be making your decision based on the intricacies of your environment.