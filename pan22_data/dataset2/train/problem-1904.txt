What relationship is there, if any, of "materials" and vertex/pixel shaders (or the "effects" that combine the latter two)?
Is this correct?  Where can I get a little more history/info that either corroborates or corrects the impression I have?
The fixed function pipeline was essentially one monolithic "effect" (or pair of vertex/pixel shaders) that you couldn't change. You could only pass it different parameters to control the behavior, whether these parameters were render states or D3DMATERIAL9 structs.
I have the impression that before the advent of HLSL, materials were explicitly handled by Direct3D or OpenGL.  I also have the impression that with HLSL, many prior effects are now handled directly (and generically) via the rendering pipeline in vertex/pixel shaders.  In other words, I hae the impression that materials are often little more than what DirectX would call an "Effect."  If so, this means that many models that specify materials would be transformed by a content pipeline into an "Effect".
It's a partial reimplementation of the fixed function pipeline using D3DX effects. It'll help you understand the parallels between the two concepts.
It's the distinction between fixed function and programmable that is most important here. When you're using shaders, you define the shading model yourself. Therefore, even though many of the surface properties that are described by a D3DMATERIAL9 (e.g. diffuse color) would likely apply to your shading model of choice, it's up to you to do something with those values.
Materials in the Direct3D 9 sense were simply parameters for the fixed function pipeline, which implements a Gouraud shading model (IIRC). The values of a D3DMATERIAL9 struct can be thought of as nothing more than shader constants. The definition of a "material" is entirely dependent upon context.