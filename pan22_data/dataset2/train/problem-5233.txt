Another thing - you've added some async behavior to your *Reader classes. While I'm not sure what they actually do (sorry tl;dr) you might benefit from decoupling the file parsing logic from async behaviour. Again, it might at least, allow you to easily run tests.
Next thing, you create some object within classes with new(), maybe you should create them externally and pass as a constructor parameter, in other words, do dependency injection. You don't need to use any fancy framework, just create all the components in Main() in proper order and start job. If it makes sense to define an interface for any of the injected classes, consider doing it.
In this scenario all parts should be as much independent as can be, communicating between themselves through interfaces. Such decoupling would at least allow you to test each module separately.
Same goes for all hardcoded parameters - put them in a *Config class and just set as default values.
Ok, so my 5c is that just looking at the code, I can clearly see that you should rethink what each class should do and re-module the whole solution again. For example, the http communication seems scattered across both FileTailReader and RolledFileReader. After reading the aim of your task, it seems that you have a typical IN - process - OUT scenario.