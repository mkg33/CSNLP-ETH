I don't know of any package that is capable of doing what you want to achieve, but there could be a package. 
You could first differentiate the series, then apply the classical method based on standard deviation you mentioned.
Is there any method to remove these points or is there any python library I can use to remove these points. Normal standard deviation and median filters do not work well for these as they also remove the points which are not circled.
I am familiar with the method of removing outliers based on the standard deviation and median values. Drawback of these methods are that they do not account for the neighboring data points.
On way to programmatically deal with this problem is to calculate the difference between two (or multiple for smoothing) consecutive data points. Then you could do filtering based on these values by using a threshold.
For example, in the data show below I do not want to remove the values which are simply maximum or standard deviation away from the mean. I want to remove the points which are circled in the red. The other extreme values are common in the area should not be detected as outlier as these data points have similar nearby data points.
For example, taking windows of, say, length 100, you can compute the mean and std for for these 100 successive observations, and see whether any point falls above the 3 sigma rule. In this case, the circled outlier would still be recognized as such, while the others should not, as they are not so outlying w.r.t. neighboring data (i.e. within the window that includes them and their neighboring observations).
You could compute mean and standard deviations in sliding windows, and use those to remove outliers. 