I'm guessing that your performance is GPU-bound.  You're simply asking your graphics device to do more work per unit time than it's capable of handling;  36 million vertices per frame is a pretty decent number, and hardware instancing can actually increase the amount of processing work necessary on the GPU side of the equation.  Draw fewer polygons.
Why does reducing the batch size make the problem go away?  Because it makes the CPU take longer to process a frame, which means it's spending less time sitting inside of Present() waiting for the GPU to finish rendering.  That's what I think it's doing during that gap at the end of your Draw() calls.
The reason behind the specific timing of the gaps is harder to divine without understanding the whole of the code, but I'm not sure it's important, either.  Do more work on the CPU, or less work on the GPU, so that your workload is less uneven.
I think you have a garbage problem... maybe you are creating/destroying to many objects and that spikes are the garbage collector routine working...