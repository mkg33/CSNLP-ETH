You're trying to transfer a file. For that, you can put it on disk and use ssh, ftp, sftp, ftps, and so on, or you can pipe it through ssh as Glenn suggested, which is the right answer and the only right way to do what you want. If you're worried about resource utilization (and for high-bandwidth connections this can make a difference), then change ciphers:
rsync has a -z option that will transfer files compressed. If you want to do this in order to speed up transfer, you should use -z rather than mess around with gzip.
Don't take this personally, but from your question and comments it seems like you don't understand what rsync is actually for. It's not for moving files from one place to another â€“ it's for synchronizing files between two places. If you don't want to keep a copy on the local machine, then you're not synchronizing, and rsync isn't the tool you want.
If you send the uncompressed file, then rsync works by sending only the bits that have changed. But when you gzip a file, the resulting file is going to be significantly different each time. Piping it to rsync would at best achieve a similar result to ssh, and could even be worse.
I want to do something like gzip a file, then immediately rsync it to another server so that the created gzip file will not be written on the local server. I was thinking of doing something like this... but obviously this fails.
Understanding and keeping in mind the purpose of the sundry different tools available in a UNIX environment will let you use and manipulate that environment more effectively. A lot of tools have subtle differences or overlap in functionality, but unless you pay attention to them all, you'll miss out on a lot of the best ways to accomplish tasks.
The reason a compressed file is different each time is because it profiles the data before compressing. That means even a small change in the file can mean in a change in the profile, affecting every byte that's compressed.
If you try to do something (like pipe to rsync) and it doesn't work, it's possible you're doing it wrong, or it's possible you're trying to do the wrong thing. It's a question of tool for the job, and it's important not to rule out that whatever it is you're trying to do, there's a proper tool for it.
Rsync will likely provide no benefits in this instance, since the content it is sending will be unique.