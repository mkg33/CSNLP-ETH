Does anyone have an tips for this kind of thing? Is there an established pattern for long(ish) term logical locking? Any tips for how to ensure only one service grabs the lock at a time? (My colleague uses TABLOCKX to lock the entire table.)
In your case, the overall architecture could be like this: some process sends messages into Service Broker dialogs, according to their schedules, and listener(s) pick them up from the queue on the target side. Apart from creating separate message types, you can include pretty much anything into message body - timeout, for example, and any parameters the task might have.
Not the easiest thing to grasp, that's for sure, but once you'll get it, its advantages will become apparent.
I'm not sure if there is a named pattern for this, or if there isn't because it's a terrible idea. But I need my service to operate in an active/active load balanced environment. This is the applicaiton server only. The database will be on a separate server. I have a service that will need to run through a process for each record in a table. This process can take a minute or two, and will repeat every n minutes (configurable, usually 15 minutes). 
I'm wondering if it wouldn't be better for the new table have a column that indicates when it was locked, and that it is currently locked, instead of inserting an deleting constantly. 
Did similar thing (without applications, purely within DB) using Service Broker queues. Lightweight, fully ACID-compliant, can be scaled out almost infinitely. Transparent row locking (or "hiding", rather) is built-in. Available from version 2005 and on.
I have colleagues that have used a "lock table" in the past. Where a record is written to this table to logically lock the record in the other table (that other table is pretty static btw, and with a very occassional new record added), and then deleted to release the lock. 
With a table of 1000 records that needs this processing, and two services running against this same data set, I would like to have each service "check out" a record to process. I need to make sure that only one service/thread is processing each record at a time. 