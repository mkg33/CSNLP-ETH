I created this batch script to "unlock" any volume.  Just run the .bat script as administrator, select the volume, and press ENTER.  After it you should be able to use "Safe remove" as usual to detach the unit.
This script is based on @Rook suggestion, so it uses diskpart to make the disk offline.  When this is done, all handles are forcibly closed.  The difference in this script is that it automatically make the disk back online, so it can be recognized the next time it is connected to the system.
For now you can just attempt to disconnect the external by shutting the computer down and then unplugging it, therefore attempting data loss and then setting it up for easy removal as to prevent data loss when simply unplugging it without unmounting it.
I don't know if it was sheer chance that this worked for me, but I'm adding it here in case it helps anyone else.
I then unplugged the drive, plugged it back in, remounted it using mountvol f: <volumename> and used it for a while. When I was finished, I checked the active handles and saw the same $Extend entries I noticed previously. When I tried to do the 'normal' safe removal though, it succeeded despite the active handles.
I hear Transactional NTFS is used by autoupdate, but have no clue why the system would want to place this on an external disk and then be unable to stop it upon safe removal request.
To be honest it sounds sort of like a MBR error where the drive is stuck seeing itself as always plugged in, in which case if you were to unplug the drive while powered on you could damage the MBR and leave you with 2 options, manually repairing the MBR or attempting to use software like MBR repair to be able to access the drive again, or use software like gparted to format the disk again and set a new partition table where the error most likely occurred. 
I had the same thing happening with a flash drive recently. Like you, I kept showing active $Extend handles and assumed they were preventing me from removing the drive safely. I stumbled across this question and tried Sem's fsutil suggestion to no effect. What did work for me was manually unmounting the drive. Since my flash drive was mounted as F:, I ran: