Once they understand the concept (and hopefully have had a little fun with it), I try to generalize what they've learned to something about TCS. For instance, the above video could lead into a basic explanation of algorithms or computation as a recursive process -- "something that generates a complex structure out of a few, simple rules." TCS people, then, just study what types of rules produce what types of structure!
He uses the problem of partitioning a set of children into teams of equal total ability (assuming you can quantify the ability of every child using a number), and also explains the greedy algorithm usually used by children to solve this problem.
The posed question is really a hard one since most people have no idea what computer scientists in general do. This is very different from other disciplines.
Pretty much the same as a VCR repair man. Both consider how to get the best performance out of machines which read and write information to extremely long bits of tape.
It's a very simple problem to understand, it's easy to understand the algorithm, surprising that it is (most likely) very hard in general and embarrassing that we are still unable to prove the last bit.
You can also use people's frustration about computers ("It does not do what I want!"). You can point out that (T)CS deals with how to express things in a way computers can understand and process efficiently (referring to syntax, semantics, datastructures, algorithms).
I like this post by Scott Aaronson, which explains complexity theory as quantitative theology. Here's an excerpt: 
I always start by pointing them toward some creative, intentionally-irreverent video or article that explains a technical concept at an intuitive level. Here's a good example: Doodling in Math: Spirals, Fibonacci, and Being a Plant
I would then explain that while PCS people would see to a fast implementation or good integration in complex systems, TCS people wonder about what is possible and proving things that provide safe, reusable knowledge/techniques for PCS to use.
(i.e. the laser). This actually works quite well because most people have an idea of what a physicist deals with, be it correct or not.
From there, it's generally easy enough to go from general TCS to the domain-specific thing you do. :)