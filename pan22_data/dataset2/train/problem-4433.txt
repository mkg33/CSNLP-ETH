My general advice to achieve high passing rates is to create good supporting materials to use with kids who struggle, and to break things down (and make connections explicit) far beyond what you would think you would need to. I know that that advice is quite vague!
As with the earlier answer, they should be informed. That way, at least those that are willing to rectify their learning style, can improve their chances of success.
Let's see here. I do this with all my students. I explain with hard data (evaluation, the number of hours they spend studying, the quality of their assignments, the discipline they exhibit) that there is a good chance they might fail a given subject. 
Now, a university program is not under the same constraints, and not every student at every institution can be classified as "gifted" (whatever that actually means), so I can absolutely accept that our results might be an outlier.
If accepted, they cannot change their major at any point. That means that our CS kids will have a 4 year CS curriculum that builds upon itself, and it gives us teachers a very powerful motivation not to lose kids at the beginning. It simply isn't a viable option. A freshman who gets lost will probably remain lost for their next 3 years in the school.
30% is really troubling. Not to say that it's your fault, or the students', but there is some sort of impedance mismatch going on. In some learning communities you have the challenges of hard material and a student body that is not prepped for success and is easily discouraged. I see this a lot in bodies that have to (eg) hold down a job to survive or are the first in their family to go the school. There's something akin to survivors guilt going on I sometimes feel. Anyway, try looking into different more collaborative models like pairing everyone up with a study buddy and offering collaboration based problem sets instead of lone student homework challenges. Good luck! 
the key thing, I spend a considerable amount of time collating data about the students, before telling them that they might fail. its not really required of my job description but I do it anyway. 
I am a fan of expressing that the material can be difficult, as it sets the tone and prepares students to work hard in a course. However, if failure rates are as high as you suggest, then that suggests something is going seriously wrong.
For context, I teach at a high school where kids apply during 8th grade into 4-year majors. They are tested in math and literacy, and we interview them to see if they are generally engaged kids. We do not evaluate them on programming or CS background, because most of the 8th graders have none.
Most, will flat out refuse to believe me. I would say, 8 out of 10 would disagree strongly with me. However, 2 out of 10, will come back to me, schedule one on one sessions. They will work on where they are weakest, and then, these 2 actually clear the subjects they are weak in, while the remaining 8, will end up failing anyway, thereby proving my prediction about them.
Short answer, yes, as a educator, we must share them what we know about their chances of failing at a subject. They should know. 
I believe NCWIT at one point recommended that professors make the overall grade distributions public during the course, so that students could have a realistic view of where they stand. This is for students who may think they are not cut out for CS, when in fact they are doing well in relation to their classmates. Think of the classic case where a female student gets a B and thinks she is terrible at CS, while a male student is pulling a C and still maintains his enthusiasm and drive.
And if you are ever unsure about how to break down an idea really clearly, ask around. (Heck, I could tell you about this one website devoted completely to getting answers to the problems of CS educators ... ;-) But please don't accept a 30% failure rate as the norm, or even as acceptable. So much more is possible!
Not every kid remains enthusiastic  about CS. That's okay! They applied to the school when they were quite young, and many move on to other interests.  However, over the last 3 years, we have had exactly one student not pass the AP test as a sophomore, and that student was dealing with significant mental health challenges that also brought about high absenteeism.
However, virtually everybody can learn to code. It comes down to what work the student puts in, and how well the instructor breaks down the concepts and designs the course materials.
I'm so glad you found the retraction. I am often surprised at how far that (non-peer reviewed) paper has spread, and how few people know about its retraction. I imagine you've also seen the more recent work calling bimodal distributions in CS grades into question. 
On the topic of motivation, I found the relevant chapter in How Learning Works to be very useful (search "Thermodynamics" in "Look Inside"). There is a case study of a professor faced with a similar dilemma about sharing poor past grades, and then a breakdown of the various factors that influence students' motivation. In short, a supportive environment, student self-efficacy, and student value in learning the material are all needed in order to produce motivation. Making students feel that they may fail even if they put in effort will almost certainly lead to a lack of motivation, leading to poor learning. Luckily, it's possible to address all three factors in the classroom. Personally, my tool of choice has been active, collaborative learning activities like Peer-Led Team Learning and Peer Instruction---always from high-quality sources.