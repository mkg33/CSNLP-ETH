On the plus side, separating them out at the beginning means you should be able to separate them to different hosts if it becomes necessary without re-engineering everything from scratch.
Both machine will be down on the same time if there is required reboot. However, this is a Pro too. DB may need to get up first before webapp. You can schedule to ensure DB boot up first before web to reduce app downtime.
Depending on load and if your writes need to be transaction-safe, you'll probably hit a disk I/O bottleneck if you're using the same underlying storage. You could use something like sysbench to stress-test MySQL and see what the world looks like under that condition, though. 
But really this question as it stands is hard to answer. If there isn't heavy utilization of the components, there really isn't much drawback as a hypothetical. If you're using this in a production environment where people rely on the services being available, you need to have plans in place for backups, for hardware failover or replacement, etc...you don't mention how vital these things are.