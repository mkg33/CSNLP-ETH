Your domain should be hosted on a set of consistent nameservers. By consistent I mean that all nameservers for your domain should be serving the same data, deriving from the same zone file. The standard way to do this is to use one namemaster server and one or more nameservers that are configured to be slaves of that master.
I don't think you can achieve your failover goal using DNS. You can put multiple A and AAAA records in DNS pointing to different instances of the web site, but clients will use them all more or less randomly and uniformally.
You could set the TTL of the A and AAAA records to a low value (like 5 minutes) and change them when the primary instance of the web site fails, either manually or automatically (e.g. via dynamic DNS).
Your DNS can be hosted by the same providers that host the web site or somewhere else. As long as there is one master nameserver and all the others are slaves from it. Because your domain is not directly under a gTLD or ccTLD, you also have the option of not delegating it at all and just putting A and AAAA records in the parent domain's zone file (you say you can do this with Cpanel).
You could use a load balancer that sits on front of the web site but then the load balancer becomes a single point of failure.
You could use an anycast IP address with the secondary instance announcing the route to the block containing the anycast address with lower priority, but that requires a portable IP address block and BGP.
Now I have alreaady set the NS records for both webhosts to the sub domain but I do not know if there exists a priority.
I have a sub domain( I do not own the domain) but using Cpanel I am able to set A,NS,Cname records for a sub domain. What I want to do is to associate the subdomain with two webhost and prioritize them so that if the one with higher priority is down then the second webhost is used instead.
You can't achieve that with DNS alone, since there is no priority field in A or CNAME records. What you wish to do can be accomplished with the following:
There are more complicated setups like geo-targeted global DNS-based load balancing, or using local load balancers, but those do not sound like they fit your use case.