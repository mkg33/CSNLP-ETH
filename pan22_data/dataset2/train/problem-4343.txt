It sounds like you might want a Windows PC to be able to find the server.  To accomplish this without setting an entry in each Windows PC's hosts file, you'd just install and configure Samba:
If you want to hold the DNS info on the server, then that implies that you also need to either reconfigure every client to use the server for DNS, or provide DHCP from the server. The latter implies that you'd need to disable (or restrict) DHCP on any pre-existing router.
Samba will automatically publish the server's (short) hostname using WINS to the workgroup you specify in Samba's configuration.  And then on any Windows PC in the network you should be able to use http://servername/
I intent to develop a centos server with lamp. What I want is connect the server to any kind of home network and access it by http://myserver. I have already successfully set a static ip but I can't seem to ping it by name.
Given that most sensible Operating Systems (including Centos) can provide all the services of a router, and that in some cases, users may be using a cable modem or other such device which is not a router, it would perhaps be more sensible to make the default setup of the server as an internet gateway, with an option of running a DHCP server - and if the user already has a router, then provide a couple of simple programs downloadable to USB/CD which add the device to the client hosts file. 
If you just want to get it up and running on your own network, then the solution would be to run DNSMasq on the server or use the facilities of the router or add an entry to the hosts files on the clients.
I've never been able to get this to work with DHCP. I've always used static ips for the servers for internal purposes. You will also need to have an internal DNS server that you have set to check on your windows box. For my internal servers, I make our DNS on each windows machine first check the internal DNS server, then check external servers.  :)
You could get a standard public dns server and point the domain to your static ip.  Then it will work anywhere even though it would be actually pointing to several individual servers locally.
If you had to develop a solution with the intent to plug in the box by Ethernet to a router and access it with a browser using the server name what would you do? That's basically what I'd like to know.
Just taking duffbeer's answer a little further - dnsmasq is a very useful tool - though not necessarily what every router uses. Its not exactly clear whether you're just trying to get your own setup working or create a packaged solution for use by other people.
Either approach entails that you need to provide information to the installers of how to configure any router!