That said, there has been at least one paper that claims that cfengine is more lightweight. This facebook page from cfengine refers to the paper that is actually in the usenix ;Login: magazine: http://www.facebook.com/note.php?note_id=319929967052
How many machines? Puppet resource usage on the client is pretty irrelevant if you are only going to run it every now and then. The amount of clients and frequency of contacting the server are much more important, because the server can use quite a few resources. I have tens of machines contacting the puppet server every hour, and I've gotten around fine using just the trivial and poorly performing built-in server without any special setup.
That Puppet is "easier to use" is just a myth created by the Puppet people, go ahead and try Cfengine (also have a look at the open promise body library).
Note that I have only used cfengine (v2) and not puppet/chef etc. All of these have pretty hefty learning curves to get your head fully wrapped around how to do things. Though these days there are many more examples on the net to look at.
In your case, you don't want to maintain a fully fledged Ruby+Puppet installation on handheld devices.
Assuming your tablets and such have a reasonable amount of resources, I would think the resource impact would mainly come down to how often it gets run on the client/tablet. Once a day is quite a bit different than every 10 minutes!