It uses multicast DNS (mDNS) to discover what hosts are on the same broadcast domain as itself and essentially it becomes its own DNS server.
I'm not aware of a command-line tool that does this, but many major programming languages have libraries available to do this.
Unless your application is for a home/un-managed network, that is to say, lacking a local DNS server you just don't need it. 
Most of the Bonjour libraries should be able to do this for you; see the first example at http://search.cpan.org/~chlige/Net-Bonjour-0.96/lib/Net/Bonjour.pm
Some more information about what the program you're writing will do, and what language you're writing it in, would make it easier to help. 
Not quite; as Jon pointed out, DHCP (usually) is used to allocate IP addresses. In much the same way that ordinary DNS translates domain names to IP addresses, Bonjour is used to translate temporary domain names (within the local network) to the IP addresses providing them.
Yes - generally, your application will need to advertise its existence explicitly. This can often be done using system-provided libraries (common on OS X) or custom libraries (e.g. perl's Net::Bonjour).
Bonjour does not assign IP addresses - it is a discovery protocol - you still need DHCP/Static/Link-Local(APIPA)  IP addresses for it to work.
Nope; the laptops are mostly likely getting their IP addresses from a local DHCP server. Bonjour just helps them work out what services each can provide to the others.
Using the appropriate libraries, the program uses the Bonjour protocol to ask all the other computers in your local network to tell it what services they have available. That library will then parse the responses and present them to you in a more useful format. 