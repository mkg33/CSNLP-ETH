This guarantees one mispredict for the while so this might be a loss if they don't come in streaks. (branch prediction is somewhat dependend on global branch history so some of the lost might be redeemed again as the next x itereation should have an increased probability of predict the first if not taken after the loop exit).  
Saving on the math operations as '/' is expensive and '-0.5 *' also is a constant that might as well be calculated outside the loop.
If they are true at a near random occurrence you have a serious performance problem. If they come in streaks you can do something like this
The reason to change the code is the suspicion that the repeated calls to file output would be a large overhead.
Measuring is good, but it will only tell you what those data will result in, so you will need to reason on the code too and then measure that it isn't totally wrong.
But my guess would be the while implementation would be faster as the domain suggest some form of streaks. Merge your final decision with this code.