Nmap requires at least 1 closed and 1 open port to do a reliable OS match. By default, Nmap's port scan scans 1000 TCP ports. You can reduce the time required by the port scan phase by reducing the number of ports scanned. Here is a good set that has a high probability of resulting in 1 open and 1 closed port:
I am interested in using nmap for discovery, and to figure out the OS of each host. I understand that nmap does this, and can be enabled and controlled as described in the man page:
Ping reply is pretty standard everywhere. You can't make a remote OS detection based on ping reply. Some firewalls disable ping replies altogether (stealth mode). Here you will find more details on ping alias ICMP or if you want to dig into it try the RFC.
My question is if it is possible to disable the port scanning portion of the OS detection process. It doesn't seem to be possible considering the man page, but doesn't seem unreasonable in principle.
A ping will not return enough information to identify an OS. The OS fingerprint is based on open and closed ports and responses to well-known ports. If you don't scan some ports, how will you know what ports are open and closed, and what the response is?
There is the "-sn" option specified in the man page to disable port scanning, but nmap will complain about OS detection being unreliable without port scanning.
NOTE: If your aim is remote OS detection without getting notice, you're better of reading HTTP headers - normally your weird GET request will get lost in the logs - or try something like p0f that does Passive OS Fingerprinting. Note POF will work only if you and the host are in the same network.