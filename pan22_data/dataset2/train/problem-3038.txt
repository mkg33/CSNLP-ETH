I can't imagine what your product is that requires a dozen different VLANs or how that's physically cabled, but it seems to me that this screams for the use of some sort of VLAN tagging, such as 802.1Q.
If you sell the switches and you sell the product, you could stick with one vendor (say cisco) and write something in expect or as Jeff and others suggested . 
1) Use Net::Telnet::Cisco to tell the switch to dump the config to a tftp server, grab it from there, parse it with something (augeas springs to mind), then squirt a fresh copy back with tftp.
There is a way to do this, but it really depends on the type of switch. If it's a Cisco device, you should be able to create a default template config and just let them paste it into it. Otherwise, you could do it via SNMP, but the OIDs could change from vendor to vendor.
If I were challenged with doing something similar with a web-based switch, you'd probably find me with Fiddler2 looking at the HTTP requests, then doing something dirty with Python's httplib.
But again, VLANs are dangerous and I hope the client's network is indeed studied prior to the deployment.
This will vary between switches, but years ago when I was regularly configuring 10s of switches from scratch on a weekly basis, I scripted the whole thing up in Perl with Net::Telnet::Cisco. In modern day, I'd probably go with something like Net::SSH::Perl.