For many reasons, each website has its own user account. My public key is in each of these user accounts' authorized_keys as well. None of these user accounts currently have passwords. Not having passwords for these accounts spares me the hassle of having to manage passwords for these accounts. On the other hand, neither sudo (in its default configuration) nor chsh work with passwordless accounts.
From what I can tell, if I disable remote root login entirely, I only become better defended against attackers who:
Secondly, additional layer of security because an attacker have to findout both a valid user name and its credentials (if it is not root). 'root' user exist in all systems. So they only have to worry about pass/key part of root user to get in. 
Incidentally, I use Ansible to automate user-account creation and user-directory setup. All tasks that can be done as a website user are. 
I'm setting up a VPS to host various websites of mine. By default, VPSes created by my VPS host have my public key in their root accounts' authorized_keys file, letting me log in as root. There are a few lines in sshd_config of note:
As far as I can tell, if an attacker has a copy of my keypair, he almost certainly also has access to what username and port to use to connect to my VPS. The only place he'd be able to get my keypair is if he's managed to compromise my desktop or laptop.
My question is this: compared to allowing only public-key remote login  to the root account, what security benefits would I gain by completely disabling remote login to the root account?
If no ssh login at all for root, they will be forced to use sudo. Audit purpose it will be useful and can have controls implemented.