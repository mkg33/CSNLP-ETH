I'm using wget to create a backup of a site that's running locally on my computer. The command I'm using is:
Support for chunked transfer encoding is required in HTTP/1.1. However, Wget only ever makes HTTP/1.0 requests â€“ and it seems that your web server is ignoring the request version and returning a HTTP/1.1 response, in violation of RFC 2145.
Yeah, it's permitted for servers to respond to HTTP/1.0 requests with HTTP/1.1 responses, provided that they avoid HTTP/1.1-specific features (such as chunked encoding).
Without knowing the details of your server config, I couldn't speak as to why one of your Apache/PHP setups ignores wget's requesting HTTP version, and one respects it.
It's not just the top and bottom of your files, either - at least potentially. You're liable to find those chunk headers peppered throughout the file, too (making for a fairly corrupted file).
It seems like there might be some reason that wget is doing this. I thought it might have something to do with the way it goes through the site recursively, but I don't know. So is there a way I can do this without these extra lines in my files?
These are chunk markers of HTTP Chunked transfer-encoding as defined in RFC 2616. They are hexadecimal numbers indicating the length of the chunk that follows.
However, I will note that the current development sources (which will eventually be wget 1.12.1, I think), includes support for HTTP/1.1 requests and chunked content. There are no deb packages available for it, but if you're used to building from sources, that's an option. The latest test source package (easiest to build from, otherwise you have to grab an ungodly set of prerequisites) are at ftp://alpha.gnu.org/gnu/wget/wget-1.12-2460.tar.bz2, and were last updated Mar 16.
So this actually works pretty well, but at the top and bottom of each file there are some random-ish characters. For example, the first line of index.html is 4c11 and the last line is just 0. It looks like a lot of the files end with 0 but I haven't checked each one to see if that's the case.