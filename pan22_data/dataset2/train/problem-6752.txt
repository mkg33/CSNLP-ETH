(That can be by virtue of just touching some memory that it already got told was allocated, causing the page to copy-on-write, so it isn't as simple as "call the kernel memory allocator")
Try deploying a custom agent like New Relic to see what processes are unnecessary and start killing them. That can save your server from crashing 
Since free RAM is wasted RAM, Linux tries to use as much of it as possible. It is possible that there are lots of cached disk pages and other things kept in RAM just because there was space. Run free -m to see the how the RAM is used on your machine. It will also show you the number of megs that could be used by applications if needed (column 'free', second row.)
Technically, the process could handle those failures and recover, but practically it results in a crash.
That depends on the OS, but when you actually run out something dies.  More specifically, something says to the OS "please give me more memory", and the OS says "no".
Linux tries hard to guess what a good candidate to kill is, and I think Windows does the same, before you quite get to that state, though - kill something marginally more cleanly so that memory is freed up.
Running MySQL on a box with 32 gigs of RAM. Swap is 99% full, and there is about 200 MB of RAM  free. MySQL is the culprit of course. What happens when both RAM and swap are completely filled? Thanks!