I replaced getActiveTile() with setActiveTile(), which takes a mouse position and corrects highlighting for all tiles. It still returns the ID of the currently hovered tile in case you need that information to perform some other actions (e.g. marking it as pressed when a click event happens, without having to search by coords again).
Which will cause .size() to only be evaluated once. If this is actually an std::vector, you might consider using iterators as well.
When you don't care about processing order (we don't in this case), you can also write your loops like this:
If you only have 9 tiles, just iterate over all 9 every time. Set the one currently being hovered to rollover, and reset the other 8 to button. Don't bother remembering the previous mouse position and trying to reset just one (unless you have hundreds of tiles, and even then I would recommend this approach until you empirically find it to be too slow).
You're doing ++i in your for loop, which I assume someone told you to do because it's "faster than i++". The more important optimization here is to take the .size() call out of the loop, because calculating the size of the (vector?) every iteration is wasteful.