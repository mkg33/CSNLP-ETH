The problem is instead that you either have no certificate which matches the (sub)domain the client asked for or that you did not configure nginx to provide this certificate if the client accessed this specific subdomain. This means that nginx will not be able to provide the client with a certificate which actually matches the (sub)domain the client has accessed. 
Clients will see an error message about connection issues. That is the best one can do when there is no proper certificate available for a domain.
Since it is an essential requirement that the certificate of the server must actually match the URL the client will fail in all cases with some frightening error message: either because the subject(s) in the certificate do not match the URL or because the certificate is not issued by a trusted CA (like in case of using a self-signed certificate for the default block) or because the server simply closes the connection if the client tries  to access a domain which is not configured (like possible with other  web servers).
The problem you are trying to solve is not really caused by nginx using the first server block as default. 