This is bad because this doesn't remove handlers and other objects bound to the elements. It's not good housekeeping per se (Dunno if the GC will pick them up or not). It's better to use empty() or remove() as it does housekeeping for you.
Also, it's not safe to ship HTML in data. Aside from being a sight for sore eyes, it opens up an avenue for XSS. This is one reason why templating systems like Mustache escape data by default to avoid XSS.
As an additional tip, use Chrome's/Firefox's CPU profiler in the dev tools. Record, then run your script, then stop recording. Best if viewed using Tree View, you can see the percentage of the time it took the engine to run your script. That way, you see the hotspots for optimization.
Not to be a bully, but this isn't really the "best" way to do this. Suggesting you use fragments if you want to programmatically create elements, or use a template engine like Mustache where you can interpolate data immediately to the template.
there is really nothing much you can do about this, adding a thousand rows in an HTML table will take a few second and might lock your browser. Browser were not meant for that. Moore's law is on your side though, so at it'll be fine at some point. Consider implementing paging ( with say 100 items per page ), and you app will be much snappier.