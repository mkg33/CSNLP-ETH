So - depending on the switch platform in use there are a bunch of things that can be used to control load and otherwise make the problem a lot more approachable.  As Ron mentions, something like Netflow or sFlow can be a great way to go but won't provide a packet-by-packet level of analysis or allow diving into packet payloads.  
In terms of actual use I tend to see larger organizations focusing first on natural choke points - switch uplinks, routers, firewalls, etc and then adding a capability to look at edge ports on an as-needed basis.  Obviously use-cases vary but the sheer volume of data that can be generated can be overwhelming.  
If you are simply looking to analyse traffic statistics, many enterprise-grade network devices support NetFlow, or one of its variants. You can set up a NetFlow collector, and use software to create reports. The NetFlow collector doesn't even need to be on the same switch or even network.
If the aggregate bandwidth of the traffic from all the other switch interfaces exceeds the bandwidth of the monitor interface, you will not be able to capture all the traffic, some will need to be dropped, and you will not have any control over what gets dropped.
For example, if you have a switch with twenty-four 1 Gbps access interfaces, you will likely lose some traffic (maybe more than half), even with a 10 Gbps monitor interface, but you will lose a lot of traffic if you only have a 1 Gbps monitor interface.
SPAN is really designed to be used for network troubleshooting. Configure it when you have a problem, and remove it when you have fixed the problem.
Being careful with the application of mirroring through the use of ACL's can explicitly exclude/include traffic based on the problem being solved.  Some platforms also allow for the truncation of mirrored packets, which can also vastly reduce the sheer volume of information being managed.  
There are also item like in-line taps that can physically copy the traffic on a given link to your analyzer.  This is almost invariably a better solution to a permanent requirement for full traffic visibility but is obviously a lot more expensive and a lot less flexible.  
Another interesting approach is the use of ACL's to copy/redirect interesting traffic on an in-line basis.  This is very different from port mirroring and ends up looking a lot more like policy routing but, again, like much of the above is incredibly hardware dependent.  