As @t3chb0t points out, you're calling Equals rather than [set object].Equals in Main. In effect you are saying this.Equals(set, requiredResult), this being the class containing Main. The object class implements Equals, and all classes inherit from object, so what you're ultimately calling is object.Equals. In other words, you've gone to the trouble of overriding Equals in your Set class but you're not using it. This will lead to unexpected results given you expect equality to be determined by the content of the properties, rather than by reference (which is what object.Equals will do for classes).
Another issue is you override Equals but don't override the equality operators. This means that set1.Equals(set2) will return a different result than set1 == set2, which is surely undesirable.
The Tuple already can do all the equality stuff so you don't need to write it yourself or you can derive your class from the Tuple so that is supports the + operator.
I usually don't like the Tuple but in this case it looks like a perfect example where I think you'd be much better off if you used one instead of the Set (that I'd name Pair). 