There has a to be a need for change, meaning a real project/customer, and then you look into the options, either make the db layout smarter or the quering program or replace the db. but you cannot expect to change things cause it is cool now.
@Erik You don't replace a 150 mph car by one that can do 200 mph just for the fun of it. If you have a customer who runs into performance problems orif you get a new one, who will need more power, okay. But no sane person will spend tons of money rewriting the whole software to do the same thing again. And calling people idiots just when you are narrow minded yourself doesnt make you smarter or more right.
We are not talking about a fresh project here, it is an existing and running legacy system that does not need to be changed .. unless it causes problems like the 20mph you mention. Does it? Right now? or do you just expect it in the future?
As far as I remember, hibernate had lazy loading of child elements, so so you only need to load the main object for manipulation. It doesn't really matter, it will stay what it is until there is a need for change. Grow ip and learn to accept it or found your own company where you do things "better", but the explain your employees why you ran out of business with twice the development cost of other companies.