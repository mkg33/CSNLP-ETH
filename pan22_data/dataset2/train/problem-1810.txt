On CodeHS we have a very streamlined system for submitting and managing student work. You can use our courses, or if you want, create your own assignments and starter code. The students can run the Java code all in the web browser (or if you'd like in your own IDE), and then when they click submit it goes into your grading queue. No need for folders, emails, printing, scp, dropbox, it all just works. You can easily run it and test it, you can also create your own graders if you'd like. There's also an easy to use grading queue for doing code review on each problem which can be customized how you like. 
I registered for GitHub Classroom with an education account, but I haven't yet had a chance to explore its resources and would like to hear from those who have used it. I can easily collect files via our LMS or Google Classroom. I just have doubts that that method is the most efficient for either me or my students. Also, this past year, CS50 took care of the distribution code, so I didn't have to worry about that. Now I do need to consider how I can get files to students efficiently if needed. 
I think in a lot of cases it is helpful to provide students with some basic starter code, but that can vary depending on what type of assignment you are doing.
Next year will be my first year teaching AP CS A. While I've spent a lot of time preparing by choosing textbooks, picking an IDE, and writing the syllabus, I'm not yet settled on my workflow for how to push out assignment instructions/starter code and how to collect work back. 
What workflow do you follow for the submission of student work, particularly in the context of Java files? Do you provide students with starter code? If so, how?