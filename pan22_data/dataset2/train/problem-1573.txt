The original graph can be used to ensure that the new edges don't cross any of your old edges, but it can't really be used for pathing as it is.
Inserting start and end nodes is a little more tricky. I'd probably start by giving each edge in the updated graph a normal, so you can determine which edges are facing towards the point you wish to insert. The nodes connected to such edges would then be candidates to connect to your inserted nodes.
The problem is with how you are formulating your navigation graph. If you'll allow me to butcher your diagram:
Where the red dots are your nodes, and the blue lines are your edges. This can be produced by creating four nodes for every node in your current graph. (There are actually even more edges that would be valid here as you could move diagonally between a number of these nodes.
Here is what the navigation graph should look like. For each node in the original graph with n edges, where n > 1, it should be replaced with n nodes. (Notice that each node in the graph is connected by two edges.)