If you have Solar Winds Engineering Tool Kit, you can use "WAN Killer" between the two locations. Make sure your ACL's allow both ends to talk to each other this way, and flood with the appropriate level of echo's or discard's from Point A to B and visa versa.
I had a similar requirement many moons ago with a remote router running IOS. Ended up using tcp-small-servers chargen service on router - runs on tcp/19. It will generate a stream of random characters etc. and can be scaled out using multiple telnet sessions from the remote router to other routers running chargen. Nowhere near the rich control/functionality of host based iperf tests. Also as we know ASA does not support telnet locally so this won't work here...
We have a large MPLS network where we need to measure bandwith and jitter across sites to make sure that our most sensitive applications isn't hurting.
Perhaps passive monitoring is a better approach. There are plenty of systems out there that will track interface state/errors/discards/bandwidth. Does a bandwidth graph fit your needs?
I agree with above that Raspberry Pi is a good solution here. We just dropped some in to drive NOC style screens. They're awesome.
We use this to test the networks ability to handle traffic across VPN and MPLS connections, whether it's measuring the raw throughput from A to B and the PPS from A to B.
ASA does have that packet tracer utility since 7.0 to generate interesting traffic for tunnel configs but doesn't allow rate tuning. Such functionality would also be an interesting attack vector if exploited remotely and at scale... Any such native functionality on ASA would likely peg the control plane and any variety of inherent control plane policing would need to restrict the generated traffic rate. 
Your best bet would be to connect a PC and run the tests but that requires someone to be on site of course.
Downstream you might be able to download something to null: on the ASA but upstream you would be limited of how much the flash disk can transfer which is usually not that much.
One great way of doing this is, like you mentioned, deploying Raspberrys. They are small enough, so you can install them nearly anywhere. One great toolf for testing bandwith/jitter is iperf, which you then can set up to run as a (filtered!) daemon on each PI. Then just initiate tests from a central management station.