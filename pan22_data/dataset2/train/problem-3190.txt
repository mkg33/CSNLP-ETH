In addition to being less then 100% effective, client-side protection has the drawback of being extremely annoying for your players. Usually it implies things like disabling alt-tab task switching, antivirus programs, etc.
There are two more dubious recommendations for fighting bots. One, encrypt your network traffic. I don't think this is gonna work. With your client in the hands of an enemy, traffic can be and will be decrypted... or you own client will be used for encryption. On the other hand, encryption adds lag, and that is really bad for a "real-time shooter". Second recommendation is "just design your game around this". While this seems like a sound idea, I've yet to see a single game that managed this.
Personally I'd try and encrypt and obfuscate communication as much as possible between communicating machines, it might be worth reading up on the way https/ssl works to get some ideas. If the hosts were to generate a random public/private keys and only send the public part out to other clients then something wouldn't easily be able to intercept and change the contents of the packages being sent, although if you have access to the client machine then nothing is completely secure.
There are two approaches to countering bots. They are client-side protection and server-side analysis. 
Client-side protection is the most obvious approach - brute force, in a sense. You make all efforts to ensure that the game client is fully legitimate, has not been tampered with, and no other programs affect it. Now this is a difficult problem, and impossible to fully solve. But many games try, and have some success with this method. I know there exist some ready-made solutions for client protection, and suggest you look for them. Implementing one yourself is a daunting task.
I wouldn't expect any of the big players to talk about what they do to protect their games. The less people know about what they're doing, the harder it is for people to work around it. I think part of what Steam does is look for certain applications running that are on a black list.
Design your game so that team work and actual intelligent decisions are more important than being able to aim perfectly.  It becomes exponentially harder to make decent bots.
Usually then the biggest problem is 3+ (as a human being can with training use 2 keyboards or other input devices at the same time, but not more as he only has 2 hands) clients from the same or closely related ip addresses (or MAC addresses) acting in direct unison, executing commands within milliseconds of each other.
So if you detect say 5 clients originating from the same ip address all giving commands at an abnormally high rate and at abnormally close coordination, you likely have found your botter.
For best protection, you can combine both these methods. Client protection will make it harder to develop bots, and server analysis will stop simple bots that were developed quickly. But whatever you do, you can never stop bots entirely. Well, unless you send your representatives to players' homes, to supervise their playing and report violations. (Which is not unheard of, by the way. I've definitely read a story about online poker company sending people to a very successful player's home, to confirm he was playing legitimately. But I can't seem to find it now.)
In pve scenarios, typically there's limited damage to the game (except in that it allows one person to train multiple toons to high levels more quickly, a typical characteristic of powerleveller companies, a constant scourge in the mmo industry).
Server-side analysis is less intrusive. In this approach, you have some server code that analyses patterns in players' behavior. Most often, bots play demonstrably different. For example, human players have varying time between actions (such as shooting), and this time obeys a bell-curve distribution. Primitive bots will have constant time, or distributed evenly over some interval. Fun fact: using this method, we once caught a player with a mechanical bot - a clever device that pushed buttons on his physical keyboard. Needless to say, not amount of client protection can catch that. Still, this analysis is not perfect. More advanced bots will fool your systems, and the more checks you implement, the more advanced bots would become.
Usually this'll be most damaging in pvp scenarios where this bot army can dominate an engagement against a similar number of human controlled toons due to its higher coordination and speed.