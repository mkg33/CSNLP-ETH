I also accept that prevailing wisdom is that disc is now so cheap that backup to sequential-storage devices (ie, tape) is an old man's technology.  All I can say is that for the price of another box of tapes, I can extend my point-in-time restore capability from four months to eight, and that tapes not in use can be offsited much more easily than an HDD could.
backup-manager is very interesting: easy install on Debian, very quick configuration, differential tarball backup, mysql backup, transfer by samba, ftp ...
I use a lot rsync. Read carrefully the documentation, there is a lot of interesting possibilities like keeping a backup of all your changed files. Rsync transfers only changed files so it's very efficient if you don't have too many files.
One suggestion I'll pass on from a colleague, with which I'd agree, is that bacula works much better with a tape library than it does with a single tape drive.  An old stacker can be had for a song (I use a 6-tape DDS-4 stacker at home, which I picked up for less than Â£200), and if you're talking about tens of gigabytes and thousands of files, I suggest that such an investment is probably within your grasp.
How do you backup your site? I am especially interested when you have a large site (20GB+) with thousands of files? 
From your suggested use of tar, I presume you're using Unix.  That given, bacula is rock-solid.  It is somewhat painful to set up, but once you get it configured it does its thing with great reliability.  There are a number of features you can use - multiple clients (of course), multiple tape drives, unix/windows clients (and probably MacOS too, though I can't say for sure), encrypted backup tapes, bare-metal restores (and other disaster-recovery features), backups to disc or WORM media (eg, DVD-R).  I haven't used all of these features, but I've used a lot of them, and bacula has saved my bacon on a number of occasions - and my users' bacon on many more.
There is already a page with more options than I can count, depending upon your needs, at Easy, Automated Snapshot-Style Backups.  
On the remote SSH server, we have a script that makes older copies of those backups, so that if we need a backup less recent than the most recent copy, we can go into the archives.
In the "files are mostly new files" scenario, rsync will probably work well.  But if most of the backup is a SQL database, then you need to reconsider the whole approach.
With all of that said, rsync has it's own performance penalties.  Linux Weekly News ran an article that said rsync does have upper limitations about what it can handle well and what it cannot.  Regardless of whether or not you have millions of medium files or hundreds of large files, you need to test pure performance.  If you have little data changing on your site from day-to-day, but everything is usually new, it may not be too bad.  
Use cron daily to launch these tools, keep the backup on a different host, check often your backups (best practice is to do recovery tests), try to encrypt the backups (in case of someone stole them ...), get some backups off site in case of big disasters ...
We use off-site backups, because what happens if the server's drive dies, or worse, the server is destroyed by flood or fire? All local backups would mean we're out of business, if that were the case.
The tool I use on a regular basis is rlbackup.  rlbackup creates directories like hourly.0, hourly.1, daily.0, daily.1, daily.2, weekly.0, weekly.1, and so on.  Old copies are automatically rotated and deleted.  The most expensive run will usually be the very first hourly.  Every subsequent run will only transfer the changed, new, or deleted files.  The directories provide an "snapshot in time" that is easy to browse.  Consider this to be a poor-man's version of deduplication.
For our Windows server, we use WinSCP, which has a handy feature to synchronize local and remote directories for file transfer. Yes, it must be done manually, but after one backup disaster courtesy of "automatic" backups, I don't care. It only takes clicking one button at the end of the day anyway.