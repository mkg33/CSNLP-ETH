A semi-answer would be the problem of deciding the winner in parity games: to show that it is in $NP$ (even $NP\cap coNP$), we need the positional determinacy theorem which is deep and non-trivial. However this answer is not ideal, because it still boils down to the existence of a polynomial witness for this exact problem (the positional strategy), and does not reduce to another different $NP$-problem.
cf. Bienstock, Some probably hard crossing number problems, Discrete Comput. Geometry 6 (1991) 443-459, and 
Is there an example of a language which is in $NP$, but where we cannot prove this fact directly by showing that there exists a polynomial witness for membership in this language?
Here is an example (though admittedly artificial) when it is very hard to decide whether a problem is in $NP$ or not. Let $L_1, L_2$ be two languages, with $L_1\in NP$, and $L_2\notin NP$. Now define the language $L$, as follows:
When the recognition of tolerance graph recognition was open, the following paper showed that it is in NP:
(Later on, tolerance graph recognition was shown to be NP complete: http://arxiv.org/abs/1001.3251 )
Instead, the fact that the language is in $NP$ would be proven by reducing it to another language in $NP$, where the link between the two is not trivial and needs careful analysis.
Another one would be the AKS primality algorithm: deciding whether a number is prime is polynomial, while there is a priori no small witness for this fact. Let's say we rule out the "surprising polynomial algorithms", since many of them would fit the description above. I'm more interested in surprising $NP$ algorithms which are not deterministic.
Then $L\in NP$ precisely if  the twin prime conjecture is true. Since the conjecture is  either true or not, it is indeed well defined whether $L\in NP$ or not. However, deciding which is the case, that is, deciding membership in $NP$,  amounts to solving the famous twin prime conjecture, so it is certainly nontrivial...
Deciding reachability for various kinds of infinite-state systems is sometimes decidable, often not.  For some interesting special cases a small enough and efficiently checkable certificate always exists, putting such problems into NP.  Here is a neat treatment for one-counter parametric automata:
More generally, are there some interesting examples of problems in $NP$ so that it is hard to see that they are in $NP$? 