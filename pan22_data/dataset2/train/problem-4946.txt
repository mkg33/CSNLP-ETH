A framework may only wrap up more powerful features in a cohesive interface.  If you are extremely green to game development, that "simpler" interface won't be any benefit if you don't understand what it does for you.  Maybe it will provide a translation and a rotation and a unique coordinate system per sprite...but do you need that? 
I would argue that it depends on your immediate goals.  A framework might be helpful, or it might be an extra layer of complexity over the extremely simple canvas API.
A framework will have its own learning curve.  You'll need to spend some time reading up, probably following a tutorial.  The deciding question is, will you be up and running faster by reading those docs rather than reading this framework-less canvas tutorial?
When I say not helpful, I mean that it may not provide much advantage over simply using the built-in canvas methods.  For example, if you want to draw something onto the screen:
I would say that at their worst, frameworks will cheat you of some of those small details of understanding.  That's hardly a reason to avoid them (you'll learn the details anyway), but learning some fundamentals the hard way also has merit.
Naturally, these can get more complex as you require more details.  But it is not automatically true that the framework will require fewer lines of code or simpler method calls.  The canvas API is already pretty simple; a framework will incur some overhead.  