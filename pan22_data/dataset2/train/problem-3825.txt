Peer-to-peer applications of any kind - and thus including messaging applications - have a big handicap in today's world: A massive part of the computers are behind a NAT router. This is true not only for PCs behind a "home router" or corporate firewall baut also for a huge chunk of the mobile users, where NAT is used on the carrier side.
The usual way to overcome this is to use a server, that is reachable from both ends as an outgoing connection to mediate the connection: Either all traffic goes through it (the easy and most reliable way) or at least it mediates the assignment of ports and IPs to faciliate NAT handshake.
Since there exists to my knowledge no secure way of NAT penetration (e.g. for home routers) and it might even by design a security problem, it is not an easy "out of the box" experience to configure and secure it - this is the technical reason why easy to use messaging platforms always use a client-server model.
This implies that it is not possible for these devices to listen to connections (or datagrams) directly on the internet without cooperation of the NAT device. It is e.g. impossible for two devices behinde the same home NAT router to listen on the same port on the public internet. In other words: These devices can use outgoing connections (nearly) without limits, but they can't use incoming connections as easily.