What we are doing here is provisioning Pin 1 and perform toggle operation. Once toggle operation is completed. We are unprovisioning Pin.  
The above mentioned answer is correct. I'm sharing you sample code, for more clarity with code which I used to overcome this issue.
Again, per the comments below the question, the solution was to remove the gpio.shutdown line from the code. 
On the first execution I have no problem and everything runs and works as expected, but when executing a second (or more) times then I'm getting an "RejectedExecutionException" error when the button is pressed.
Per the comments below the question, I can't really take the credit for this. jason.keisersmith had received a reply to a bug report posted to the Pi4J Github page here by user savageautomate on 18/03/16, which suggested: 
Solution to the point: From gpio we are provisioning Digital Output Pin and after any specific task like on, off, toggle or blink. If you unprovisionPin then the status of pin as before.
I have a Java program that is using pi4j project to interact with the GPIOs.  I have one test class that listens for a button to be pressed and then does something. The class is part of many in a larger program and it is possible that it is created and run multiple times, and this is causing the problem.