Are you talking about an online game that relies on a server to store the game state, or a game that runs on the users local machine?
If you are talking about a game running on the users local machine, you will not necessarily have the luxury of being able to have the game run in the background all the time.
If the local machine doesn't have any kind of alarm/calendar/event system, then you will have to write your software to record when it was last run, and then whenever it is started, it can determine how much time has passed, and then can simulate the game world forward that amount of time before the player begins playing.
If you are talking about a server based job, then you would create something like a cron job that runs at some given time interval (e.g., every 5 minutes, 1 hour, or whatever your game design dictates).  When the job runs, a piece of software iterates through all the active games, updating item states, sending messages as appropriate, etc.
If the local machine has some kind of alarm/calendar/alert ability (e.g., "Run this program at time X" or "Give player message at this time"), then you can calculate ahead of time when events (e.g. "pokes") should happen.  For example, player plants a plant, plant will be ready in 8 hours.  Program sets system alarm to message player 8 hours from now.