Don't put any print or input calls inside of "business logic" functions (like when you "calculate" the winner).  Separating these two concerns allows for easy adaption to other IO situations (web app, GUI) and makes it (better) possible to test the business logic.
Your code should have tests.  Look also into TDD (test driven development), where you write your tests before you write any code.
You use blank lines to separate parts of calcWinner.  I wouldn't here, because it hurts readability IMO too much.
Now play and enter ROCK ... does it scream TIE!!!! at you?  No.  Because you call main in calcWinner.  This has two problems:
This means one or more sentences!  Why? Because they should explain why you wrote something the way you did, not what the code is doing!.
Generally speaking your comments don't help in any way, they just hurt readability.  Better remove them!  It's important to make your code so readable that you don't need a comment to tell the reader what the code does.
Apart from this PEP rule, IMO function names should reflect what is being done, i.e. an action.  Thus not computerMove but rather obtain_computers_move, not playerMove but ask_player_for_move.