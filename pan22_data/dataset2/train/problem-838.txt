If you are interested in trying ImageMagick, you can get current versions from the downloads page, though you may have scroll a bit to find something suitable for you. You didn't mention which operating system you're using, but for Windows specifically, the default Q16-x64 build should likely be fine.
Note that Windows has a built-in convert command which has nothing to do with ImageMagick. This may cause some confusion or other minor issues if you're using Windows and aren't careful.
Note that this list should have no duplicates. Likewise, there should be no blank lines. Assuming these requirements are met, this list could then be used as input for the following example batch file:
This list could be called anything you like but I will be referring to it as files.txt. Assuming the cover images are e.g. image_01_front.jpg, image_01_spine.jpg, image_01_back.jpg, etc. and that there are four groups of images, files.txt would have the following contents:
Your best bet would likely be to use ImageMagick (which is a cross-platform program for manipulating images from the command line) and some custom scripting. That said, I am not sure if this would be a "minimum fuss" solution for you or not
Regardless, if you wish to use the ImageMagick convert utility on Windows as demonstrated above, you will need to register your ImageMagick installation folder (ex. C:\path\to\imagemagick) in your Windows Path environment variable.
In the screenshot above, .+spine$ selects all the lines with _spine at the end. You could eliminate all the lines containing _back with .+back$ as well, leaving something like the following:  
Real-world file lists are likely to be slightly more difficult to generate than four basic items. While it won't produce exactly what you need for the example above, if you're on Windows you can create a list of just file names and extensions with dir /b > files.txt at a command prompt open to the same directory as your image files. This will get you at least 50% of the way in most cases.
These blank lines could then be eliminated with Edit → Line Operations → Remove Empty Lines, leaving our final list for files.txt:
Otherwise, you will need to specify the full path to convert each time you call it (ex. C:\path\to\imagemagick\convert.exe).
For consistency, I will be using a naming scheme similar to the convert example from earlier. I am also assuming all the files to convert appear in the same initial directory as well.
Similarly, third-party text editors such as Notepad++ (Windows) can have useful features. In the case of Notepad++, it supports regular expressions as well as normal text replacement. Thus to make e.g.:
This script can be saved as e.g. merge.bat. Assuming this batch file resides in the same directory as files.txt (along with the images listed in that file), it should be possible to double-click merge.bat and simply have it process all the images in the list (assuming nothing goes awry).
Since ImageMagick works via the command line, it lends itself to automation through scripting. While there are various ways to approach this, I have provided a simple example using Windows batch below. 
For this example, the first step is to create a list of "base" file names ("extensions" such as _front.jpg, _spine.jpg and _back.jpg will be added in the batch script).
Assuming we have a set of images labeled e.g. image_front.jpg, image_back.jpg and image_spine.jpg and that they're all the same height, we can use convert with the +append option to stitch them together horizontally:
This may seem inefficient for four lines but since you say you have over 900 items, some variation on these steps might be worth considering.