First, if products.brand, and brand.name are the same regardless of case then use citext. In order to get there, we have to find out where they collissions are. @RDFozz is right in the comments. We can figure out by analyzing both tables.
For this update to work, that should return 0 row. Only after it returns 0 rows, can you actually run your update and fix this moving forward.
Your query output shows that a sequential scan is being done on both tables, which means that your indexes are not being used.  Although you have indexed brands, you need to index lower(brand) and lower(brands.name).  Because you are doing an operation on brands (lower) before filtering it means that the index can't be used.  The other option if you don't want to index it would be to no longer use lower but one or the other should be done so that the index can be used.
Next, if that's the kind of update your doing this is a case insensitive type. You should upgrade the type to using citext. You should force the products table to refer to the brands table and then the change will permanently be reflected in your schema.
The products table is also being filtered by products.created_at and you should consider a combo index for brand and created_at on that table.
When your database can't use the index it has to pull in all 10 million rows, convert them all to lower case, and then filter.  Once you have the right indexes on both tables you will see the Seq Scan go away and it should speed up considerably because it will only pull the 1 million rows you are looking for.