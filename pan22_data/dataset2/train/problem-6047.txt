Run <?php var_dump( ini_get('output_buffering') ); ?> or <?php phpinfo(); ?> to see whether it's enabled on the server you're using.
I tried script above on 2 different servers. Both respond numbers 0...9 in every line. In case of first server each number is received every second. In case of second server there is no output for 10 seconds and entire output is displayed at once. What might be wrong int second case? I tried various uutput control Functions but it didn't help.
If you ever want to produce output at the browser while code is still running, this is not the way to do it - fork a seperate process (preferably in a new session group) and write a stub response to the browser - then send updates to the stub using Ajax (optionally with long polling).
Output buffering can be called at runtime or enabled by default (as in the case of your second server).
You need to turn output_buffering to "Off" in php.ini and restart apache, the default for output_buffering is 4096, which prevents your ob_flush() and flush() from taking effect. You are also missing an ob_start(); at the beginning of your example code.
When PHP flushes it buffers has little to do with when the webserver decides to write output - and the webserver may push partial responses (relatively uncommon) or, as in your case,  chunked responses. Webservers do not provide the facility for direct control over the output stream. Nor should they. Using output buffering in PHP just defers chunking slightly. 