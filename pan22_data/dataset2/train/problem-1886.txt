Since you are already using functions from string library, why don't you look into splitting the string into tokens and parsing it by delimited and ignoring white space. That way if tomorrow you accidentally add a additional white space in your input file, the code won't break( In terms of reliability ). Something like strtok
isspace is a standard library function that checks whether a char is whitespace, i.e. newline, tab, space etc.
I would encourage the usage of typedef. And this is global variable. If it is not required, then try to avoid it. In this case, i don't see why you would need to make config a global.
There's no reason for you copying the parameter name to a local variable and then throwing it away without using it. You could just use the standard function strchr to find the first space character, and then read the value from there. Alternatively, if you want to support multiple whitespace in a row, or whitespace at the beginning of a line you can use loops like below.
The signatures for the read_*_from_config_file functions are inconsistent. One of them returns a value and the other two pass their results by a pointer parameter. Choose one style and stick to it with similar functions. They ought to check the return value of sscanf, in which case they could have an error status a return value and a pointer parameter for the result.