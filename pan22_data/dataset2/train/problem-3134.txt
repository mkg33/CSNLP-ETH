I see this as effective for developers who want a domain name but don't want to waste time sending in a request to IT to have something added to the DNS servers.
However, I use a DNS server and specifically split DNS: *.test.example.com resolves to a private address when resolved internally by my internal DNS server, but resolves to a "real" IP when queried against our example.com authoritative DNS server on the Internet.
You can usually add those domains to a 'hosts' file, and point them to your development server*, but sometimes it's easier to just add a domain alias (eg. siteXYZ.1.2.3.4.xio.io) to the dev server, and access it via that domain name (since that works from everywhere now). 
It looks like it's basically for an on-the-fly domain names for development purposes. If my work laptop has an IP address of 10.0.0.15 and I need a domain name for that computer for whatever I'm testing, I could use 10.0.0.15.xip.io instead of adding a new entry to my own DNS server. Test it out with dig or nslookup, it's kind of cool.
*(1.2.3.4 siteXYZ.tld, and then remove the line from the hosts file, when you wish to access the production server, and then re-add it, to access the dev. server, ...)
but i'm not clear how it is useful, i mean, can't i just replace the IP instead of adding the host prefix in all URLs?
I use a wildcard DNS all the time in my development environment.  *.dev.example.com always resolves to my development server, while *.test.example.com resolves to my public test server I use for showcasing to clients.
Like it says on the page, if you have virtualhosts on your webserver (more then one), you need to use a domain to get the (non-default) vhost on that server. 
The purpose of the service is to allow you to easily reach multiple sites hosted using name-based virtual hosting. It appears to be very broken though:
As for xio.io, seems kind of cool, but I don't know if I'd like to rely on (and expose private addresses to) an external 3rd party when I really don't have to and it wouldn't really mesh with my workflow (i.e. sending publicly-accessible test.example.com URLs to clients).