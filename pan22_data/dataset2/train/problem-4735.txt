- what kind of control and security do you want to have? (centralised is normally easier to protect; you can quickly cutoff any branch office, ...)
IF you need a more redundant structure and each site needs equal access to the other sites then you'll need a mesh like design.
And so on, and on, and on. Basically you start with what you know, put it on the map, then start trial-fitting what you want on the map, until you have something that works. You commit your pencil annotations to ink. Then you build it.
Essentially, MPLS is point-to-cloud (diagram cloud, not magic-server-hosting-cloud), but you get your own private cloud. So suppose you have three offices, A, B, and C. Each of them have a, say, T1 to the MPLS cloud, and the provider itself routes traffic through the cloud to the destination, without ever touching the internet or anyone else's traffic. 
It might also be worth your time to investigate an MPLS network. Most large providers can provide you with this service at a nominal fee above the normal price of the bandwidth. 
With this in hand, you can star searching, otherwise the answer is only a general: you'll need some switches and routers :)
Site/organisational hierarchy helps a great deal (any higher-level/central/lower-level offices?), as it usually defines all of above: traffic seldom flows between same-level offices, higher-level offices should be in control, ...
The benefit of this is that you don't need to use VPNs on your MPLS links. They're inherently secure, since it's a private network already. Lots of people do run encryption on their links because they don't trust their provider, but that's something you have to judge and weigh the price versus how important your data is. 
You probably want to draw this as a map (lots of examples here). Print a couple of copies and then play on it with a pencil. Think about the connections which need to be made from site to site, and how much bandwidth they will use. Example: each desktop user might have a 50mb/s connection to the mailserver every 5 minutes. The servers at Site5 keep a continuous 1mb/s stream of replication traffic going with the servers at HQ. And so on. You'll get these estimates wrong, but they are a starting point that helps you see if you have enough bandwidth between sites. Later you'll put a little monitoring in place to get real numbers. But now I'm getting ahead of myself!
- what resilience do you want? (mesh/ring topologies are more resilient, but more complicated to setup)
It's really just a process of listing what you have, then listing what you need. Then using the first list (your assets) to build out a network that does what you need. You may have to buy things you don't have, to create the network which meets your needs. Like so:
Next up you need to think about your IP addressing and subnetting plan. Will you be using public or private IP addresses? What the maximum number of IP's each site will need? Get out your subnet calculator and figure up how large each site's subnet will be. Decide which specific IP range will be used at each site. From here you'll decide what each site's internal gateway address should be (the external IP's in this example will be decided by the  broadband provider, of course).
More information is going to be needed before a design can be suggested.  In general you can use a hub and spoke model or a mesh model depending on the goals of the network.  If you have a main location where your applications are centralized then the hub and spoke model can work well.
- traffic pattern (do you have any central application? on which relations are main data transfers? ...)
Then you run it for awhile, and make changes as needed. Which you (or someone anyway) will keep doing until the company dies. 
It's time to figure out your name services. DNS most likely - where will you put it? You could put all DNS servers at HQ or you could distribute them to each site. Once you've figured that out, add it to your DHCP config.
Now you decide whether you'll use DHCP to handle all those addresses (you very likely will). It will need to be configured - and you'll have to decide where to run it. At HQ, with ip-helper addresses at each site's router? Locally at each site from the routers there? Draw this into your diagram. 