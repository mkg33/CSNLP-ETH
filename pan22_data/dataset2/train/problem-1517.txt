I think what's more important is finding out which distribution will give you the best rights to distribute your server software even further! Since your server is running C++ code, you're probably distributing your own code as binaries only. This might or might not be possible with certain distributions. Worse, you might have been using certain GPL libraries within your code which will cause your code to "inherit" the GPL license. I'm not sure if you're willing to publish your code as open-source, though.
For instance make sure you use epoll instead of select/poll. Where the latter send a list of all the FDs they're interested in at every call, epoll_create builds a list in the kernel, and the epol_wait call just references that list. You can see the advantage when you're listening to thousands of sockets, and you call select/poll ten thousand times a second. 
Splice basically allows you to pass data between file descriptors without copying it. You just tell the OS, take that many bytes from there and send them there. It reduces data copying and context switching since it all gets done in kernel. 
Now splice/vmsplice/tee are not going to make much difference if your app is not spending most of its time copying data around. But there are other syscalls you want to investigate to handle lots of simultaneous connecitons.
I dont think your question is very clear. Linux IS the OS. the distribution is what packages Linux and other software up into a nice bundle for you to install and run.
I'd say that you target a kernel release rather than a specific OS. On top of that, you should really look into tuning the network layer, it can make a huge difference.
All of the modern distributions will give you pretty much the same performance as they will be based on the same kernel (Linux 2.6.x).
Applications such as haproxy can use this call to fill up a dual 10 gigabit ethernet card on a low end server. 
Beyond that you want to look at run-time sysctl settings. The defaults are usually way too conservative.
Finally, I would definitely recommend you use a subscription/support-based distro such as RHEL or SLES; the kind of support service they provide is exactly what you need, in that they will help you if there's a performance regression in the kernel, and they will be able to get the fix quickly in. 
It all depends on how the app is coded, what it does and so on. Recent Linux versions have included new APIs to boost high throughput, such as splice/vmsplice, introduced in 2.6.17. But it obviously requires your app to be use them. All recent versions of modern distros will have at least that kernel anyway.
Still, if your code only relies on the Linux kernel then all you have to do is to create your own distribution based on this kernel plus your own code. Using an existing distribution could make the whole licensing part a huge licensing nightmare.
between distributions, there's very little difference between the major versions of software, except perhaps the kernel. (I know CentOS is still running 2.6.18.) my personal vote is for Debian Stable, but distro choice is a very personal thing. spend some time on Wikipedia and Google, as well as the various distro websites before you make a decision. and feel free to ask questions!