This resource is provided by the Computer Science Department at the University of Canterbury, New Zealand, and shared under Creative Commons BY-NC-SA 4.0 licence. 
Lots of things you can do via role-play, e.g. simulations of how a processor works, how the internet work, how e-mail works etc, but also playing through some scenarios or dilemmas in online safety.
It depends so much on what we're covering.  In principle, anything which gets them doing or moving also gets them learning.  Here are a few more ideas:
There are lots of great activities at CS Unplugged that do not require a computer. Excellent activities in their own right, you don't have to wait for the days when systems are out. Well worth exploring these resources.
I also keep some of what Dan Meyer calls "Tiny Games" in my back pocket, for any time that the internet is down or we can't get on computers. Not all of them are explicitly CS related, but I think the logical thinking is useful. 
A kind of fun one might be to have a little kit of electronic components handy - transistors, LEDs, a couple of batteries, as fits the size of your class. You can build logic gates and then use these to build, say a half-adder, or whatever, and start abstracting from there, to introduce computer architecture, or you can use it to solve some sort of simple problem, or introduce truth tables, or whatever. It's also a fairly compact thing to store for those unfortunate occasions.
I also had a set of identical LEGO cars and kept one set of instructions, and did sort of a network simulation to have groups build the cars by carrying instructions from the "server" (who had the one set of instructions).
I kept a copy of Amelia Bedilia around to read, when I was at a school where the power would go out.  If the power was out long enough, we would do pseudocode algorithms, or something of that sort until the power turned back on.
Lots of fun with hand-drawn graphs, e.g. minimal spanning trees, shortest paths or the travelling salesman problem.
Plenty of scope for debating broader moral and ethical issues around CS, including AI: What should Audi's programmers and managers have done? Should end-to-end encryption be available? What rules should a self-driving car be programmed to follow?