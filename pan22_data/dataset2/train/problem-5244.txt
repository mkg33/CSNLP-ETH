Since C was invented in the 70, did all programmers use it, or were they forced to use ASM to get the best optimisation ?
I read that the playstation had only 3MB memory total: besides CD-swapping, how could they achieve to build an executable to hold on 2mb or ram, for complex games like Metal Gear Solid or Vagrant Story ? 
The video game economy boomed around the 90's (I guess, with the NES etc), and just before that, I wonder how game programmers were doing their job, what languages they used, what was the equivalent of the current "dev kit", anyways what were those few guys technics and tools to achieve a working game on such tiny computer power ?
Nowadays, game programming is like a big business-ish, technological, academical, programming havoc. There are dozen of engines, free or not, don't-reinvent-the-wheel dos and don't, plenty of different platform, plenty of game genres, and a lot of languages.
Actually it's the opposite. The more simple the gameplay the more power you can utilize from the machine. If all you want to do is throw polygons at the screen you can easily optimize that. As games get more complex we start throwing more and more systems together and being able to predict what's going to be on screen at any moment becomes more difficult. So everything has to be more general purpose and thus less efficient.
Were game makers only or most programmers ? Why do I think a game programmer who has played a lot, has a more important role that game designers, 3D artists, because they know how a game is really made ?
Since computers are so freaking fast today, how has the optimisation task changed ? Do we use computer/console power to their maximum, or do we waste it because we can't come up with complex enough gameplay ?
In the earliest days of arcade games, and later Atari home systems, Spectrums, and C64's you would often have 1-2 man teams where people all had multiple hats and nearly everyone could program. By the time you hit the NES and later the art requirements for games required people dedicated to that role full time, and audio also had full time individuals who were often shared between multiple concurrent projects. Design was often someones part-time role, and not a dedicated field. 
You look at the power of machines in the past with the ability to compare them to machines today. At the time those things were pretty fast, even if every machine has it's specific weaknesses. 20 years from now people will look back at x360/ps3 and wonder how we dealt with them.