Even if your office suite is available on all popular platforms and supports the specific format, it doesn't guarantee that someone else's office suite supports it or can render it to look exactly like it looks on your equipment.
The open-source community drives open document standards with associated formats (like .odt).  These are available for any developer to use (it's the standard format for the open-source office suites), or to support (Word supports it).  But again, not every office suite supports it, and your office suite of choice may not be available on every platform.
Most document formats start life "the other way around".  An application will be developed, like MS Word, and an associated document format (.e.g., .doc or .docx), will be developed to support its features.  It is "universal" only to the extent that the application developer holds a huge market share, so there is a desire by other developers to be able to handle those files to meet customer expectations of compatibility.  But there is no guarantee that the office suite you want to use on your platform will handle those files, or handle them well, or will keep up with Microsoft's evolution of the format.
It's not that any hardware or OS can understand PDFs intrinsically, a computer still needs to be informed of what it is processing.  In PDFs there is a format number that comes in the header ie %PDF-1.7.  This would indicate how to parse accordingly.  
The file format embeds the fonts and layout instructions to recreate an exact copy.  The developer (Adobe) also created software for every platform so that PDF files could be viewed anywhere.
Office suites are generally more about communicating than desktop publishing.  They may not provide a mechanism for embedding the specific fonts you use to create the document.  They often rely on font substitutions to achieve a degree of universality in people's ability to open and view a document in essentially the same form as you create it.  
The goal for Adobe in the 90s was to create a document format agnostic to the type of computer system it was being read on.  This was desirable as Adobe would then control the base standard.  
Since the origination of the format, its use and capabilities have been expanded.  Adobe and third party developers have created lots of applications for doing stuff with PDFs.  Many of the major office suites can open and work with PDFs.  Adobe has added features, like the ability to add security so that a PDF can be certified as an unaltered document for legal purposes.  But the fundamental purpose for which PDF was created was different from a word-processing-type application.  
PDF was developed for the purpose of ensuring that any document could be opened on any platform and look exactly the same.  Its purpose is primarily for viewing or printing the document, not editing it (although they can often be edited, but that defeats the purpose of ensuring that it looks exactly like it was created).  
The recipient on another platform will see a version rendered with whatever is the similar font on that platform.  The result will be very close, but not exactly the same.  A similar font may not have exactly the same character dimensions or kerning, so lines may not wrap exactly the same.  Usually, this isn't an important difference, but in some situations, it can be.