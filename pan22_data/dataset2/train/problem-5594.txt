I don't know how does it exactly work for the PS_ON# but if you need to send in 5V / 0V you can do it with a raspi.
I would recommend simulating the case switch on your PC rather than messing with mains power. Use the R-Pi GPIO pins to switch a CMOS IC switch or transistor switch connected in parallel with your case switch then write a script to "push" the case switch for 1 second when you want to turn on your PC or 5 seconds when you need to hard reset it. You can power the Pi from the standby power wire (+5v) so it's always on
Regardless, unless you are running the Pi off the PC power supply, direct connection is very poor engineering practice. Ignore most of these answers. You need some kind of isolation such as a relay, opto-isolator etc.
Here you have an example on how to make 5V run through a LED with a raspi. You just exchange the LED by your pin.
Why choosing the hardware path when you can remotely turn on the computer using Wake on LAN and using remote shutdown?
Basically, yes, you can control other devices using RPIâ€™s GPIO pins, however, there are many limitations which you should consider, especially the voltages and currents involved (you cannot source/sink much current directly from/to GPIO). Generally, I would suggest never to connect RPI to the PC directly, but using an opto-isolator to separate them.
As you foresee the GPIO only send 3.3V witch are not enough. but you also have access to the +5V source in the GPIO header and you can user a transistor to toggle it (5V/0V)
I believe you could be interested in WtRPM: A Web-based (Wt) Suite to Power Up/down Your Computers, which is an article describing exactly the solution you are after, I guess.