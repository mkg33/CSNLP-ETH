Bounce emails will always be sent when applicable to the address specified in the return-path header. Know that this is also this address that is checked when validating the email against SPF records. This does not (in most cases) need to match the from address however some spam filters will detect it as spam. Therefore in some cases you will also need to specify the sender header to match the return-path and the from address can still be more or less anything. To improve on this solution one could generate a unique ID as the return-path that goes in to a catch all account on a mail server and processed with a simple script. Once a message is received on an address that matches the corresponding email is automatically unsubscribed.
I want to improve our mail server lists by handling all the bounces we get in our websites. I have a website which has over 8000+ users and another website which as over 1500+ users, they are emailed various notifications every second, ie. job alerts, email alerts, 
I am using POP connections with EXIM on APACHE server, most scripts are based on PHP language generates email on the fly.
I'll re-emphasise that you should be careful when configuring a solution like this as you could be blacklisted in the blink of an eye if it is not properly implemented and tested.
Please read section 3.6.2 - Originator Fields and 3.6.7 - Trace Fields. If you want a solution to detect what emails are bouncing the best thing to do would be to redirect the bounce emails so they can be dealt with.
What you're asking for is very complicated and could send spam filters in to overdrive if not properly implemented. To properly answer this I'm going to assume you know the anatomy of an email as described in RFC2822.
I am not a linux expert or server admin but i do lot of PHP coding, so please be descriptive of the solutions specially if they are linux commands 
As for checking the existence of an email before a message is sent, I wouldn't bother. Firstly an embarrassing amount of mail domains are misconfigured and messages sent to a 'verified' address can still bounce. Secondly your MTA already deals with non-existent addresses as it can't send email to an address that doesn't appear to exist. You are effectively doubling the load in this area.