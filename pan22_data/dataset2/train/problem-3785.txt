I was the lead developer of 2 moderately successful browser games quite a few years back, and plan on working on a new game soon. At the time, I wrote them in pure PHP (no template engine or anything of the sort).
So my question is the following- if I were to go in my old ways and go with PHP again, would I be making things hard for myself? Would picking something more "trendy" have a real impact on my development?
I'd like to start working on a new game, but have been out of the web development world for a while. Reading around, I hear a lot of good about Rails, Django, Node.js, etc., with which I have no experience (although I know my way around Python, Javascript, and the others quite well).
For more modern tool, you can pick a WebGL powered game engine. Most of them are driven by JavaScript. You can checkout this list, see if any of it fits your need.
As others suggested, you could improve your game-client by using technologies like HTML5 and JavaScript. For the backend you can still use PHP. That might give you enough new stuff to learn while you can still benefit from your PHP programming skills.
In addition, does anyone have any pointers relating to specifically developing browser games with these more modern tools?
PHP is still relevant for browser games. There are tons of companies (Gameforge, Funzio, Goodgame Studios, etc.) that use PHP for their online games. 
I think PHP and Java are most widely used, but learning something like Node.js and Python can be beneficial as well. It really depends on what you want to focus on. Learn new technologies/a new programming language, or create a game with the tools you already know?