It is, in many cases, a nightmare to try to downgrade the dependency package, especially if the package is depended upon by core system components.
Along with the reasons mentioned by others, it is sometimes the case that certain software needs an older dependency to run. From experience with CentOS, I know that files get moved from one package to another between major releases. Sometimes, a file is removed from a package and not put in another one. In most cases this is because the file has been superseded by a better option or because it was never any good in the first place. Many developers don't want to look for the new package or rewrite perfectly good working code to work with the preferred alternative. In that case, a developer will limit what versions of dependencies they will allow (it is often done proactively, just in case).
Some organizations like to keep their OS version churn to a minimum such that even new boxes may get loaded with the "current standard" version of an OS. 
Bleeding edge is not always the most stable is a great reason.  In the case of Ubunutu the latest versions are supported for 18 months at a minimum. Where LTS versions are supported for five years (server edition) and soon to be 5 years (both desktop and server) with 12.04.
All the new stuff is just, well... new. More bugs, and support issues. Not to mean it doesn't work just fine 95% of the time. 
Why there is a long list of OS for installing on servers in VPS packages? Normally, the latest version of a software is the best (due to fixed bugs and new features). When Ubuntu 11.10 and Centos 6.0 have already been released, why people are interested to install older versions such as Centos 5.5, 5.0, 4.0, etc (or Ubuntu 10, 9, 8)?
Consider it "Final" meaning it runs great, without bugs or faults. It's a version they're confident will be stable. They've "Mastered" it, it's been out long enough. 