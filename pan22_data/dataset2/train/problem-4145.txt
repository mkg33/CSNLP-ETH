When you mount the ext4 file system, it uses the permissions that are embedded in that file system. If you wish to override these, then use the following:
Just realised after reading last comment at http://ubuntuforums.org/showthread.php?t=2142284 that all one has to do is a sudo chown -Rvf <user>:<group> <mountpoint>
If you're not in the mood to hand-edit your /etc/fstab file, I'd suggest trying out PySDM to define the rules for mounting your ext4 file system on a regular basis.  It can be installed by installing the "pysdm" package in Synaptic, or by searching the Ubuntu Software Center for "pysdm". 
Note: If you're just trying to interact with the file system yourself, you should either fix the permissions on the device, or interact with it as root if it's just a temporary thing (i.e., recovering a broken install).
1. Find the UID of the user you want to mount as: id <username> and look for UID=<userid>(<username>) GID=<groupid>(<groupname>)
If this is for mounting a USB or other removable external drive, you should check out the pmount system which can automate the process for you, or at least make it considerably easier (i.e., pmount <device> should create the folders for you, mount it as your user, and allow you to unmount it as your user)
This will mount the filesystem and mark the specified user as the owner of all files, and the specified group as the group for all files. nosuid is a security measure that prevents the user from bringing in suid programs and using them to gain root access to the system (i.e, a suid version of bash on the filesystem). Adding the noexec option will provide additional security, but will prevent the user from executing files on the filesystem.