You should add some safeguards on the input to prevent your code from throwing all kinds of unexpected exceptions.
I think your code looks rather nice. Your use of a while loop seems good to me because the loop isn't a trivial one. See my explanation on this further down.
The name of your method is a bit odd. I can't think of a proper name though. I named my method Merge but that doesn't reveal the method's intent either.
Why are you using a while loop? A for loop keeps track of indexes for you. Admittedly you do still need to track one index yourself, but you can eliminate one to loop processing:
The purpose of the method is to add a list of items after every nth step (5 for example) where the input items are repeated if needed. I'm looking for an overall review and possible how to remove the use of the while and replace it with a for.
In most cases the iterator gets incremented as long as the condition is not met. When the iterator is missing, programmers get confused: why is there no iterator! And only after examining the rest of the loop they discover the increase of insertIndex. 
The tricky part of this code is the missing iterator. Normally a for loop consists of an initializer, a condition and an iterator:
Now you're only tracking and handling one index yourself, instead of the three that your while loop requires.
So, why do I use a do while loop instead of a for loop? That's because in this case the while loop is easier to understand than a for loop. See what happens when I rewrite the loop to a for loop: