Nevertheless, using an index view seems like the best performing solution here if the downtime is not an issue, so I think I should provide the solution here (it is of course not the exact queries I am using, but it gives an idea).
I have tried an approach with materialized view and with it query performance is just excellent, execution times are consistent within 20 milliseconds which is a huge improvement. Performance degradation to data modifications seems quite tolerant as well (in my case). However I do not think we will be able to use this solution in production because of downtime it requires. Unfortunately, it is not possible to create a clustered index on a view with (ONLINE=ON). And creating a clustered index on a view joining several huge tables actually takes quite a while, in my case it was about half an hour. And furthermore, if we already have an indexed view, but need to alter underlying table, we have to drop the view and re-create it, and here we go back to the problem of originally creating a clustered index on a view and hence downtime again. 