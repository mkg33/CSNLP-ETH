Bear in mind that group membership changes take effect when you login, so some changes may be delayed, and also take into account any NSS caching of LDAP results done in your environment (eg, through nscd)
If you want more dynamic control over permissions, then you'll have to look at how to change permissions or ACLs on the systems in question. One way of pushing out changes in ACL or filesystem permissions would be through a tool like Puppet or Chef, which let you manage configuration changes across machines. You could handle everything through one of these tools (eg, including account creation and group membership), or you could store account/group information in LDAP and just push out ACL changes.
If you're talking about filesystem permissions, then you can probably do what you want with a detailed ACL setup using POSIX acls, and layered groups, and having your group information delivered via LDAP.  
what if you create group AdminServerC in LDAP and then  add to /etc/sudoers on Server C below statement? :
In terms of "on this server the user U is root user", there's nothing that I can think of that will let you do this per se. The root user is the root user, and other users are not - end of story. You could change another user's uid to 0, but this is ugly, ugly, ugly. What you can do is use group membership to control who can use the sudo command to gain root privileges, and again use LDAP to deliver group membership to the servers in question.
If you permission levels are fairly static, then it's probably good enough to set up basic groups with logical permission blocks like "full access to /mnt", and then use LDAP to deal with adding/removing that group from a user's account.  