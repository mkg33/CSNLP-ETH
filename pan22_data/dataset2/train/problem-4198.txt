R0, R1, and R2 contain no partial dependencies (or repeating groups) so they are 2NF.  However R1 and R2 are still an issue, because they contain transitive dependencies.
D and E depend only on A, F depends only on B, G, H, I and J don't depend on the key (directly) at all.
I know firstly you have to work out the closure to find the key for R, which I have done and the key is {A,B} and now this is where I get stuck. My text book doesn't give any examples on how one can solve this except for definitions of 2NF and 3NF.
Now all of your remaining relations (R0, R1a, R1b, R2a, R2b) are devoid of repeating groups, partial dependencies and transitive dependencies.  That means your relations are in 3NF.
When you are looking at an relation that hasn't been normalized and a series of dependencies, you can often normalize by inspection just by recognizing what your primary keys are going to be.  Any attribute or combination of attributes that functionally determine other attributes are going to end up as primary keys.  Once you've got your primary keys defined, you just need to figure out which non-key attributes go with each key.  This is obvious from the statement of what your functional dependencies are.
I'm currently studying for my exams and the trouble I am having is how to decompose a relation R with given functional dependencies into 2NF then 3NF.