This will prevent your reporting query from blocking insert / update queries, and will also make the reporting query accurate to the point in time the query started.
There is overhead to using this option, including increases to the database size and increased usage of TempDB.  So make sure you test accordingly.
In case you don't know, NOLOCK is equivalent to the transaction isolation level named "READ UNCOMMITTED."  I'd recommend reading this blog post from Paul White to understand some of the data integrity implications of using the NOLOCK hint: The Read Uncommitted Isolation Level
I would say not to worry about this unless your users / applications are actually experiencing blocking due to this reporting view.
So after analysing all these thing question, you can use "Nolock" hint in some places especially in Select queries
If there is blocking, you could use the READ UNCOMMITTED isolation level, but note (from Paul's blog post) that it's possible to see totally invalid data in the report.
Like if you find, query view is very important, very frequently use,chances of getting "uncommitted /dirty data is rare.