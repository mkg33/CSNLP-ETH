If all else fails, remove the "bad" master from the service, dump and restore a new clean copy of the database to it.  Follow the usual steps for "adding another master" to do this.
You don't really seem to know what you are doing. First you should get a dump of data to safeguard against any kind of corruption.
Note that by skipping 99,999 log events your master and slave will most likely not contain the same data. You can use the mk-table-checksum script to check the master and slave content.
This sounds strange, since you only provide one SLAVE status and one MASTER status, but we'd need both MASTER and both SLAVE status outputs. Further, there are no replicate_ignore_* statements, this doesn't look like a Master-Master replication. Also, there are no error statements in the SLAVE STATUS. They would have shown any replication errors.
Remember: Don't just execute a command someone told you! Look it up in the manual first and check what it does. Setting your SKIP_SLAVE_COUNTER to someting like 9999 is the reason why your newly create table isn't showing up on your slave becaus it skips 9999 sql statements, which probably haven't happened yet! Usually you don't set SKIP_SLAVE_COUNTER to more the 1, then execute START SLAVE and see with SHOW SLAVE STATUS if there are any new errors.
I never skip more than one event at a time and always try to understand the cause of any replication errors. If I get several/many replication errors in a row it is usually a symptom of other issues (corrupt table/disk for example).