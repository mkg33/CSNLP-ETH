This likely won't do what you expect. If you want an error to be thrown, then instantiate an error with the new operator and precede it with the throw operator:
It would be wise the check the input before comparing the value against other numbers, perhaps with the parseFloat() function:
That way anything that cannot be coerced the an integer (e.g. {}) will cause the error to be thrown.
While it is a great habit to include the break statements, there is no need to include break statements following a return, since anything following the return statement within a function is unreachable.
while this works because each case statement must evaluate to true, it is simpler to just use if statements. Your logic checks if the value is less than 50, then if it is greater than 49 and less than 201. The requirements never specified if the values would be integers, floats, etc. So it would be wise to consider a value like 49.5. That value would be less than 50 so the first condition would be true. However if the value was $200.50 the second condition would evaluate to true, even though the value was more than 200. So update the condition to cost <= 200. Otherwise if neither of those conditions have been met, the value must be more than 200.