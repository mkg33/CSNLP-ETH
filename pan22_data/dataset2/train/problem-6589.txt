Another thing is that when you attach a role to an EC2 instance you give anyone who has access to the instance the same permissions that the role has. So make sure that any user that can log in on the EC2 instance should also have access to the S3 bucket.
The first statement, "ListObjectsInBucket" has the resource set to the bucket. The ARN is arn:aws:s3:::bucket-name (no * there). The second statement has the arn set to arn:aws:s3:::bucket-name/*. The /* there means "all objects in bucket bucket-name". Some IAM actions apply to buckets, others to objects.
You can also use a prefix, like arn:aws:s3:::bucket-name/prefix*, which will give access to all objects that have a name starting with "prefix". Keep in mind that the name of an object in S3 is the full name, including path markers ("/"), so "/path/to/object", not just "object". There are no directories in S3.
Keep in mind that the level of access an object (user, ec2 instance, lambda function, etc.) has to the bucket is given by the policy set resulting from combining the IAM policies and bucket policies. And Deny statements have precedence. You only need to use one of them when both the object and bucket are in the same account and IAM policies are probably the natural choice. In cross account access bucket policies are used to give access to the other account to the bucket, basically. An IAM policy is also set in the other account.
2) What should the principle be in order to achieve this? For instance is there a principle I can set that would simply say "grant access from any resource in this aws account"?
I'm trying to create a bucket policy that will grant access from an ec2 or ecs instance in order to grant them to putObject on a specific bucket.
3) I have gotten this to work by specifying the IAM role of the ec2 instance in the principle (see below). But is this the preferred way of doing it?
1) Is a Bucket Policy the right thing to use if all you want to do is grant access from ec2 to a bucket within the same account?  The docs seem to refer a lot to cross account access.
Your intuition was right. If all you want to do is grant access to a bucket in the same account it's probably simpler to just use an IAM policy. You would attach such a policy to a role, which in turn will be attached to the EC2 instance.