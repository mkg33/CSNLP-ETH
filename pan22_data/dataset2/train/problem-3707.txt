Here, the as T clause makes it very obvious that results is of type T. Using var means that changing T becomes a single operation, as opposed to changing it in two places.
Without some more context on what your goals and/or concerns are its hard to say. This seem ok, although passing delegate functions is relatively expensive so if hyper-performance is required, you should refactor that. Aside from that, the only issue may be HttpContext.Current being null which would cause a NullReferenceException, although I assume this is not possible given your hosting scenario.
Logically, it makes sense to me that you would want to tie a key to a Func.  This method could then just take the string and then delegate the responsibility to decide how to fetch the value to another class.  Also, a few nitpicky points about what is actually there.  I consider using letters as variables poor practice since it gives no context as to how it will be used.  I would rename "f" to something like "retrieve" or "fetch".  Also, there is no guarantee that running "f" will actually give you a non null value.  In that case, I doubt you would want to store null in your cache.