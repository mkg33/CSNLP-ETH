In OpenGL and Direct3D11 depth write is disabled if depth test is disabled. To enable depth write with out depth test in gl you must enable depth test with depth func always.
In Direct3D9 if D3DRS_ZENABLE is set to D3DZB_FALSE and D3DRS_ZWRITEENABLE is set to TRUE is the depth buffer written to?
The closest answer I can find is from the DXSDK article "Depth Buffers (Direct3D 9)"; relevant portion extracted (with some parts about the color buffer and w-buffers removed):
This implies that depth buffer writing is part of the depth test itself, and that if the depth test is disabled then writing is therefore not done.
I could whip up a quick test program, but that of course would only be valid for my hardware and drivers.  So given the apparent lack of a more definitive statement, I'd be inclined to play safe and assume that the behaviour is the same as D3D10/11 and OpenGL - after all, setting the depth comparison to always and writing to true is absolutely guaranteed to produce the desired result, whereas relying on it writing with the test disabled puts you in the clutches of how hardware vendors have decided to interpret this unfortunate vagueness.
See D3DRENDERSTATETYPE enum values and D3DCMPFUNC.  Specifically, look at D3DRS_ZFUNC and try setting it to D3DCMP_ALWAYS with D3DRS_ZENABLE set to true, similar to what the GL docs indicate do.  See also Depth Buffering State (Direct3D 9)