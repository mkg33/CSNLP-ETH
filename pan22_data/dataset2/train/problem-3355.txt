Take for example Twitter. Twitter itself is served by a web-server, but when a client clicks on "followers" the browser sends a web-services command to the webserver asking who the followers are. 
A web-server serves files by definition, but it must run some type of web-service in order for it interact with clients. Also, in sysadmin circles, a webservice can be any service that can be exposed as it relates to the webserver. For example if you have a website with 4 customer facing applications (mysql, tomcat, apache, netbeans) you could loosely refer to those as "webservices" even though they technically are webservers and database services, but this isn't what you were looking for I don't think. Stick to webservices as to it relates to APIs.
Also this should expand well - http://en.wikipedia.org/wiki/Web_server and http://en.wikipedia.org/wiki/Web_service
So the difference is the "audience": a web server serves pages for people to read in a browser; a web service provides data to some program (which may itself be a web server ;-)).
I know that with web server, the html pages are transfered from server to client, with web services, a xml file is sent, but still ... I don't understand them; not even the difference between them.
Generally, when you hear "webservices" in web 2.0 speak, like an API, you're talking about a programming language that is listening on the web-server waiting for commands or queries. 
To make the confusion complete, most web servers (the program) can be used to implement a web service (as the technical basis is the same). So it's not really a technical distinction, but one of which purpose the server has.
A web-service is the mechanism through which the web-server understands a request from a client and in turn reacts to it. The reaction could be serving up the results of a query, doing an internal command and other similar items. 
A web-server has the files you want to give to the client. (client can be a browser, an application or another web-server, or another server)