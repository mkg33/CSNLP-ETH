Usually only the low-level USB drivers are built into the kernel. Higher-level drivers, particularly vendor-specific drivers are loaded on demand. How this works depends on the OS, but most modern OS can load drivers into the kernel at runtime, e.g. Linux using modules, or Windows using the Windows Driver Model.
That question is not quite clear. Yes, the OS must load drivers, and yes, this may take some seconds, but it is only done once. And PCI will not be a problem, because PCI is much faster than even USB 3.0.
The reason a device can have multiple endpoints is that there may be multiple kinds of communication going on at a time, for example control data and actual device data. To separate these, multiple endpoints are needed (a bit like the data+control channel which FTP uses).
For the second item, I can only speak from what I know about Linux, but the driver is loaded from disk into kernel the first time it is needed (if it is modular), but from that point out it is in memory.  This means fast response times, but potentially sluggish setup times.  That seems normal / acceptable to me.