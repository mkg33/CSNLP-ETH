4.) Sounds like you have the space in dev, but sounds like you won't get the IO performance. I think for dev, this is likely fine, but make sure you have a more prod like environment someplace to do performance testing - or make sure you have the ability to attack performance problems after deploy in production. Not sure what industry you are in, what up-time requirements you have and how your deploys work..
3.) In prod are you multi-instance or multi server? You might consider looking at virtualization in dev, though that increases some complexity and license cost depending on how you go. It also makes dev look a bit less like production if it is on a virtual, but it is not unheard of at all to give developers virtuals even in a physical production environment.
5.) Also pay attention to the license in dev. SQL Server Developer edition is great. But if production is not Enterprise, make sure your developers are not developing with assumptions that things will just work the same in prod. Dev edition works just like enterprise. So know what features will and won't work in standard if prod isn't enterprise and just make sure your developers appropriately manage this risk. This link will help there.
1.) Development environments don't always (and in my experience don't typically) match production and I'm not sure you always need to have a dev environment match production in terms of size and performance. In a perfect world with an unlimited budget, sure. As long as you have -some- environment somewhere that can mimic productions performance for you to do serious performance and load testing on you'll be good.
Plus one on the book suggestion and the thoughts on leaving memory for the OS and about the CPU load in Kevin's answer and Kevin brings up some good points but a few more thoughts for you to ponder as you settle on a solution:
2.) Having 10 instances on one machine will definitely cause you some occasional heartache at times if all 10 instances are being worked on at a time. But then again, so would having all of those databases in one instance with lots of people working on them at a time in the same instance. So look to how you have it set up in prod and why you have it that way. If permissions are different and there are cross instance communications between your applications (do your apps talk to the different prod instances at different times?) then it makes sense to provide some separation via instances in dev.