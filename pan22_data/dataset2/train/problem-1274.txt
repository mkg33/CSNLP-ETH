I would rather suggest you to create your own CNN for this task and train it from scratch and then tune it's hyperparameters and i think that will give you much more better results as compared to using a pretrained model, these models have deep architectures and have millions of parameters which are learnt over a huge dataset, and these models are deep and they were made solely because of the fact that training such a deep network with so many parameters will require a good amount of data because i don't think so there any ferrari's in the coco dataset so doing training on top of that won't increase your model power upto what extent you may be wanting because you don't have that much data.So, why not build a CNN from your own hands your own network that should give you better results because as you said you have only two classes to classify.
If you have a previously trained model to classify only cars, you can use it considering the fact that you have less data. The trained model for cars classification that you have already, would have been fine-tuned on the Imagenet or COCO in the first place. This way I think you would be able to train the model in less amount of time compared to fine tuning on Imagenet weights. Try both the methods once and try to find out the amount of performance increase in terms of time and accuracy over each other.    