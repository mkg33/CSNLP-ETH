I'm under the assumption that duplicity would interpret the /backup path as relative to the user's home directory.
i know it should be like that automaticly, since you are try to connect the backup user, but as i can see in you question the two ansers you are getting from bash are diefferent, one is with ./backup and the other is :backup, so i think that you should try with the ~ sign.
But since the above command didn't work, I also tried leaving off the / in the backup directory at the end of the command, i.e. 
Using my private key to do so, this command allows me to connect to /home/backupUser/backup just fine:
The error is that (although somebody has indicated that it should be not be ":") the format should be:
Although in the risk of getting -1, I want to clarify on the common mistakes we make on duplicity format (which the original question has made).
since your are using bash i assume you want to connect to a linux user, you should try to append the ~ sing before the /directory , it is in order to go into the users home directory.
I made the changes to the path suggested by @Sivaram Kannan above, and added the -oPort argument to the --ssh-options, and that seemed to fix the problem:
Is there something I'm missing here, like adding the passcode for the private key to make this command work?
I tried an sftp command on it's own, and noticed that I was getting the same error (No such file or directory) whenever I left out the -oPort argument.