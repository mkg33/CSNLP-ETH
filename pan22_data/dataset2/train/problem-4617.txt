Dropping a database from the AG (ALTER REMOVE DATABASE) allowed transactions to resume on that specific database. This left the database in the RESTORING state on the secondary, as expected. In an attempt to put the databases back in the AG, we tried to apply the latest tx log backups on the secondary. The secondary rejected the tx log backups with an error about LSNs not matching. I unfortunately didn't write the specific message down, but it wasn't the simple 'you need to restore an earlier tx backup' message. We were giving it the tx log backup, it would spin for 30 seconds and then error out.
Why would a shrinkfile operation on a single database lock up every single database on the secondary? First thing we tried was restarting the secondary sql instance. This had no effect.
I am in over my head here. tl;dr; did a shrinkfile (I know, I know) (shrinking a 100gb file with 10gb of empty space by 2gb), it ran for ~15 minutes, then everything broke. What I don't understand, is WHY did everything break? We have two servers in a synchronous AlwaysOn Availability group. Sql server 2014 sp1. server 2012 r2. The primary started rejecting transactions with the log message Remote harden of transaction 'user_transaction' (ID 0x000000887e6bc779 0000:002ede71) started at Mar 13 2018  4:20PM in database 'AAAA' at LSN (296:17783:1) failed.