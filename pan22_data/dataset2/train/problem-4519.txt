Keep sensible account lockout policy. start with something moderate and then monitor related helpdesk calls and tweak the lockout policy as required. e.g. too many calls then relax the lockout policy a bit.
Anyhow, the 8 character, three of four character group rule is pretty standard.  What I personally do is train my users to create passphrases instead of passwords.  This makes coming up with passwords much easier, and they don't spend as much time trying to figure out how to work in all of those character requirements.  A password like "It's sunny. Yippee!" is easy enough to come up with and remember.
Since not even the security experts can agree on a good middle ground on anything related to passwords, I say that most advice on any extreme is just stupid unless you're specifically in a high security situation.  What I think is most important, and what I have users actually sign off on, is a statement similar to: "DO NOT EVER SHARE YOUR PASSWORD WITH ANYONE.  I DON'T CARE WHO THEY ARE OR WHY THEY NEED TO GET ON YOUR COMPUTER WHEN YOU'RE ON VACATION.  THE SECURITY OF YOUR PASSWORD IS YOUR RESPONSIBILITY."  The single greatest abuse of accounts from what I've seen comes from people sharing passwords.  All the other 133t hacker stuff is a barely a concern in a regular old business. 
What this limits is the abilty of folks to brute force your security. I usually recommend a threshold of 5 and a duration of 2 hours, but that certainly depends on the situation.  As Boden pointed out, not even secrity experts can agree on what a secure password policy is.  In fact I'd implement server and domain isolation before I'd worry about my password policy.  At that point I'll give you my password- you're still not getting into my resources.
The other standard Windows domain rules are fine, IMO, except that I only require a password change every quarter.  Personally I'm not sold on the notion of password expiration.  Even thirty days is an eternity if an account is compromised.  Anyhow, people get really irate when they have to change a password.
You could implement passphrases instead of passwords. So something like "Why are passwords so complex?" could be a password.
If possible buy a password self service product, so that users can themselves reset password or unlock their accounts. ( Roughly 30% to 40% of helpdesk calls are related here)
Lastly use a password cracking tool to periodically check strength of password set by people and warn people with very simple passwords to choose better. Remember hackers just need one account to get in your network.
The Nist publication is OK, your domain pasword policy is not as important as education of the users to not share their passwords.  There is nothing intrinsically wrong with a nonexpiring password so long as it's not taped to their keyboard and they dont share it.  Basically any parameters you set will be just fine, the 2 biggest things to think about are:
There's a problem with this approach, however if people use proper English grammar when they're writing their passphrases, and thereby limit somewhat the total number of possible combinations.  That is, a password that always starts with a capital letter and ends with a period isn't stronger just because it contains a capital letter and a period, it's weaker because we can guess this in advance.
duffbeer703's link is good.  There are some technical reasons for certain password limitations and minimum requirements.  You especially need to explore these limitations if you're not in a completely homogeneous environment.
Keep password expiry as the multiple of 7 like 28, 42, 91. This ensures that periodic password resets after expiry are spread out evenly in terms of weekdays. This matters when you have thousands of accounts. e.g. if you have reset your password on Monday, your next password expiry will come on Monday only.
Educate users that longer the password better, even if its not complex. (proven study shows small password with high complexity get cracked faster than longer simpler passwords)