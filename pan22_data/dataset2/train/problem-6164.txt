For now you can keep using Fixed Function Pipeline but in the future I suggest you to learn shaders.
Note: For some languages (like java) if you write a floating point number, you get a double instead of a float, so you need to give a suffix to it, like 0.5f
And after that you have to update your screen, the way to do that depends on which library you are using for windowing.
This can make your game even faster, if you have multiple of the same model, like a 2d plane for sprites, different tree models, etc. In these cases, you only need to bind the vertexArray once, then render different objects at different location, with different attributes, it depends on you what you do with it.
This is the easiest method for drawing simple things, however, because you do a lot of native API calls, it is really slow compared to other techniques. Instead, if possible, and you GPU allows it, use Vertex array objects.
First you have to clear everything - because you are a newbie you can use glClear(GL_COLOR_BUFFER_BIT);
There are plenty of ways to do this, I mention here the 2 most popular one, so vertex array objects and immediate mode.
Sadly, this topic is too in-depth for this post, and because I don't even know what language you're using, I can't even link a tutorial. Google it.