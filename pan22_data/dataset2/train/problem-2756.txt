Is there a way to stop MSYS/MinGW from transforming what it thinks are paths on my command lines?  I have a project that's using nmake & Microsoft Visual Studio 2003 (yeecccch).  I have the build system all ported and ready to go for GNU make (and tested with Cygwin).  Something weird is happening to my compiler flags when I try to compile in an MSYS environment, though.  Here's a simplified example:
I found this question while searching for a way to run a windows program which requires an argument in the form:
Hopefully there aren't any programs out there that use this (imho insane) form of command line arguments outside of Microsoft, if there are, I don't think it's possible to run them with MSYS
As you can see, MSYS is transforming the /nologo compiler switch into a windows path, and then sending that to the compiler.  I really don't want this to happen - in fact I'd be happy if MSYS never transformed any paths - my build system had to take care of all that when I first ported to Cygwin.  Is there a way to make that happen?
The final answer is that there is fact no way to stop this behaviour. I had to go through every line in the build system and change every / into a -.
Which produces the expected results, but this build system is very large and very painful to update.  I really don't want to have to go in and change every use of a / for a flag to a -.  In particular, there may be tools that don't support the use of the - at all, and then I'll really be stuck.
I was actually really surprised by this, as this is not documented by the program's help. It just so happens the program in this case is also made by Microsoft (as is nmake in the original poster's case). So if the program you're attempting to run is made by Microsoft give this a shot even if it's undocumented. 