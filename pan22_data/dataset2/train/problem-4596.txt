Not every genre is conducive to a "minimally viable product". Or at least, not in the same way and they won't achieve the same purpose.
But this fed into the dynamic of the Zerg in terms of unit design. See, SC1's Zerg were basically built around three fundamental units: Zerglings, Hydralisks, and Mutalisks. These are your basic unit, and everything else is essentially a support unit for them. So Zerg don't really tech-switch like other races; they add a few extra X's to their existing army composition. Big tech-switches for the Zerg were mainly about which fundamental unit the core of your army is built around.
So I would suggest that you make a small-scale RTS as your MVP. A complete RTS. It doesn't need all the graphics there, but it does need all of the stuff an RTS actually possesses. That will be able to serve the function of an MVP: to figure out how to go about making the game you want to make.
Consider a level-based 2D platformer. An MVP for such a thing is primarily about finding good jumping mechanics. You don't get to change your character's jumping physics once you start designing levels, so you need to nail that down early. So you pick some jumping physics, build a couple of test levels, and work out what kinds of physics feel good. You also try some mechanics, like tossing in a few enemies and working out how you want that to work, and/or specialized terrain and abilities (carrying items, etc).
I’m guessing you probably don’t actually want an MVP, because you’re at the point where you have some idea but don’t even know if it’s worth making into a product. It sounds like what you want to build is a demo or some other prototype. The typical way to do this is to make a single vertical slice of the game that includes all of the mechanics you want to test. In an SC2 type RTS, that might be a single mission (if you’re doing single player) or a single multiplayer map.
A product is something that you charge money for with the expectation that someone will buy it. If the thing you want is an MVP, it has to be just good enough for whatever price point you have in mind. That is, it can be limited in scope, but it must be complete enough to be fit for merchantability.
Each design element feeds the other. If you change your production model, you now have to change your unit design to compensate.
An RTS doesn't really do that. Or at least, it never really stops. Every aspect of an RTS feeds into other aspects of it. While it is true that there are some things you just don't change past a certain point in development, overall development is much more fluid. Here's an example.
That one change fundamentally changed the nature of the Zerg as a race. For other races, tech-switching (changing your primary unit producing building) is a process that necessitates a substantial investment. For the Zerg, you just throw down one building, and your entire production infrastructure can build them.
A "minimally viable product" for an RTS just doesn't work in general; all of an RTS's mechanics interact in too many ways for a "minimal" product to be anything more than, essentially, a full game.
Towards the end of StarCraft I's development, Blizzard made what I would consider to be a pretty earth-shaking change. In earlier builds, every Zerg building that made units available produced its own larva, which was used only to produce those units. Basically, in that build, larva was an alternate form of unit queuing. This was changed into the mechanic we know the Zerg for today: all Zerg units come from larva produced at a central structure.