The version of git you're running is one that has had 164 commits since version  1.7.3.2. The exact git revision number begins with  the prefix g6f10c  (these 6 digits should be enough to uniquely identify the commit if you need to refer to that revision in particular).
Before a new feature is ever merged into master, it is reviewed on the mailing list and “cooked”  (often for several weeks) in the pu and next branches that the developers regularly test and use.
The output from git describe adds extra information to better “nail down” the specific version when you are based on a commit that is not explicitly tagged.
master is almost literally a merge of the latest maintenance release and the current accumulated features for the next feature release.
Major releases often contain incompatible changes. Feature releases introduce new features. Maintenance releases contain bugfixes.
You can see released versions by running git tag and you can get version 1.7.3.2 exactly by running git checkout v1.7.3.2.
The output of git --version is based on the output of git describe on the commit that was used to build the binary (see GIT-VERSION-GEN). 
Do I have a pre-release build? If so how can I use git, itself, to checkout the most recent stable build? git branch -a gets me: