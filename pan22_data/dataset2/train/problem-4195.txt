To calculate the proportion of contact between two gameobjects, e1 and e2, I iterate through all vertices, v1, in the instantiated mesh of e1 and find the closest point on the mesh collider of e2: v2= e2.meshColl.ClosestPoint(v1). If the distance from v1 to v2 is under some threshold distance (0.01f appears to be the default in unity), then the vertex v1 is deemed to be in contact with the object e2. The proportion of contact between e1 and e2 is the number of vertices of e1 in contact with e2 divided by the total number of vertices in e1. Note that this is not a symmetric measure i.e. in general contact(e1,e2) != contact(e2,e1)
Initially I thought iterating over all vertices in a mesh would be too computationally expensive to do for each pair of objects but it turns out not to be, especially since my meshes are relatively simple. 
If your objects are, or can be well approximated by, collision primitives, then you may be able to use the physics engine to estimate the smallest distance between them:
So I think what you want is something more like the closest distance / penetration distance, or a measure of the volume of space sandwiched "between" the objects. 
Another strategy you may be able to use if your contacts are "plane-ish" (ie. not wrapped around, like entwined chain links) is to use the rendering system to convert the 3D space to a raster image you can more easily analyze.
Now you can apply any image analysis technique you can imagine to this separation depth map. You could look for its local minima (near-contact points or deepest intersections). You could sum areas of pixels to compute the volume of space in the sandwich. You could form a histogram of separation distances to categorize things that approach at only a few points vs objects that stay closely parallel/lapped over a large area...
Imagine we have two objects, finite in extent, touching at one point, with neither fully enclosed by the other. I can increase the Hausdorff distance to be arbitrarily great by taking part of one object's surface on the far side from the contact point, and extruding it into a spike or tendril that escapes to a great distance from the other object. I haven't changed the nature of the contact, I've just changed the shape of a part of the object nowhere near the contact, and yet I've completely distorted the measure.