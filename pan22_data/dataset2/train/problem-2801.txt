My advice is to normalize all your animation frames so that they are the same size. That way, your player's rect never changes and in your game's draw() method you can always just render the player's image at the player's rect without having to worry about variable sizes. Use a rect size that can accommodate the largest animation frame you have. This is what I do when I use Pygame.
If you're worried about such a large rect giving you problems with collision and so onâ€”don't. You can define a bounding_rect object for your player with which to calculate collisions. The bounding rect should be significantly smaller than the rect and should sit inside it.
I would also suggest creating a position attribute, pos, for your Player class. This is what you should change when you do input processing. It's your pos attribute which changes when you press a direction key. Your bounding_rect will simply follow your position, and the larger rect you're using for blitting images will simply follow your bounding rect.