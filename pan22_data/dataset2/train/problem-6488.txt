There's no need to start the server in single user mode to transfer the logins using sp_help_revlogin.
This might be because you are attempting to connect using SSMS.  Inside SSMS, Object Explorer will open one connection to the database, while each subsequent query window will open another connection to the database.
What I have done in the past is open SSMS, do not connect to any database via Object Explorer, and open a Dedicated Administrator Connection (DAC) query windows by doing the following:
I would suggest that you start the SQL Service from the command line, and then using SQLCMD to connect to and run your scripts.
I have had a similar experience with Single User mode.  It is easy to think, "I started the single user mode - I should be the single user."  But applications do not know that. The first ting I check is stopping any application services before starting the single user mode. Another way to stop other connections in single user mode is to deny connection to the login(s) that are connecting before you.  Finding out who logged in?  Turn on "Login Auditing -- audit both failed and successful logins" in the instance security properties. Start SQL in single user mode wait a bit - then stop it. Then check the SQL Error log with notepad from the log file location.  Any login that is connecting or attempting to connect will show up in the SQL Error Log.  When those logins are denied - they cannot get connected before you. Once you are finished with single user mode -- remember to re-enable the logins. 
If you're a SysAdmin on SQL Server, have you thought about putting the databases (ok, so there might be quite a few) into restricted_user mode? However, the apps and other users won't have elevated permissions.