If you don't want to guess a number, and prefer to list all suspect directories ordered by "size", that's easy too:
Inodes can also be used up by files that have been deleted but are being held open by a running process. If this Munin package includes any constantly-running programs, another thing to check is whether it's holding open an unusual number of files.
It will print out how many files and directories are in each of the directories in the current folder, with the largest offenders at the bottom. It will help you find directories that have lots of files. (more info)
The idea behind the find line is that the size of a directory is proportional to the amount of files directly inside that directory. So, here we look for directories with tons of files inside it.
ls won't find files whose names start with a period. Using find avoids this. This finds every file in the directory tree, stips off the basename from the end of each path, and counts the number of times each directory path appears in the resulting output. You may have to put the "!" in quotes if your shell complains about it.
Try it with a file in your directory - you'll (probably) see an equally high number, but it's not the count of inodes, it's just the inode # your directory entry points to.
I'd brute force this one: run tripwire on the entire device for a baseline, then run a check some time later and the offending directory will stick out like a sore thumb.