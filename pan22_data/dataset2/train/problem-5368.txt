So if you're looking at this solely at the point of view of the Ethernet interface, you would be correct. However, looking at this from the point of the device using the interface, you would be incorrect: it would see the network from the TCP/IP or UDP/IP layer and would usually be completely indifferent to what exists beneath that.
A router has a IP for each port so that it can communicate with other routers and more advanced devices. Since these IP packets are in Ethernet packets it will also have MAC addresses.
A switch has a MAC so that it can communicate with other switches and more advanced devices. A switch is a smart hub.
What you say is more or less correct: None of your switches have IP adresses. But your hosts do have a IP and the ethernet frames that pass the switches contain the IP's of host1 and host34. Your switches just don't care about those IP's.
This is like a switch with 2 ports where 1 (virtual) port is connected with a cable and 1 port is connected with the operating system of the computer.
This is a simplified version of the theory, I ignore a lot of things (e.g. There is both IPv4 and IPv6). It's simplified but should be correct enough.
There are solutions (eg Ethernet over MPLS) that actually allow transferring ethernet frames over a WAN - these are in production use in some applications but still somewhat exotic. Used in scenarios where you want multiple physically separate machines - in different buildings or even towns or countries, so that eg a local disaster will not wipe the whole setup out - able to quickly take on a given, identical IP address as needed without having to change routing or wait for DNS propagation.
Yes and no. At the data-link layer (Ethernet in this case), there is no concept of an "IP address": the only address that exists is the MAC address. Frames that are sent can be marked as containing IP packets (EtherType 0x0800/0x86DD), but it's up to higher-level layers to decide what to do with the data.
There are non-IP packets to be found even on a modern LAN: ARP, a helper protocol IP uses to associate IP addresses to MAC addresses. Various discovery protocols for network-connected devices (which you want to be able to discover without knowing beforehand eg what address they were given by a DHCP server). Sometimes, legacy NetBEUI broadcasts if older Windows machines are involved. Spanning tree and LLDP, which is the shop-talk between intelligent network switches (they are actually gossiping about the expensive macbooks acting entitled!). 
You could have hosts without IP addresses, but you could also have IP addresses. You don't need a router to assign IP addresses. You could:
All types of data will always move over hubs even if it's not a ethernet packet. A hub will just read all bits it sees and sent them back out again on every port. It doesn't have a MAC or IP because it doesn't care about the fact that the bits are ethernet packets.
No, that's not correct. You don't need a router for two hosts to communicate using IP as long as they're in the same network.
A wrinkle that can occur is if you start using VPN tunnels. If you set up a VPN in bridge mode (let's say between switches 2 and 3), you now have a layer 2 frame encapsuled inside a higher-level packet!
(These are all theoretical devices, many real-life devices take on some properties of device A and some of device B)
As for traffic, provided we are indeed talking about Ethernet switches and interfaces, you can have Ethernet frames running through the network, and these Ethernet frames could contain anything, including IP packets. Without a router connected to the outside world, they would not be able to reach other networks (or the Internet at large), but the hosts could speak IP between them provided they somehow got IP addresses as described above.