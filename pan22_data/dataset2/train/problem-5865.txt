It offers a defence against a possible man-in-the-middle attack. Suppose a malicious party had somehow been able to hijack the request for the file, but had not been able to alter the text of the web page itself. The MITM would be able to get you to download a different sequence of bytes, but would not be able to make the hash of his file match the hash quoted on the qweb page, that of the real file.
An MD5 hash doesn't protect you if the site gets hacked because the MD5 sum an be changed as well by the hacker. A GPG signature (in a separate file) would protect against this if you have a copy of the public key that you've gotten from somewhere else, or verified that it's the correct key by checking the signatures on the key.
Why do sites offer an MD5 hash of a file?  How does that help you verify the integrity/source of the file?  Wouldn't paying attention to your URL be enough security?
Well in theory both files should produce the same hash if they are exactly the same (though collisions do occur).
It helps to verify that once you are done downloading the file, that you have the same file that is sitting on their server. 
After running your local file through a hash function, if the slightest difference is found between your copy and theirs, it will result in you getting a different hash than what they have posted.
What an MD5 hash is good for is making sure the file didn't get corrupted in the download process. TCP checksums don't all of the errors that could occur while your file is in transit (though those errors are rare), and I have seen an ISO image get corrupted during the download process before.