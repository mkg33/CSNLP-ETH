Exponential growth can best be explained by brute force: we start with a single bacterium. This kind separates every six hours and never dies. Make a table or better, pictures: After one day, there are 16 bacteria. After two days, 256. And so on. After 18 days, our colony weighs ten million tons. That should make an impression. You can make it a search problem again: assume our start bacterium had a marble in its body that is passed along to one offspring. After 20 days, how long do you have to search for the marble if you can only examine one (or ten, hundred...) bacteria at a time?
I honestly think there is no "natural" notion for computiational hardness; it is inherently a creature of human minds.
I find that the most "natural" way to get an intuition of complexity classes is to revert to Turing's starting point and try to solve the problem "manually".
Next try a traveling salesman task.  Start with a grid of say three cities with distances between them.  The class will probably be able to solve this in short order.  Now double the number of cities to six, and continue with the exercise until everyone's head is spinning.
An experience like this is very likely to leave a lasting visceral impression that a purely technical introduction may not.
Start with a sorting task.  From a jumble of, say, five words have the class order them alphabetically.  This should be easy.  Then double the number of words, and repeat the exercise.  It will be obvious that, though the second problem is harder, it isn't that much harder.
Another thing often used in magazines for children is folding a piece of paper: how often do you have to fold to reach the moon? (not too often) Also popular: the guy with 1, 2, 4, ... grains of rice on the chess board. Creating a full table of a binary function with 3, 4, ... parameters is telling, too.
Maybe a simple analogon can help to understand polynomial growth. Give your students (virtually) the following task: With a sensor that can scan one cubic centimetre, find a cent piece. How long does it take you if you have to search
This reduces computational complexity to measures known from elementary school; who has not wondered then why 1000m give 1km, but 1000m² do not give 1km²?