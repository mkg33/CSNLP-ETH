If you aren't in a domain, then your server's certificate has to be imported into the client's Trusted Root Certificate Authority.
The certificate that gets installed is valid only against the name of the PC. I kept connecting to the "phenom" workstation based on its IP address which was causing the self-signed certificate to fail verification. Connecting based on the name eliminated the warning and allowed me to utilize the certificate in the correct manner.
To be honest, if this is a low security environment and you are sure you know the target machine, just click ok/allow it.
All it means is your computer does not recognise the entity which signed the certificate the remote computer is presenting to identify itself with. By default, windows trusts signing authorities like GoDaddy and VeriSign so when you visit websites with certificates signed by these authorities, windows accepts that the remote computer is who it claims to be.
Regardless of how old this post is, this question is still valid and remains "unresolved". I just today was able to fix this issue for my own system.
If you don't get a root CA signed cert, you will to import the current cert on every new client you connect from. If this is for business use, just get a signed certificate for the server and save yourself the hassle.
I'm assuming you are using a self signed certificate and you are not part of a domain. If you are part of a domain, and your domain hosts a CA, then the self signed certificate won't do.
If however it is a high security environment and you want certificates to work, make sure that you have imported the certificate in to the correct zone. Try importing again and allow the system to choose the location to import to.
I have a PC named "phenom" that i connect to from a PC named "laptop". Upon connection, I get the warning message mentioned by the OP. After a fair bit of searching, I found the solution:
To "fix" the message, you can either tell your computer to trust the signing entity by adding the server certificate to the trusted root CA store on the client as described by @surfasb, or get (buy) and import a new signed server certificate from an already trusted CA.