RFC1122 specifies "in a stream of full-sized segments there SHOULD be an ACK for at least every second segment".
I have a TV service that uses ADSL technology. It means that my TV is basically streaming everything over the internet.
It depends on the streaming protocol, but it could be sending acks, retransmission requests, client quality reports, playback commands (play/pause/rewind), and requests to change the stream bitrate to better fit the network conditions. 
If their 'streams' were delivered as uniquely identified blocks of data, it would be trivial to have the devices cache all downloaded blocks and act as distributed storage. For live streams it is difficult because there is only one origin point for data blocks, but by giving each stream-viewing client a random 'block offset' starting point (equivalent to a broadcast delay of 0-30s) client demands can be spread across a range of blocks and clients can be leveraged to redistribute blocks to other clients. Block availability can be intelligently managed by the control server with new blocks being pushed initially to the clients with the highest upload bandwidth and those clients being instructed in turn to push data to another tier of clients.
Note, I'm not talking about the bandwidth down, which would by much higher. This is up, in other words, my TV provider's set-top box needs at least 1MB/s upload capacity in order stream down a 2-3MB/s stream (I'm guessing on that).
If the devices have moderate local storage (64GB) then VoD / PVR services for recently-shown content would be trivial to implement at almost zero bandwidth cost to the provider. Individual devices would be instructed to retain or delete stream blocks as necessary to maintain sufficient block availability across the distributed storage network according to forecast/measured demand. Playback is achieved simply by requesting the relevant blocks and performing some local caching, with a central server available to guarantee availability if required.
None of these would get anywhere near a sustained 1Mbps data rate, so they are probably asking for more than they really need, in hopes that with the extra headroom, other traffic wonâ€™t be enough to trigger congestion and bufferbloat that can interfere with the smooth playback and operation of the streaming service. 
Ack packets on ethernet are minimally 64 bytes in size, 'loaded' downstream packets on typical PPPoA DSL deployments are usually 1492 bytes in size. 
Therefore your minimum ack bandwidth ratio is 64/(1492*2) = 2.15%, or 22,490 bytes of acknowledgements required per 1MB received, or as a bitrate approximately 110kbps (0.1Mbps) up per 5Mbps down.