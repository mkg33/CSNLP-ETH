Basically pound gets the public IP, and distributes the requests to the appropriate private IP by reading the HTTP request headers.  Generally you didn't used to be able to do this with SSL, but there ways to do this now, see this link.
The homepage of Pound explains how to do exactly this up by using pound as a reverse proxy in the VIRTUAL HOSTS (IN GENERAL) section.  Although the author says he doesn't think this is Pound's job :-)  I think you also might be able to do this with Apache using mod_proxy.
Is there anyway to translate a Name (i.e. clientXYZ.ourtestserver.com) that say GoDaddy's DNS resolves to the host server (64.89.12.44), to the private IP (192.168.248.16), and forward all traffic to the guest?
No, this is not possible using a single address without accepting drawbacks or using software that is specialised for this approach. What you can do is: 
So here goes... If all of the unique external DNS entries you need resolve to the same IP address, then simply configure each VM server to be aware of how to reach each specific VM server by the way of a static route.  You need to hardcode the fqdn in the host files of the affected VMs or you can use your internal DNS if you have one.  You will still need to configure specific routes for each machine you are routing to locally.
If I understand your question correctly I can think of a way to do this which might indeed work for you.  It is a bit convoluted but I think it will work.  Each VM machine can be given the ability to route from one machine to the other.  Considering this is a test environment, the performance hit of this method may not matter.
This works fine to RDP into the Windows Server 2003 host and preview the sites and client/server from there, but some of these sites/servers need to be accessed externally by clients.
I have a dedicated test server with a single public facing IP that has VMWare Server on it and 4 test environments hooked up through NAT.  