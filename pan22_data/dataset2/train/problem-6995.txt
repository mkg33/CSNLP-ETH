Which brings me to the other issue. The MBR contains more than just the boostrap code for loading Windows in this case. It contains the partition table describing the location (specified both using the CHS and LBA address format) and size of your partitions. A potentially large portion of this information would be different for the new disk.
Using the method on the page you've linked allows you to efficiently copy the information you want (the contents of your partitions and the bootstrap code to actually load Windows) and also avoids the difficulties of correctly setting up the partition table - that would all be handled when you initially create the partitions on the new disk.
I've used the software that Crucial ship with their SSDs with duplication cables - EZ Gig II - and it works great. Lets you do a live copy of the disc, while in use, and then you shut down, pull out the old one, plug in the new, and Bob's your uncle.
I want to migrate to an HDD with a greater volume than I have now, so I need to clone existing HDD to the new one, then I'm going to insert it and I need it to boot the current Windows 7 properly. After some googling for a software that can create a full copy of hard disk, I decided to use live CD of, say, Ubuntu and run dd command. I thought that one execution of dd command is enough, but then I came across this site http://www.nilbus.com/linux/disk-copy.php and now I'm confused. Why does he copy MBR explicitly and why did he create equal partitions. Is this all optional? Is the only thing I need is one line of dd?
There are a couple of problems with using dd. Firstly as already mentioned it would be quite inefficient as it copies literally everything - better to use the ntfsclone utility for that part. However if you were to use ntfsclone it wouldn't handle the MBR which you'd have to copy separately using dd.