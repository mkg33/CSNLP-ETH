This subject alone has helped me a lot as it involves many psychological aspects that are great to have in mind when designing and developing games. 
Usability.  Designing a good and intuitive UI is actually quite hard, ensuring that all the info the player needs is nicely laid-out on-screen, that it doesn't obstruct the action or eat into available screen real-estate, that it's obvious when it needs to be but doesn't detract from the main scene, that the correct options are exposed in the menus, etc - that's not easy at all and takes lots of time, testing, and iterations to get right.  Basic usability lessons can be picked up from almost any program, and it's well worth investing time to get right.
Input.  This one is vitally important, and kinda ties in with usability.  The graphics are the sexy stuff that people like looking at, sound gives important cues and clues, but input is the player's primary interface with the game so you'd better have really good input code.  Getting a bunch of ultra-competitive multiplayer fans to road-test your engine can be quite illuminating here, not to mention humbling.  You very quickly find out where your input glitches, quirks and lack of responsiveness lies.
I have seen game developers stuck with algorithm or optimisation problems, or simply writing very bad or underperforming code, because they used convolutions without knowing what an integral was, or did not know that a convolution was separable if the rank of its matrix was one, or that a composition of linear maps was linear, that the slope of a curve was related to the derivative of its function, that interpolating using 3*t^3-2*t^2 instead of t ensured slope continuity. I have seen them sum 50 values of sin(x) to approximate an area instead of using an integral. If x was supposed to grow to A*x in 10 seconds, they would set it at A/10*x after 1 second instead of exp(log(A)/10))*x. This is only what I can think of right now, but I could probably come up with dozens more of such examples.
Is actually a term still being defined and discovered. What makes us immersed? Why do some people get easily immersed while others won't even flinch when playing Dead Space 2 in a dark room with loud sounds? 
I am surprised that no one mentioned maths yet. I cannot for the life of me understand how you can be a good game developer without being good at maths.
Common sense -  Yes, having something completely which implements perfectly realistic sound waves travelling through the air is nice and all that, but the user is going to struggle to see the difference. Oh, and run the game on a PC with less than a dozen GHz worth of processor power.
Having a firm grasp of world mythology and religious iconography is always good for game design. HCI and other bits of human factors psych are important just about everywhere. Being able to think like an engineer and deconstruct complex systems into smaller units is useful not just as a programmer, but also when trying to see how other games are built. Game developers tend to be a very diverse bunch, so almost any field of expertise can be used to make better games.
History - So many successful games are based off of either true history, or adapations of it. Some of the Call of Duty series, and the Assassin's Creed series come to mind.