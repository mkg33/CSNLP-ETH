However, to answer your question more generally, it is almost always quicker to render the same model twice than to render 2 separate models. Obviously this is mitigated if you are only rendering a subset of those in a given time frame because the other ones effectively do not exist at that stage. But rendering 25 different models will almost always be slower than rendering 3 or 4 each duplicated 6 or 7 times over.
You don't need to generate unique models in each case. Instead you can render a character as several models, one for each of the interchangeable parts you mention, with the tweakable aspects being applied to animation bones, or to shaders, etc.
But speed is relative - when does 'slower' become 'too slow'? If your characters are quite simple (ie. low number of polygons and small textures), then 50 on-screen at once is not a big deal. On the other hand, if they are complex, then even just 25 at once may be too much on some cards. It would be a shame to cancel a good feature because of performance concerns, so you need to know which end of the scale you would be at.
Luckily this is something you can test quite easily, by generating sample geometry of the sort of complexity you expect to use (which can be any simple object tessellated appropriately), and performing some test rendering to observe the real-world performance.
Interestingly, although you mention rendering as a bottleneck, potentially a worse problem is the networking aspect. Most MMOs store the majority of renderable assets on the client side and deploy them as part of the original install or the patching procedure. In your case, this would be impractical due to the number of permutations, so you'd have to stream them down during play. But this in turn means you can't easily render a character until all this data is on the client, which may be a problem when entering a busy area quickly (eg. teleporting or spawning in town). Again, this problem is reduced a bit if you just send a list of pre-existing model-parts that a character uses character instead of having to send a full model for each one.