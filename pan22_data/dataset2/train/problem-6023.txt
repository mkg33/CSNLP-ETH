My solution is to provide the user who only may be tunneling, without an interactive shell, to set that shell in /etc/passwd to /usr/bin/tunnel_shell.
would prevent them from getting a shell prompt, and give them a time-out of 60 seconds - if there's no connection active for 60 seconds then it will exit and thereby disconnect them completely (increase the number according to requirements). 
Is it possible to configure ssh (on linux) to allow access for tunneling only? Ie user can setup tunnels but cannot get a shell/access files?
So, basically, you the controls would be in front of the user's ssh public key separated by a space.  In the example, connections using the specific public key will be allowed to do SSH port forwarding only to 192.168.1.10's MySQL server and 10.0.0.16's web server, and will not be assigned a shell (no-pty).  You're specifically asking about the "no-pty" option, but the others may also be useful if the user is only supposed to tunnel to specific servers.
Note that the user's experience may look a little odd: when they ssh in, it will look like the session is hanging (as they are not getting a pty).  That's OK.  If the user has specified port forwarding with, for example, "-L3306:192.168.1.10:3306", the port forwarding will still be in effect.
This way he can stay logged in as long as he wants, with tunnels active, but not run any commands. Ctrl-c closes the connection.