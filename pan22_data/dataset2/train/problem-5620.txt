In LibGDX you can use the setCursorCatched function. It will hide your mouse and fix it in the middle of your window. X and Y coordinates of your mouse are still reported as if the mouse was not caught:
I highly recommend you to use a game library such as LibGDX or at least a native adaptation like LWJGL (which is used by LibGDX) if you want to create a game in Java. Problems like this are easy solved with these libraries.
This will place the mouse in the middle of the window and also gives the user the mouse control back if the window gets unfocused. But as you mention also, the Robot class needs on some system special permissions to change the mouse position. 
Fixing the mouse inside the game window is a common concept to prevent the mouse leaving the screen. A lot of games place it in the middle of the game window, hide it and add an image of a new mouse which shows the in game mouse position while the desktop mouse is kept in the middle. You can see this effect when you tab out of a game and your desktop mouse is visible again. It is mostly placed in the middle of the window instead of the game mouse location. 
But I would recommend you to fix the position of the mouse inside your window. Otherwise, you will run into another problem, like the mouse will reach the screen border. 
If you want to force the mouse to a position without any additional native libraries, you can use, as you mention it, the Robot class: