I know this thread is old, but this is still a relevant problem. In my case, I'm using git over CIFS to work with a remote working tree on a virtual Linux instance. The git repository actually exists on my host system but I have the checkout on the remote system. This is so I can develop my Linux specific application on macOS using a VM but keep the git repository in the host.
We have a ubuntu server machine hosting our working files over a SMB shared folder to each of our Mac workstations. We use Git over SMB with SourceTree to build our websites (convenient to share the same database and files), since we upgraded to OS X El Capitan the file permissions are not the same and Git marks every files changed as their perms switched from 0664 to 0775 (or 0644 to 0755).
And last snippet, here is my SMB share configuration where I explicitly tell to use 0644 for files and 0755 for directories.
For those who wonder why we use Git over SMB, itâ€™s because we work with many people at the same time building websites. Having a copy on each on our workstations would be a pain to sync databases and documents files.
Anyway, I was experiencing the same issue as the OP. Git detected changes in the file mode, wanting to commit the files with execute bits since the share driver created regular files with execute permissions by default. To work around this, I figured out how to mount the share manually using the mount_smbfs command. The key options are -f and -d for file mode and directory mode respectively.
Since we upgraded to OSX El Capitan we experienced some strange file permissions errors with our SMB server.