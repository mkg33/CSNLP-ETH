Yes, but you have to lie to NTP.  Essentially, you pick one server to be the time server, and then configure NTP on that host to be authoritative even though it has no grounds to be so (ie, no direct-access to a stratum zero server, or network access to a lower-stratum server).  Then and only then you configure the others to look to the "authoritative" server, and they'll sync to it.  Otherwise no host will consider itself authoritative, and will not allow anyone else to sync to it, which is what you're seeing.
I don't know anything about Linux/Unix but I can tell you that the servers should not be syncing between themselves as in serverA uses serverB as it's time server and serverB uses serverA as it's time server, as that's likely to cause problems. Pick one server to be the authoritative time server and configure the other server to sync with it.
Time is relative. The servers and clients don't know and don't care whether or not they are using the correct time as determined by some external time clock. In a closed loop system, the time is whatever you configure it to be. The servers and clients will consider that to be the correct time.
If you want a precise time source without any internet connexion, you can use a serial GPS, plugged into a machine that will act as NTP server.
My question is , is there any fundamental problem with this setup. Will the NTP work in such isloated network that has no direct or indirect connection with reliable internet time source ?
of linux and another opensolaris machine as server and these server machines are syncing time with themselves (local clock) only. The server machines in this case have NTP running on them as well. Within a few minutes of starting the ntp daemon ,client starts syncing time with itself only and remains in that situation after that.All servers are discarded and no time syncing is done with them.