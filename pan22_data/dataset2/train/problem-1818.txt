You may be able to do something with stat. The "device" field will be different across different filesystems. So, assuming you want to see if /mnt/foo is mounted, you'd compare the output of stat -c%d /mnt/ to stat -c%d /mnt/foo/. If the device is different, something is mounted there.
If you want to do it more intelligently, you might want to look at doing this in Perl or Python or C, where you can use the library functions to talk to the portmapper to get information about mounted filesystems as a data structure.  You can then intelligently perform the tasks to change the current state to the state you want.
When it comes down to it, shell programming is about plugging together small discrete tools using pipes to produce some kind of compound utility.  A utility that did what you're asking for in a "smart" way wouldn't really match the Unix philosophy.
Can you grep /etc/mtab for the device?  grep -c '/mnt/foo' /etc/mtab  if grep outputs '1' then /mnt/foo is mounted.
Just to throw another idea out there, the df command can tell you the mounted filesystem of a directory.  If you throw in the -l option, you get a pretty easy test to see if a directory is on a local filesystem or not.
If possible, setting up automount ( autofs ) would be the standard way to do this.  It might already be in your distribution (comes with CentOS / Redhat default install ).  Here is a tutorial. 