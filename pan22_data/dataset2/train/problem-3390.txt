I accept it is a problem not having centralised control, especially when you need to perform a change on more than a small number of servers, but you can use something like mssh or dsh from your Linux Desktop machine to run the same commands on each server.
Also, sudo -l will give you a real root shell.  That's good for interactive management, but not as much for automated stuff.
Surely you are permitted to set up keys for your own regular user account. Also you can set up aliases for groups of servers in mssh. 
The no tty present. means that your sudoers file contains Defaults    requiretty.  If you comment that out it will go away.
Those policies sound like something from a large company or government. If this is the case, just have someone pay a few million bucks for a management solution like IBM/Tivoli.
I would look into mcollective for your management, but it sounds like you can't install anything.  In that case, get ready to type your password a lot :(  (or, bad idea as it is, script something up that puts your password into the right place with expect...)
Since you mentioned you cannot use public key authentication and will have to put in a password just to get past the initial login prompt -- Your best bet is likely to be a combination of Python (or Perl) and Expect:
Also -- the no tty present is because you haven't opened a tty in a script, as they generally run noninteractively.
That should suffice as a starting point -- there are plenty of tutorials (and SO questions) on this topic. You could then 'su -' or sudo and provide the same user password, for example. It gives you a framework to do your own dynamic configuration as well.