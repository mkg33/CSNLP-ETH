It appears that I am able to successfully do a pvcreate on top of a raw block device, without ever taking the step of creating a partition table. I am then able to create a volume group, logical volume, and finally a filesystem, mount it, and test via dd. 
Here's an example of using parted to create a GPT with 1 partition that is the whole drive and set the partition flag to be lvm.  The mkpart requires that you specify a file system but it doesn't create the file system.  Seems to be a long standing bug in parted.  Also the start offset of 1M is to ensure that you get proper alignment.
One downside is that it is not be possible to hot-add space to a PV inside a partition table. This is not an issue if you use the entire block device for the PV.
While you can just create a pv out of raw block device I normally try to avoid it as it can cause confusion as to what the block device is being used for.  It may also break some of the auto discover routines that LVM can use if it's missing it's configuration files.
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/logical_volume_manager_administration/physvol_admin
They said there is no need to have the partition table, they even suggest us to destroy it if we use the whole disk for VG (Volume Group) unless we only intend to include only parts of it (partition).
Yet the drive is currently in use and I can read and write to it. Is that the expected output when doing LVM on top of a raw block device without a partition table? Any thoughts?
Even if LVM itself doesn't care about having a real partition, one reason to create it anyway is to inform partitioning programs that there's "something there." A nightmare scenario is a new sysadmin diagnosing a boot problem on a server, firing up a partitioning program, seeing unpartitioned disks, and concluding that the drive is corrupt.