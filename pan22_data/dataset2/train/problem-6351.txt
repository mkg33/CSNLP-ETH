Welp, TIL Juniper's Junos is based on FreeBSD and that's what goes on their routing equipment.  That being said, you would probably save money and a little headache going with a juniper appliance,  because if the hardware fails you can get support for it. However,  there are companies that make appliances designed to run PFSense,  all you would need to know is how much traffic roughly you plan on passing through it. 
They are dual CPU 6 core Xeon with Intel NIC's.  The Intel NIC's that we chose back then were important, but I forgot the exact reason why. I know it had something to do with the drivers and the way interrupts were being distributed among cores.
Many times you can get two decent boxes for failover, plus a third for testing for less than you'd have to pay for a commercial alternative.
I'm going to offer a counter-point to Server Horror and expand on what migabi said. For small to medium range setups, I really like OpenBSD with the constantly evolving pf, CARP and friends. As far as I know, FreeBSD (and hence pfSense) are lagging behind in getting the latests pf and CARP updates over.
I have some running master/slave using 10 Gbit throttled to 2Gbit via softare going for 1 1/2 years now.
And lastly I'm just really uncomfortable paying a sum of money for support when it doesn't obligate them to document properly, cover losses or fix bugs in their product. I'm feeling that particular pain right now, and pain without source code just isn't my thing.
Software issues are debatable, PFSense for example has a wide usage even in enterprise environments, so their are forums chocked full of information,  and you can always drop by Serverfault.com for PFSense help.
Granted, you have to be willing to do your own testing and find decent systems with decent network cards and be aware of the limitations of pf, but in my experience, all setups have their limitations. Enabling one particular inspection feature in a hardware appliance can some times cut throughput performance in half, or worse. And would you really deploy a commercial solution in production without considerable testing to verify the manufacturer's claims?
We also had the requirement to route a different interface type.  Something you couldn't buy in a hardware firewall, so this was a very cost effective solution.