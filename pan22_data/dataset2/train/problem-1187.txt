The rule above simply looks for the string br (surrounded by word boundaries and not immediately followed by ;q=0) in the Accept-Encoding header and re-writes it to be just plain br, giving IIS only one choice.
The HTTP RFC gives no specific guidance on how to choose from many Accept-Encoding values with the same priority, so it would be acceptable to return br content to those clients.  However, IIS will choose the first one (left to right) that matches one of its configured compression schemes. This means it won't choose br if either gzip or deflate compression is also enabled.
If you wish to leave both (or all three) schemes enabled, you must, therefore, take some action to force IIS to choose br when acceptable.  To accomplish this, you can modify the Accept-Encoding header value on requests as they enter your IIS pipeline.  The IIS URL Rewrite Module makes it easy.
It appears the Brotli module you referenced requires a paid license, so I haven't tried it, but I encountered a similar issue with my own open source Brotli plugin for IIS.
https://github.com/saucecontrol/BrotliIIS might help you with the problem                                    
Current browsers advertise Brotli support after gzip and deflate in the Accept-Encoding header.  Typical headers will look like: Accept-Encoding: gzip, deflate, br.
Note that the default URL Rewrite configuration does not allow modification of the HTTP_ACCEPT_ENCODING variable.  The allowedServerVariables element overrides that restriction and must be configured in applicationHost.config.  The rewrite rule can then be defined at any level in the config hierarchy, although it probably makes sense to make it global.
The obvious solution is to disable gzip and deflate on your server so that br is the only match.  However, because roughly 20-25% of Internet users (as of early 2018) are still using older web browsers that don't support Brotli, you probably want to keep gzip enabled on your server to support compression for those clients, at least for a while longer.
The Accept-Encoding header is represented by the HTTP_ACCEPT_ENCODING Server Variable in the IIS pipeline, and you can modify it before it reaches the Compression Module(s).  Here is a sample configuration: