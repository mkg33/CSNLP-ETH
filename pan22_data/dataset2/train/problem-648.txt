A Bonjour Sleep Proxy provides a possible workaround for this (although as I said above, it'll be slow etc). If you have a device on your local network that provides the sleep proxy service, the Mac can register its Bonjour-advertized services with the proxy as it goes to sleep. While it's asleep, the proxy advertises your services over Bonjour, and responds to ARPs on your computer's behalf. When a request (well, the SYN packet actually) comes in for one of your services, the proxy sends a magic packet to wake your computer, then hands off the incoming connection to your computer.
Now about "Wake for Network Access": it doesn't wake for just any old network access, it wakes when it receives a specially-formatted "magic packet" telling it to wake up. Incoming HTTP requests are not in this format, so they won't do the job. (Note: actually, it's the TCP SYN packet that initiates the HTTP session that would have to be in this format... except that even that wouldn't work because your computer doesn't respond to ARP in its sleep, so the router wouldn't know how to send it the SYN...)
I haven't tested this, but my understanding is that to get this to work you'd need a device that provides the Bonjour sleep proxy service (although apparently some Macs have it built into the ethernet interface), then register a service on port 80 with Bonjour:
The correct solution to this problem (as @Zoredache pointed out) is to set the server to never sleep. There may be a way to kluge it to wake on demand, but it'll be slow, overcomplicated,  and potentially unreliable.
Note that the "&" runs this in the background; the dns-sd program must be left running to keep the registration alive. Another possibility would be to edit the launchd .plist file for apache to have that create the Bonjour registration. But I'm not going to worry about it because it's not the right solution anyway; the right solution is not letting the server sleep in the first place.