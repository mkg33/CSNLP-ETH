That said, a proper DMZ would prevent an attacker from gaining any leverage anyway, however, you need to weigh the potential of your IDS or routing control software of choice to be compromised with the usefulness of running WS.
Despite the foregoing, while Wireshark could potentially be used to watch the traffic in the DMZ the reality is that in order to use it the machine must already be compsomised, which means the perpetrator could just as easily install it themselves if they wanted to. By having it already installed you might at worst be saving them a few seconds of time.
Many of the vulnerabilities cited occur due to flaws in packet dissectors, which are only used during the interactive rendering of traces.  This interactive access does not require the same elevated privileges required for packet capture.  
Since what you seem to need this for is analyzing local packet capture from the web server, why not separate the functions?  Run packet capture on one host, and do the analysis (keeping the dissectors up to date, etc) from another, more restricted, non-production segment after retrieving the trace files.
I'm not completely in agreement with the DMZ descriptions described above.  The security professionals who operate the DMZ probably have "paranoid" in their job descriptions and the DMZ is a "production" space, so see it from their point.
First up, I'm of the opinion that anything extraneous installed on any machine in the DMZ is a potential security risk. I work on the principle that anything in the DMZ is a target and has been placed there to try and minimise risk through isolation. Such machine should be treated as if it can be expected to be compromised.
Wireshark has suffered from its fair share of remote compromise vulnerabilities [CVE-2010-1455, CVE-2010-0304, CVE-2009-4377 + 8, CVE-2009-4376] (CVE lists hundreds). As anyone whose gone to Defcon or the Blackhat security conventions knows, Running any sort of packet sniffing software is wildly dangerous if you're in a secure environment. I'd guess that practically every Security Metrics book published in the last few years would strongly recommend against it. 
Wireshark has had plenty of vulnerabilities in the past, and will likely continue to have more discovered in the future. They usually lie in the protocol analyzers. If an attacker sends specially crafted packets, wireshark could have a buffer overflow while analyzing those packets and execute arbitrary code. (So RDP is irrelevant). Try using a simpler sniffer like tcpdump and just analyze the pcap files elsewhere. (Why do you really need Wireshark's GUI anyway if you're not RDPing into the box?) Another thing to keep in mind is that depending on what this webserver does, sniffing the traffic may reveal info you're not supposed to have.