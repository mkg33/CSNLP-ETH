Anything placed prior to the first 'Host' line is considered a global option and is applied to all the entries you define.  Handy to specify connection timeouts, X11 forwarding and others.
Within this, you can describe hosts and options to be used for particular hosts (or global options).
.ssh/config must have permissions of 0600 (rw user, none for all others), otherwise ssh will complain and ignore the file.
This works fine when I need to open connections to them, but not when I need to scp files to the same host.
If you specify multiple names in the Host line, you can call it by any of those names, all being equal.
I have a CentOS host in my local network that I daily use to open SSH connections to many (over 40) other hosts in both Internet and the local network. I have set up RSA keypairs to skip the interactive authentication and some bash scripts like this:
If I understand your question, a shell function will suffice: assuming you want to hardcode the user, host and path:
I understand that bash aliases can only be used as the first word of the command, but is there some other way to achieve this? If not in bash, maybe another shell?
If you install the bash-completion package, then that will add autocompletion of ssh hostnames and aliases based on information that can be found in various places such as .ssh/config, known hosts, etc.
indentation and capitalization is irrelevant, but I like to break it up like this for clarity.  place as many entries as you need in your .ssh/config
from this point on, if you use 'MYWEBSITE' as the hostname, it'll automatically supply the real hostname, username, port, options, whatever you specify. (I specify the port number by habit)
Is it possible to create something equivalent to an alias to replace the username@host part like this?