Where multi-core cpu's are immensely helpful is where you are running an application that is written to take advantage of them; that is, specifically, multi-threaded applications.
What multi-core cpu's give you depend on what you are running... it's a matter of will you be running any software on the server that takes advantage of the multiple cores?
Many (perhaps most) legacy apps were written for a single cpu model, so for these it makes little or no difference.
Another potential area where multi-core cpu's could be immensely advantageous is where you are running virtual machines.  I know that Vmware lets you assign one or more cores to each virtual machine; in these cases, the performance can increase linearly, depending on the application.   If the app is i/o bound, multiple cores will still help, but not to the same extent as when it is cpu bound.
What you really get out of it is highly dependent of what you want to do with this server. Some workloads don't benefit at all from multicore systems, others really need them to perform acceptable. All in all, a general file/web/mail server will nearly always benefit from more CPUs, but to a varying degree. 
But an app written as a multi-threaded app will be able to take full advantage of those extra cores.  As an example, we run an app that used to be single-threaded.  It was modified by our programmers to be multi-threaded, and it now runs almost 20x faster on our dual xeon, 24 core dell (each xeon has six physical core, and each is "hyper-threaded", making for 12 logical cores.
You can consider a 6 core CPU as six independent CPUs, which will have up to 6 times the computing power than a single CPU. 
I was getting specs for dell server and one cpu is an Intel Xeon with 6 cores, another 4 cores.  What am I getting with this?  Do I need six cores?  What does that give me?  I don't know what mult-core cpus give me but that's about all I can get.