You have base stats for your other properties, but it would be better to define these as class constants instead that you refer to in the function.
I tried to group sensibly, as this suggestion could easily result in an unreadable mess if you're not careful.
Your __init__ is really quite long and you're setting a lot of values to zero, so you can use Python's multiple assignment. This is perfectly valid syntax:
This has the added benefit of making it clearer that the xp line is a different format to the others.
In drinking_class you could make easier logic by using the fact that cases are mutually exclusive. You don't need to check if beers > 25 since if it was you'd have already returned with a string:
Lastly in stats, you repeatedly reuse the same string literal. You could just declare it up front to make it clear you're reusing it and shorten lines at the same time:
Technically accessing a class attribute could be done with either self or the class name, but using the classname makes it explicit that the individual instances of user have no bearing on MIN_HEALTH.
Note that if you take mgillett's suggestion and store lists then you wouldn't want to use this method for list or set attributes, as:
It means that both a and b are instantiated with the same value of 1. You could use this to set a lot of your attributes in one go. Also I find _attr to be a bit of a pointless suffix since it's clear from context these are attributes, and player1.dex_attr actually makes less sense than player1.dex. So I'd remove them: