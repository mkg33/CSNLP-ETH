The main code is mostly unchanged. I would put everything into an infinite while True loop to avoid hitting the stack limit at some point (a problem recursive code has in Python). I also added a if __name__ == "__main__": guard to allow importing from this script without running the code. The actual file path is only needed at this point, everything else has it as a parameter.
If you wanted to take this further, I would probably make the user database a class that automatically saves to disk on modifications and reads when needed. Something like this.
When working with files you should always use the with keyword to ensure the file is properly closed (even in the case of exceptions).
This could be improved further by using the getpass module. This way the password is not visible on screen while it is being typed. For actual security you would want to save the password not in plaintext, but this is left as an exercise.
You are doing a lot of unnecessary stuff. To get rid of this I would change your file format to more accurately describe the data. You have usernames and each username has a password and an email. That sounds like a dictionary to me. An easy way to save a dictionary to a file is to do so in JSON format. There is a json module in the standard-library, which is very easy to use.
Your app function is just the same as the print function. So there is no need for it to exist at the moment.
The actual login code becomes a lot easier with this as well, because you don't need to see if the username string is contained in the file content (and the same for the password and then match the positions...), you just have a dictionary: