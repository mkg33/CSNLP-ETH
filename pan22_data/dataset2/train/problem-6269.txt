I'm building the very earliest stages of piece movement in a digital board game I'm planning to make.
If the easiest path is to go AROUND a hazard to get to a tile beside the destination at max moves it will attempt that path for the tile beside it that will drive it into exceeding the move limit.
In most cases the limiter and the path finding is perfectly functional however I've found one particular instance where it completely fails to find the correct path:
I've used A* for the very first time for this and it does the job MOSTLY right. If the path can't be reached without walking through the hazards it will pick the path with the least hazards and mark it's way through which is exactly what I want. However my 'max movement' limiter is very rudimentary... I've taken two approaches:
What I suspect is the problem is that as A* is running through it's list of options it's pushing it's previous steps into the "closed list" thus solidifying it's original assumptions about the path. What happens then is that it takes 4 steps around a square, solidifying the path as it goes, only to hit the max moves before it hits its destination. With no way to re-assess the route it ends up just ending... either by failing to reach the destination via the one type of limiter or by just stepping past the limit anyways.
The other was to make the tile resistance value skyrocket to 500 when the steps to the tile exceeds the "move distance".
The first just ends up not being able to find the route occasionally. The second will just make the path even if it is too long simply because it comes to the situation where ALL the possible tiles are 500 + regular resistances, negating the purpose of the huge resistance spike.
One was to make it consider tiles that are farther than "move distance" as unpassable and not consider them when continuing the path.
Basically the players roll to move and need to traverse the arena based on their maximum move distance. However there are floor hazards that damage the player when they are walked on. As the game elapses the arena gets riddled more and more with the hazards until one needs to make risky choices to step over them and take damage.
I've exhausted myself trying to wrap my mind around it, I've only really figured out poor fixes that only sometimes fix the issue and otherwise I just can't find any good keywords online to figure out what I should look into, or how I should approach fixing this.
Now the moment the path is going to throw the result beyond the maximum path limit, it gets extra resistance causing that possible path choice to be less desirable.
In the real life version it ultimately just means that you run the piece in the path that you want knowing the amount of steps you're allowed to take. Digitally it's much harder.