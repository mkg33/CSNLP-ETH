The last 48 hours or so I spend on trying to determine the cause for sporadic crashes of my MySQL (Aurora) DB. Turns out they were attributed  to my mixing of database, table, column and stored procedure collation/charsets. My bad, or is it?
But, changing anything under the hood is all too likely to cause grief.  MySQL learned that lesson when "fixing" the handling of ÃŸ in utf8_general_ci collation many years ago.  It broke lots of users' tables.  So, they came out with the kludge utf8_general_mysql500_ci.
In my case, to resolve mysqld crashes I had to ensure all of below return consistent charset/collation values:
Aurora aside, what were the practical reasons for all the ways to configure charset/collation in MySQL? Why couldn't utf8 just become utf8mb4 as part of a major release? Why changing charset or collation of a database/table doesn't actually change the database or table, only future additions to the schema? The last one provides for an opportunity to have a mix of columns charset/collations in your tables, for instance. What sane person would want to have different charsets/collations within the same DB? And if there is a rationale for all this madness, why not make it the exception rather than the norm when configuring mysqld?
The grief over the 767-byte limit on a column in an index would break blindly changing utf8 to utf8mb4.
As for why things are crashing in Aurora, I don't see enough info to help with this question.  And, since I have not heard of anything similar in MySQL or MariaDB, I suspect is may be an Aurora bug.  (Aurora is MySQL plus low level improvements; I have not heard of charset issues, but who knows?)
I predict that utf8 will live on, but only for compatibility for those upgrading.  Meanwhile, a really UTF-8-compliant utf8mb4 will be the default.  And there will be a succession of collations such as utf8mb4_unicode_ci, utf8mb4_unicode_520_ci, utf8mb4_0900_ai_ci, and more will keep up with the Unicode standard (4.0, 5.20, 9.0), which keeps changing.
The charset and collation for a database is only the default for subsequently created tables.  Ditto for table:column.
It is even a performance issue if you let postal_code with utf8mb4 unnecessarily explode by a factor of 4 during certain operations.