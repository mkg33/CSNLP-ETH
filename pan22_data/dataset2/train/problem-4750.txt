   The jvm.dll will be in the follwing path: "C:\Program Files (x86)\Java\jdk1.7.0_75\jre\bin\client"
It is possible to install any number of versions of 32-bit JDKs and 64-bit JDKs in a 64-bit Windows OS. Also it is possible to install 32-bit Eclipse and 64-bit Eclipse in the same computer as well. But to run one of those platform related Eclipse (in OPs case 64-bit Eclipse) version, the machine should have matching “Environment Variables” configured for JDK. This can be done (should be done) without modifying 
Here OP has only got 32-bit JDK but trying to use 64-bit Eclipse. So to fix the issue OP need to install 64-bit JDK.  And change JAVA_HOME & PATH “Environment Variables” to match that installation location. 
To elaborate on Steffen Opel's answer the mismatch occurs between the JVM specified in eclipse.ini file and the JVM encountered and launched as a result of the entries on your Windows path environment variable.  So to fix the issue, ensure they both refer to the same JVM.
check the Java location being referred by eclipse and copy the content C:\Program Files\Java\jre7 to eclipse jre location.
To run java without giving full path it is required to add file location for java.exe to PATH environment variable. And also for some other third party utilities, JAVA_HOME environment variable is required as well.
    b) Make sure this entry sits higher (or earlier) than any other java paths within your @path entry.
Although this is an old question, I thought to add some more relevant info to the Accepted answer given by @Steffen Opel.
Normally java developers always need to have JDK installed (JRE is included in JDK). And PATH is set to “bin” folder under JDK installation folder (in OPs case C:\Program Files\Java\jdk1.6.0_40\bin) while JAVA_HOME is set to JDK installation folder (in OPs case C:\Program Files\Java\jdk1.6.0_40).