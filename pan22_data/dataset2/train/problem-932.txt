Imagine 2 tiny images and one large one. The two tiny ones will be displayed without waiting for the large one to finish, therefor delivering content quicker.
I then used wireshark to record the TCP packets, I expected there to be only one connection/stream, however there were 3. The first one requested the HTML file, got the response, then requested img1.png, and got it's response. The other 2 connections got img2 and img3 each. The other 2 connections were made before the first had finished.
Modern browsers use multi-threading, and as such use multiple threads to get and process various elements/resources from the page.
This is done so that resources can be downloaded and processed in parallel, making it (possibly/probably) faster overall. 
to get and display the three images, it's three Download -> Process -> Display's happening at once.  
I thought it was not necessary with HTTP 1.1 to have multiple TCP connections? Why doesn't the browser just keep using the first connection, surely it's less expensive?