Software Engineering for Game Developers is an interesting approach to combining traditional software engineering to the typically chaotic process of game development. I have not gotten through the entire book yet, but the parts I have were pretty enlightening in respect to how to approach the chaotic nature of creative process with a orderly and structured process to approach the best of both worlds.
One more book to add to the list: http://www.amazon.com/Software-Engineering-Game-Developers/dp/1592001556/ref=sr_1_1?s=books&ie=UTF8&qid=1281546762&sr=1-1
This question seems like it carries some kind of mistrust of academia (the whole "those who can, do; those who can't, teach" thing), but that ignores that especially these days, there's an awful lot of crossover between academia and industry. I worked in games for ten years before crossing over into teaching, and I still do industry contract work when I can; does that make me part of the game developer community, or the academic community? I could name a dozen others off the top of my head in the exact same situation. So I'm not sure that the distinction of "academic or industry" is even meaningful anymore.
You might also search around for textbook lists. I'm not sure how many schools publicize them; mine doesn't. But for example, my game design class last Fall required the book Rules of Play: Game Design Fundamentals. If you can figure out what books are being required as textbooks by professors, it's a good bet they are great resources. (though I personally didn't like Rules of Play all too much, it's way too much theory and nothing concrete)
A professor at my school, Dr. R. Michael Young, was editor-in-chief of the Journal of Game Development. It had 9 issues before it apparently disappeared. I don't know the story, though I should ask him. The main website is down but here's a wayback machine result from June 2008 if you're interested. You should look around for the issues; they are probably pretty rare since it was discontinued.
Of course in graphics there's a lot of research that makes it into games or is developed for games, so always keep up on what's going on in SigGraph circles.
You may also find, scholars tend to be "lazy" and just use existing solutions. So whereas indie developers love to code their own engines, libraries, etc., the game development researchers and masters students at my school use the Unreal engine (and now the UDK) or the Unity engine. Being an aspiring game programmer, I find it to be extremely boring, but they are mainly interested in design and AI studies.
I like to keep up with the industry online. I highly recommend becoming a member of IGDA and keeping up with your local chapter. There's also Gamasutra, they have a lot of game industry news and articles, and of course Gamedev.net.
For game designers, "MDA Framework" (Hunicke, LeBlanc, Zubek) is one of the most useful papers I've seen come out of academia. For books, "Art of Game Design: A Book of Lenses" (Schell) and "Game Design Workshop" (Fullerton) are good picks, both written by professors. (In fact, most game design books worth reading were written by professors, as they tend to have more time for book writing than your average working game developer. Most game design books that aren't worth reading were also written by professors, though.)