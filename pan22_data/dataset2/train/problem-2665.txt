Regarding the edit asking why they have to be random:  Let's say that torrents were changed to only download the first block that the downloader doesn't already have, thus guaranteeing a contiguous transfer.
The fact that BitTorrent transfers the file in a seemingly random order has no direct affect on its speed.
Instead, with the blocks being transferred in a random order as is actually the case, each of these 10 people has a different set of blocks, so they can trade among themselves in order to complete their downloads without needing me to be around.
These people are then screwed, because they all have the first half of the file, while only I have the second half.  Until I make it available again, they can't complete the download.
In regards to your edit, the pieces are not random! They are prioritized based on rarity: a rare piece needs to become less rare as fast as possible so it is not lost if the source that has it suddenly leaves. It has to do with availability, not speed.
Torrents aren't always faster, but when they are, one reason is network entropy. A connection of any duration (the download of a large file) may degrade over time, as random, uncontrollable factors affect the transmission of packets, such as router overloading and other problems between you and the server. More errors mean more retransmissions of packets, and this situation tends to worsen over time. Torrents make many smaller connections, across many routing pathways, a strategy that can, under the right circumstances reduce errors and lost or damaged packets, and seems to be faster, especially as the number of seeds and peers increase. 
The real difference in practice however, is you are downloading from many sources that can potentially add up to be faster than what a website could give you. Many web servers are under heavy loads or are otherwise speed-limited so you don't suck them dry.
A single contiguous download may (or may not, depending on conditions) be better for you, but downloading in random order is better for the network as a whole.
Say you send two people to the grocery store to pick up a list of items. You give them each the exact same list. However, one of them must pick up the items in the exact order they appear on the list. The other may pick up the items in any order they please. Which do you think will finish first?
If chunks are randomly distributed, the number of hosts you can download from will be higher, therefore you'll download the file faster.  
Even better, though, because each of them has a different set of blocks, each of them can download from all of the others to fill in the gaps in their copy.  Your edit alluded to the idea of starting from a random point in the file and downloading contiguously from that point, but that would increase the amount of overlap from one downloader's copy to the next (if Alice starts at the beginning of the file and Bob starts 10% into it, then there's 40% of the file that they both have and only 10% unique to each of them that they can trade without me reconnecting to make the rest available).  Downloading in a random order maximizes the uniqueness of each downloader's set of blocks held, thus maximizing the ability of downloaders to start trading among themselves and maximizing the odds of it being possible for them to assemble a complete copy if no seeds are available.
It's an availability issue. If you have to download contiguously, then you're dependent on people hosting more of the file than you.  Every person with less of the file than you, will be unable to send you any data. 