Finally, Poste1 updates his MAC table with the new values of poste 4. This entry will stay in this table during a period determinated by the Operating System.
C send a packet to A (assuming C already has A's IP/MAC in its arp table) A arp table did not have C's entry due to some reason A updated its arp table immediately of C's IP/MAC
All of this assumes they are on the same subnet. Otherwise, the gateway comes into picture. See Ron's answer for that.
Firstly,in this example, Poste1 want to send a packet to poste4, but it has not the @MAC of poste 4, so it sends a broadcast ARP. In this request, poste 1 will ask "what is the MAC address with 192.168.0.44 IP address ?"
There may be implementations that do what you what you describe, but it is not addressed by the standard, and it would seem to waste ARP cache memory.
The RFC doesn't address your second scenario.  The reason for this is that Host C sending to Host A may not be on the same network as Host A.  Host A having an ARP cache entry in that case doesn't make sense since Host A will never look for Host C in its ARP cache.  Host A will always know Host C is not on its network, so it will always look for its own gateway's entry in its ARP cache when it wants to send to Host C.