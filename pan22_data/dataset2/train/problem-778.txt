On the inverse, and as is probably closer to your scenario, when dealing with a minute amount of polygons being obscured, while it may technically be slightly faster to draw a different model that has the obscured polygons removed, the gains will be minute, and almost definitely invisible. In addition, you will have to factor in the memory increase by loading in the alternate model. (Or models, assuming you have a different one for each area that can be obscured on your character)
Generally, if you know your object will not be displayed, you should not send it to the graphics card. 
For example, if you are going to have just one character with just one gauntlet, it should be fairly easy for your modeler to create 2 versions of the hand. The benefit here is that you will avoid potential visual artifacts (they can happen) and it MAY be a simpler solution (especially in FPS situations where you only see the hands)
For a low-polygon textured model, generally speaking, having a few more triangles around its hand should not be an issue (performance wise). Of course it all depends of the sizes of your models but I'm guessing we are talking about sensible volumes here. If you have permanently attached the gauntlet to the hand and you switch its visibility on/off, then, when invisible, every engine that respects itself should NOT send its triangles to the GPU (or do anything with it anyway). If visible, then BOTH hand and gauntlet will be sent to the GPU (unless the gauntlet is big enough to cover the entire hand AND the hand mesh is a separate mesh from the rest of the model AND the engine supports such kind of culling). 
Specifically, in your case, it's unlikely that culling the few polygons will do much for you, but it's always wise to do an A-B test to determine if that's true.
That said, you should consider some other things apart the performance. Those are simplicity of implementation and expandability of the solution.
For a few polygons, it's ok to send them (as Krom Stern suggests), but in my experience, if you start to do some few polygons here, and few polygons there, you can end up sending uselessly many polygons to the GPU, which will have to take the time to realize it does not need to work on it.
So, yes, it depends of the situation, but for most scenarios I can thing of, performance should not be an issue.
If your case is that you may have many different characters that may wear many different types of gauntlet, you may need to attach the thing on the hand (to avoid creating endless combinations). If you already have a way to attach things to the character's hands (weapons, potions), it may be simpler to simply attach the gauntlet the same way. 
In cases where you have large swaths of polygons being obstructed by another object, it's likely going to be a good idea to cull objects that are completely obscured. Suppose you are looking at a wall made of two triangles, and behind it are several objects composed of several thousand polygons. If you draw everything, you waste valuable GPU time. But by culling the objects behind the wall you can turn a draw call of thousands of polygons into a draw call of only two polygons. In this theoretical scenario, you likely would not see a massive difference in performance as a few thousand polygons is nothing to a GPU. However, when applied to larger scenes the performance gains can be quite significant.