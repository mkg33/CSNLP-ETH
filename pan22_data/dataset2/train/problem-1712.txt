If possible, I would prefer booting in one OS and installing the other (less used one) in a virtual machine so it can be started after boot.
Quick and dirty solution, but it should work: install Windows on the first partition with the default configuration, install Linux in the second one and put its boot loader in the partition's boot sector (instead of overwriting the MBR), then from each O.S. you can change the active partition on the disk (using diskpart in Windows and fdisk in Linux) and reboot the computer, thus forcing the next boot into the other one.
That's what we do to have one set of PCs be a regular Windows lab during the day and evenings, and be a small Linux cluster overnights and on weekends.
The only idea I have is to make the grub configuration live on a FAT partition so that it can be edited by either OS. The user would manually change the default OS in menu.lst. (Maybe this would only work with grub 1, but I think that's all that's in CentOS right now.)
How about a single-port, IP-based KVM.  When you need to reboot, connect to the KVM, restart and select your boot option?  I like it because it is not complicated to set up.
I'm not convinced changing grub frequently is a very easy or secure solution, mainly remotely. Anyways, when grub updates to 2 this will not work anymore I think.
With this solution, you will not have any boot menu to select the O.S. you want to boot; but if you only need to change this setting remotely, this should not be a problem (and you can of course change the active partition from inside any O.S., you just need for it to finish booting if you're just starting the computer and want to boot the one that is currently not active).
If the system can boot from its network card, and if you have an accessible DHCP server you can remotely configure: