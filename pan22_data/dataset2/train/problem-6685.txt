Here, the surroundings are just pairs and that should be enough. Also, it makes the access of the different elements much more convenient through tuple unpacking.
i find it confusing that inside countSurrounding, 'a' stands for both a function parameter, and an index variable. Besides that, it looks good
Overall, it seems really really good to me and I like the way you use IndexError to count surrounding cells in a concise way without bothering about edge cases.
For more speed, you should look into the numpy library. It'll allow you to hold the game board in an array and do vector operations which will be much faster. 
Negative indexes will wrap around the board, whereas indexes which are too large will cause IndexError. This means that you'll have a wraparound happening on one side, not the other.
Same kind of argument applies to for a in range(0, 9): for b in range(0, 9): even though you might want to introduce enumerate.
You shouldn't use range to iterate over a structure when python provide such a convenient way to iterate over it.