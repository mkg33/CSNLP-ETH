I have done some reading about Varnish and memcached. The PHP forum has support for memcached (The vendors provide instructions for enabling it in the configuration files) so I should be able to install and use that. I figure I can bind Apache2 to the loopback/127.0.0.1 interface instead of its public facing interface and install varnish binding it to the public facing interface passing requests back to Apache on 127.0.0.1.
I will likely start separate questions about Varnish and memcached later about their technical configuration, for now I am after input on this as a design idea. This all sounds like reasonable logic to me, but is it in fact a bonkers approach? Many people use both of these caching packages with great success, is it likely they will lift demand on the hard disks in this situation? If not, what else should I be looking at?
You might still want to check out the new version of Apache (2.4), because event MPM now uses the same technique for handling requests as nginx/varninsh (while it's still slower and uses more resources than nginx/varnish it's a great improvement from apache 2.2).
I want to tune the server as much as I can to use the hard disks as little as possible. I feel they are the Achilles heal here. No funds are available for any hardware changes so I have been exploring software performance enhancing options.
It depends on what kind of website you're running and what kind of software you're using on this server. If there're many requests for static content then varnish/nginx can really help reduce the use of system resources (CPU/RAM). If it's possible to cache DB queries then memcached can help as well (assuming you want to do some coding yourself).