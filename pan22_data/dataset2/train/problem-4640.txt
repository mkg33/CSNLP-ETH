Yes, because what's really associated with a file is the numerical ID.  Text names are found via a lookup on /etc/passwd -- you can see this if you run:
This is because the UID number for openhab on the Pi is evidently the same as the number for pulse on Ubuntu.  A variant on this is when the number isn't attached to any user account (they are all listed in /etc/passwd, which IMO is sort of an unfortunate name since most of the information in it has nothing to do with passwords). In this case, the file will just have that number associated with it.  I.e., when you see this, it isn't because there's a user named 1234, it's because the file came from some other system with a user number that's not listed locally.
Because of all this, you want to make sure a system backup includes /etc/passwd so that if used to restore there is the correct local correlation between names and numbers.  Which it presumably does, and in which case yes, the ownerships will be correct.
You'll find an open("/etc/passwd" ....  I would guess this is via the C library getpwnam() call, which interestingly does not involve an actual syscall -- other than those involved in opening and reading /etc/passwd. 
The superuser (root) is always 0, but there is thus an obvious security concern in copying part of a filesystem from one system to another, if e.g., bob's UID number turns out to be larry's and larry can access the copied data.  But it is easy enough to prevent this, particularly if you are taring it all into a single file.
If that meant nothing to you, don't worry.  The point is UIDs and GIDs are fundamentally numbers, not names.  Those numbers are kept intact.