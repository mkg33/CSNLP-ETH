How can I have a pull request in Azure DevOps create a temporary environment that lives for the life of the pull request or until the build expires?  I'm looking for something similar to Heroku's Review App.  I would like to know how to do this both for .NET Core, using the pipelines, as well as original recipe .NET.  
Consider Azure Dev Spaces. Developers can spin up ephemeral environments from visual studio with randomised public URL as easy as running on localhost. Maybe this could fulfill your needs or if not, you might be able to automate spinning up Dev Spaces from the build pipeline used by your check-in gate
As a reasonably sized dev team, our pull requests are all deploying to the same dev environment in Azure.  I could add a terraform or Azure CLI script and a build step to try to create the infrastructure, then deploy out the app but that seems a bit clunky and handmade for what seems like an obvious need.  I think the process changes a bit if we can switch to .NET Core and use the added pipeline capability there.
For a dynamically created test environment, you will probably have to put together a few pieces. Like pull request triggers in a release pipeline that has an Azure ARM template that deploys the Pipelines agent. Cleaning up might need to get a bit creative, but presumably you can have a stage trigger delete the environment. 
there is no way of doing this, you might be able to get away with Azure web app deployment slots (if you use webapps). but generally speaking you need to have your infrastructure defined as code.