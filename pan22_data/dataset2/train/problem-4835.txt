Something similar can be achieved by adding a "static route" to your computers in the LAN which tells them where they can find the VPN clients.
Actual SSH connection will be running in the background and you'll need to run the command again after rebooting the server or occasionally dropping the connection.
Obviously your VPN clients also have to know about your LAN, which can be achieved by adding this to your OpenVPN server.conf:
Now if you did all the above you can just access mentioned webserver like this: http://10.8.0.6:3000
Turns out... nothing was wrong with my initial iptables rule. Although only the first one was needed!
I have a OpenVPN server running in a LAN (locally addressable at 192.168.1.12) and I'd like to forward requests to it from other devices on the LAN, over just port 3000, to one of the VPN clients. (10.8.0.6)
My end result is for 192.168.x.x devices to be able to reach a web server via typing 192.168.1.12:3000 into a browser, but actually be communicating with 10.8.0.6:3000.