You could, instead, hide your server inside your LAN and force developers to use a VPN to get access, but that just means your developers need to put their username/password (and/or cert) into a different login box. I would recommend against creating an entry point into your network whose security implications may not always be obvious, just to allow access to a single service. If you already have VPN configured and secured for other uses, then sure, it's a no-brainer, go ahead and use it. Otherwise, it may be simpler, and thus more secure, to make the service itself directly available via SSL/TLS.
Practically you need to consider who you want to give access to, and what they can handle.  Some people you might want/need to access won't be able to cope with much more than a username/password.  Others might be able to get their head around ssh and a private key, which provided you can securely get the key to them, is not bad.  TortoiseSVN client can handle ssh+svn and supports private keys with a bit of arm twisting.  That has been good enough for my purposes.
somewhat since first introduced... so be careful which VPN solution you use.  I'd go with OpenVPN or IPSEC.
The disadvantage with using a VPN is that your PC becomes effectively part of the network that it's connecting into.  That also can be an advantage.
I can speak from personal experience here as I am a developer and it was a real pain in the bum to be doing this!!!  Ideally, both options are preferred.
A VPN tunnel is also a fair suggestion, although in many places you would be happy to give external people access to just your source control, but not your whole network!
However, if you think you might offer other services other than source control then consider a VPN solution because you'll tunnel other services over it.
So if you're going to be browsing the web etc then it might make reading the news etc rather slow.  But at least you get secure access to email.  So consider how you'll be using it first...  If I were you I'd consider implementing both.
Actually, I like your suggestion. If you make your source code repository accessible ONLY via SSL/TLS, and you make certain that your developers don't use easy-to-brute-force passphrases (or better yet, use certificates), then that should be as secure as anything.
Like others, I prefer a VPN. An alternative would be an SSH tunnel, which I suppose in practical terms is a kind of VPN anyway.
But, if you're a million miles away from home and the network connection to home base isn't too speedy then every time you want to do a diff or check in or out code you might find yourself connecting and disconnecting the VPN.
If you're concerned about it being on a public-facing server but would like access from anywhere, you should consider having your developers use a client-based VPN to log into your network remotely to access an internal source control server.