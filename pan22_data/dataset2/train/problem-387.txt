For example, the Insert key does not work in this environment so I'm using I to switch to insert mode. The Esc key, which I usually use to escape insert mode, does not work either so I am using ctrl + [ to escape instead. Home and End keys do not work as I am accustomed to. Instead I'm relying on the 0 and $ shortcuts I never bothered with before to reach the beginning or end of a line.
Anyway, the arrow keys still function as usual in my situation, but it's nice to know that the minimalist keyboard shortcuts are there.
I tend to modify vim (and other tools I use) to behave like I want. This works great on my machine, but as an embedded developer, I don't always get to pick what is on the machines I support. I come across older machines that only have hjkl navigation in vi on occasion. I end up getting the control codes inserted into my file for a second or two until I re-break my habit and switch over to hjkl.
The arrow keys exhibit a problem - it was already known in vi - on slow connections, like on 1200 baud modem. The arrow translates to an ESC sequence like ESC a. Now when the time betwen ESC and a gets too long, you end up hearing a BEL (or seeing a flash) followed by append mode. This will not appear with the hjkl keys.
Yes, for many of the reasons mentioned above, vi was originally written to use hjkl, but "never" is a pretty big statement. 
Do whatever you feel comfortable with. If you use different editors it might be easier to use the arrow keys for consistency.
Running vim while shelled into my Android device which is running an ssh daemon in kbox led me to break out of my comfort zone some. Since the Anroid Terminal Emulator on the device uses volume buttons to replace the special key combos (ctrl + whatever), some keys I would normally use on the keyboard don't work in this situation.
And this is the key to the second part of your question, get out of insert mode by hitting ESC with your left and move with hjkl with your right.  Eventually you'll be able to do this without skipping a beat.     
That being said I never got anywhere with Vim until I tried some of the things mentioned here, most important being the "Get efficient: shortcut mappings" section         
The other thing to watch out for is that the arrow keys may not work as expected. I have used terminals where they didn't work. I'm not sure exactly how they are implemented in Vim but I'm pretty sure it is not uniform. My spotty memory even seems to recall one implementation where they were implemented as vim macros.
The only valid reason I can come up with to "never use arrow keys in Vim!" is so you are able to use machines that cannot handle the arrow keys. That feels like a pretty thin reason to say "never."
The name of the game with enhanced text editors seems to be "moving around in a hurry" and reducing wasted/repetitive motion.  There is some time lost when you move from the letter keys to the arrow keys (depending on keyboard dimensions) and than back to the home row.  But if you can get to the ESC key with your left hand pinky or ring finger switching modes becomes one fluid motion and over the course of an editing session there will be a speed gain.
On the other hand, it is absolutely brilliant the vi (and vim) don't need any special keys,except perhaps . You could probably hack an old IBM selectric to function as a terminal.