If your new gem from RVM is not the default (i.e., the first in that list), your RVM installation is broken. Otherwise any call to gem, even without sudo, will still use the /usr/bin/gem and subsequently fail due to insufficient permissions.
For RVM specifically, check that it is sourced after all your PATH manipulations are done in the shell's configuration file (usually .profile or .bash_profile on OS X, not sure which one RVM modifies).
So, make sure that all calls to ruby and gem are the RVM versions, and not the system ones. And never use sudo again to install something, because it'll land in your default OS X Ruby.
Here's a very important thing about running two or more versions of Ruby on OS X: If you use sudo gem, you will use your OS X default gem from /usr/bin/gem. This is not what you want.
If you use gem alone (without sudo), you should normally use newly installed gem (e.g. the one from the Ruby OS X installer, or the one from RVM, rbenv, whatever method you used to get another Ruby version running). Confirm this by running which -a gem. It should return something like: