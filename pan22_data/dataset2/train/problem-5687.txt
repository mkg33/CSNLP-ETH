Once this is complete I believe you will be able to see that your database comes out of recovery much faster.
I believe the issue is that with so many VLFs it takes SQL server a long time to assess their state and then bring the database out of recovery. If you shrink your log file to the smallest size you can, often the size of the first VLF that was created in the log file, then you can immediately intentionally grow it again and thereby have it create the right number of VLFs (something less than 16).
Again, I will mention, how frequently do you back up the database?  Typically, regular backups "manage" log size best.
It is generally not recommended to run any kind of DBCC shrinkfile on production databases.  Also log truncation behavior HAS changed from earlier versions to 2008 (thanks @Edward) - per this blog:
I have the same issue and I believe I have resolved it but I have not been able to fully test it to confirm.
I believe the issues is related to the number of VLFs you have in your log file and not its size. If you have a large logfile it is likely that it grew organically through auto growth events and that it was not an intentional planned growth. If that is the case the you might have thousands of VLFs inside log files.
I have not had a chance to test fail over of our production instances after I resolved our own VLF issues so I would be very curious if you can confirm this is the root cause of the issue. Experimentally I have seen the time it takes to come out of restoring in our staging environment dramatically reduced due to this so hopefully that is it.