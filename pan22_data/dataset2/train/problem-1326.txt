There are classes where you can ask the position of the touch/mouseclick. Not sure if you can use Mouse.GetState() on WP,  but there are also TouchPanel classes.
As mentioned previously, you may need to scale your input to screen coordinates to and back again. Using a projection is technically the correct way to do it, but ultimately what you are really doing is just scaling your screen size by some ratio.
That way, the rest of your code can deal with coordinates in virtual screen space as if you are always dealing with the same side screen. Good luck! :)
Once you  have that you can check to see if the coordinates are inside the rectangle of your "transparent object" or button.
When you have the current state (if a touch happend, where it happend), you can check if the touch location is within the buttons location and if so, raise the event.
Generally for 2D games you will work with a "virtual screen size" and scale everything based on that. For example, lets say you make your virtual screen size 800x480 (typical Android screen). You can create a scale vector like this: