The regular expression engine is very smart and highly optimized.  Since that line is running on every log entry, it should be real savings.
First, is your process I/O bound or CPU bound?  Look at your CPU meter when it's running.  If it's I/O bound, the CPU will be at less than 100% and there might not be much you can do about it except get better hardware.
If you're CPU bound, a number of things could help.  It's not a huge savings, but it will help to pre-compile your regular expressions.  Instead 
A lot harder to read, but it will run a lot faster.  (Comment your code!)  In fact, if you just just replace that whole series of line.replace and split with one big fancy regex, that would be best.  Without an example of what the input looks like it's not practical to construct that regex.
Similarly, a regex that only captures the 5th, 6th, 7th and 11th fields will save you from allocating memory for the strings for all the others that you aren't using.  For example to capture the third and fifth words in a line use this regex (understanding that \s matches whitespace and \S matches non-whitespace and parentheses determine what gets captured and stored in the match object's group):