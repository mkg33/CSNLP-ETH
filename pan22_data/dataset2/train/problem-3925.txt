I'm looking at setting up a seperate database server for one of my applications, the application currently runs on 3 servers; 1 frontend server and 2 application/database servers. But for performance reasons I'm looking to move the database onto it's own machine(s).
The servers I would be looking at getting would ether be a 8CPU and 30GB RAM for a single server, or 4CPU and 8GB RAM for two servers
If I've excluded any details that would be useful I'm happy to provide them but I've tried to include as much as possible.
The databases are, I would say, about medium size (Postgresql: 32GB, MongoDB: 16GB, Redis and Memcached both use memory for storage but I think they currently run about Redis:12GB and 4GB)
*Memcached would continue to run on the application servers, we use it as a sort of 'local cache' as such it's not replicated/sharded across servers, using Redis as a distributed cache
The servers would be run on a cloud service called StormOnDemand so we wouldn't really have too many issues with hardware reliability. We could also scale vertically up and down as needed.
Last time I checked, we average just over 2mill transactions a day on Postgres, about 2.5mill on Mongo, not sure about Redis and Memcached but we use them both for caching so I would imagine it's about the same.
So it comes down to this, am I better off getting two servers and setting them up as replicas of each other. Or just one server but make it twice as powerful?
For redundency, it's a web app and the vast majority of our visitors are reccuring so, although we don't want downtime, we'd be happy with a couple of hours a month for the cost savings we'd get from a single server. In 6 months running with SOD we've never had any downtime but that's not to say it won't happen in the future.