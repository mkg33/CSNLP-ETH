This is by no means a super safe thing that will work always and everywhere where you want to rename users. Obviously, that depends on how your config file is set up and what you would expect to encounter.
But I'd go a bit further, while you're at it... I don't know what your file is actually like, but just for practice I'd look into making your search/replace operation a bit safer.
You seem to be confusing shell patterns with regular expressions. In a shell pattern, * means zero or more of any character.  In a regular expression, which is what sed expects in its patterns, * means zero or more of the previous atom. In your example, that atom is the =. So, sed is searching for user followed by zero or more = and replacing the matching string with user=bob. The pattern you want is user=.*, which is user= followed by any character (.) zero or more times, making your sed command:
Basically sed think that I want to replace just that part, while I want to replace the whole string with the new string. I thought that the * would tell sed to consider anything coming after, but it does not work.
With your current sed syntax, this would go quite wrong. To make it a bit more specific, you could try:
Since I do not know what the "blabla" will be, I can't put it in the sed command. How do I tell sed to find a string that start with "user=" and replace the whole string with the new one?
But my answer is meant to give a bit of "food for thought", because given a (number of) config file(s) large enough to expect so many user names not want to do this manually, blindly replacing "user=.*" seems possibly dangerous. You may want to spend some time polishing these kinds of operations :)
I would like to have the string replaced, while instead, sed read the string and append the text in the middle of the string.
so I run sed in this way, to have it to search for the "user=" string, and replace it with "user=bob"