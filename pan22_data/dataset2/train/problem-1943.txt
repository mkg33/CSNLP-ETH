The downside is that a late night Selenium run (as part of continuous integration on webapps) can take down an instance that other people might need, so you either need to give root access on the Dom0 to everyone and hope that your developers can fix things when they break, or an admin has to spend a nontrivial amount of time keeping the central box running. We did also try splitting instances out (one instance of each type per developer) but found that it was just as complicated to administer because each developer broke things in their own unique fashion.
If you are running them on a central server because you need to strictly control the contents of the VM, AND you have some kind of extra-reliable fileserver like a NetApp or something, then I like to put them on the file server (either over iSCSI or NFS) and run them like that.  This way if the VM server dies, your VMs are not stranded on the local disk of a server that is broken.  (I presume that your extra-reliable fileserver has some form of 7x24, "it-is-broken-make-it-go" level of support contract.)
If you are running something like VMWare Workstation or using VMWare Player at the workstation because each user needs their own instance, then each running instance of the VM has to be a unique copy.  Since local disk is always faster than network disk, you might as well copy the VMs to the individual workstations.  This means the end user has more control over the VMs and can stop/kill them if they get hosed.
Our current policy is to have developers working on Apple hardware because it can run both linux and windows DomU's under various products, and we haven't bothered to figure out how to run an OSX DomU if it's even possible on Wintel hardware. 
We do test/devel VMs on workstations, rather than centralised VM servers.  The main benefits are better developer control (reboots, fiddling, etc), better isolation (if a dev does something really stupid, the worst that can happen is that they melt their own workstation's CPU into glass), and the fact that there's otherwise all that hardware just sitting there under people's desks doing nothing (green computing, and all that)...
The pros are that you can control the detail level of your configurations and make sure they're standardized and upgraded in lockstep with our production machines. 