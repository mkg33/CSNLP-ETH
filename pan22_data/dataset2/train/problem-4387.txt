Is the database in full recovery mode?  If so, when you perform a shrink, it's logging all of the changes and won't shrink it the way you're expecting.  Depending on your hours of operation, you could take a backup, switch to bulk-shipping recovery mode and then run the shrink on the data file.  After that, you'd want to run index scripts to repair/rebuild and switch back to full recovery.  That is what I would try anyways but again, it depends on your hours of operation for all of this.
The only time I've been unable to shrink a DB and reclaim space is because you cannot shrink a DB beyond the initial size of the DB when it was created. So for example, if your DB is a copy of the production DB and you first created the DB at 525GB, sql server will not allow you to shrink the size below 525GB no matter how much data you delete from the DB. But if the DB was created below 383GB and then grew to be 525GB you should have no trouble reclaiming the space. I've long thought this is a stupid and arbitrary restriction by Microsoft.
Here's the query I use to keep tables in check. It will help you determine which tables need to be rebuilt, and create the SQL queries you need to run. This query is limited to those with higher than 1MB unused space and a 5% unused ratio, so that you only rebuild what you really need to focus on:
I've encountered this problem before on production boxes, what you need to do is rebuild tables and indexes for each table (in that order).
SQL Server stores everything in 8060 Byte pages. Meaning, if you have a row (or off-row data) that is 4040 bytes and the next one is similar, it cannot fit both in the same page and you will waste half your space. Try changing your row size by storing variable length columns (start with the image for example) in a different table.