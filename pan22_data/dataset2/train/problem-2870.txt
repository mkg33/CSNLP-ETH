The methods prefixed with test* should be renamed to assert* because assertions are what they actually do. The test* prefix is often used for test cases annotated with @Test.
This is a nice idea and those classes can indeed be reused on many occasions, unless equals and hashCode are generated with utils like lombok.
In assertNullPointerException, instead of using a try-catch block, it is more concise to use @Test(expected = NullPointerException.class) on the test method that invokes it. The fail() call will neither be necessary in this case.
But these entities can become more flexible and easily pluggable if transformed into abstract classes or interfaces. For example:
this already begins to look like a testing framework. Now, each test class that plugs the interface will have to implement the test method.
Currently, these classes contain lots of public static methods, which means that calls like ComparableTester.assertConsistencyWithEqual(o, o) look rather ugly and are too verbose in usage.
Moreover, using generic types (e.g. EqualsContractTester<T>) will allow to avoid to have Object args in methods, but this is optional.