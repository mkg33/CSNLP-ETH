This is my improvement of a minesweeper game I took from the internet, which I am quite proud of. Nevertheless I am willing to hear your opinions, suggestions, and comments.
map is a collection in the STL, so I would tend to avoid using it as a variable name.  I'd also consider using a two dimensional array to represent the play area, rather than a 1 dimensional array.  That way instead of doing the hard work yourself:
Your main is about 180 lines long.  This is quite long, and whilst it's not always the case, there is likely to be some aspects of it that could be broken up into separate functions to make the intent and flow of the code clearer.  Generally speaking, if I get a method that is much more than a screen full of code (80 lines) I start considering if the code needs broken up more.
As has been said in the comments, your code reads very much like it's been written in C.  You're using C functions like printf instead of the more C++ cout and you haven't broken your logic down into classes etc.
One letter iterators are ok, however when you start getting multiple iterators in the same method it may be worth giving them proper names so that it's more obvious what's going on.  This is far from transparent:
I'm not totally against labels, but if you need to use them, then it can be a good indicator as to where there is a distinct responsibility in your code.  For example, you have the label start:.  You jump to this if the player says they want to play again.  If the code had been broken up a bit, this label wouldn't have been necessary:
Consider allowing the user to set the difficulty (and varying the number of mines in the minefield accordingly), rather than having it hard coded.
Commented out code creates noise that distracts from the rest of the code.  If you want to have conditional compilation, it's better to build it in to your process.  So, instead of: