By requiring a name instead of IP, it forcefully encourages this practice.  Names can stay the same, and in the event of load balancing or DR you won't have to be concerned about changing the MX record itself and waiting for DNS propagation.
For example, 1.2.3.4.example.com. is a valid hostname (yes, it is, even in the light of RFC1034, 3.5). Specifying this host as MX in a bind configuration file for example.com might look like
The purpose of MXrecords is that an application (mail transfer) can learn about the host to be used. On application level, host names are the right thing to use (not IP addresss). 
And even to transfer the informatoin in a DNS datagram requires some quirky additoins; the simplest way would be to introduce a new resource  record type, MXA say, for disambiguation. But then again, why introduce the burden such a new record type when 
It's important to note that DNS is a binary protocol with strict mappings between the type of record and the type of data that such a record holds.
Also, adding the conceot of variant type record to DNS introduces a leverl of complication and hence  an entry point for problems, implementation mishaps, security challenges.
An MX record, on the other hand, holds a name (a sequence of labels on the format <int number of bytes> <label> <int number of bytes> <label> <int 0>, variable length).