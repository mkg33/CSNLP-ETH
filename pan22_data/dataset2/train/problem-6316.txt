The response speed varies from resolver to resolver and I periodically modify /etc/resolv.conf to get the best performance.
To ensure the most responsive resolvers are always specified, I'd like to automate the process of modifying /etc/resolv.conf.
I'm interested in knowing if anyone has tackled this type of problem before and whether there are any stable scripts/processes/methods for handling this.
On Debian based systems there is a package resolvconf (wiki) that is designed to handle updating of the resolv.conf.
I can script it if need be, however that would inevitably feature an obscure bug and I want to minimise the risk of an automated process making a mess of /etc/resolv.conf. Any pre-existing solution that has been tested for a long time and shown to be stable will be more reliable than my own solution.
Have you tried installing your own local caching named?  Install BIND locally (caching only), and then let it query the DNS the way it was meant to (find delegations dynamically based on delegations).  The just change resolv.conf to point to 127.0.0.1 and be done with it.  Maybe throw one of your hosts IPs in there as a backup, but mostly rely on your own resolver.
On two occasions I found one of my public websites was taking far too long to load and this was, in part, related to it depending on backend web services that were taking around 15s to resolve a domain to an IP.
You can append, or delete entries.  You can setup scripts that will be called whenever an update has happened.  This allows you to notify other services that an update has been made.