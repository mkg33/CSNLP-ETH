Counting loops are nearly always better done using of range(), xrange(), enumerate(), or something from itertools.
There is no need to check whether the string's length is even or odd nor convert strings to lists as strings can be indexed and checked as if they were lists. Don't do unnecessary things in code: it makes it a lot more complicated.
You should never return None or 0000 in this case. None practically is nothing and 0000 seems like False to me. For readability and sense, use True and False instead.
It is best you put your raw_input statement outside the function to allow it to be reusable and can be accessed in other pieces of code. Now if the input will always be used for that one function, then you can keep the statement within the function.
Note: .format() is used to put values into the string, like in this example, whatever string inputted_word is assigned to will replace {0:}.
Even more unusual is the fact that you return None if it's a palindrome, and return 0000 if it's not.  Why so many zeroes?  Why are both return values falsy?  The convention would be to return True or False.
You are overkilling it. Please, use a proper separation of tasks: do not ask for input in the method that should only check whether the input string is a palindrome. 
In fact, your code can be shrunk down by a lot. By using [::-1], you can flip a string, which is needed to check whether a string is a palindrome or not. You can turn that big function into a six-liner:
200_success' generator expression seems to me the must succinct and practical. I don't understand though why adding 1 to the len is required. I would suggest the following lambda expression:
Der_Lett (a cryptic abbreviation for "dernière lettre"?) actually isn't the index to the last letter — it's off by one.  (Your code is correct, but weird.)
Now if that is the entire program, then use print instead of return as you need to assign the returned value to a variable and print it out, which is cumbersome. With print:
A palindrome-checking function should accept a string parameter and return a result.  Your function takes its input from the keyboard (or stdin), which makes it not reusable.  If you want to accept keyboard input, it should be done outside the function.
PEP 8 naming conventions apply to your variable names, même en français.  That is, they should be lowercase.