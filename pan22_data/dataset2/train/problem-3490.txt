No root logon, plus pretty long and random passwords and fail2ban and maybe different port is for most of us enough secure.
Also, the problem they solve is they reduce your risk of brute force ssh login attacks.  Honestly, the risk of that is incredibly small as long as you have even a moderately decent password policy.
Not only makes your system safer, but it helps you keep cleaner logs and simply keep out undesired people out of your login screens...
Its not a technical problem with either tool per-se, but if your users number in the dozens or greater its going to be a noticable uptick in support workload and frustrated users.
I've been using denyhosts in several of my production and non-production servers, and it works real fine (I had problems with daemon sync, so I don't use it now, but maybe it's working fine again).
Every time I've ever implemented denyhosts or fail2ban in a production environment it has created a guaranteed ticket-stream of unlock requests, password reset requests, requests to change the settings or manage the whitelist, and generally just people who give up logging in to look into things and lean more on the sysadmins for stuff they could do themselves.