The only thing I can think of at this point is to "tag" each computer with a .txt file or something and use that as part of the detection method.  But of course then I have to use a script to do the uninstall/reinstall and tag the machine and that'll take all day.
I would add this registry key to the deployment detection methods and force the clients to re-evaulate.
In the detection rule of the deployment you can set a powershell script to check based on the install date (ie older than today) and overwrite based on that
I recently used the Adobe Customization Wizard to create a custom transforms (.mst) file for the latest version of Acrobat Reader DC and deployed it to our network.  Today I discovered that the customizations are blocking Sharepoint documents on our own intranet from opening.  It was a single checkbox I had clicked by mistake.  I have corrected the error and updated the distribution points.
I believe the adobe customization wizard will show you where the changes you make will be shown in the registry. 
The problem I have is that Windows Installer doesn't let you apply an .mst file after-the-fact.  You have to do a complete uninstall/reinstall of the application to apply a different set of transforms.  SCCM has no option to do this.  If I update or create a new application, SCCM will just detect that it's already been installed and won't apply the fix since it's the same version of the same application.
I would make an application and add a new manual detection method. I usually use something in HKLM, and just make my own. A detection method doesn't need to be the MSI guid... although this should be the exception not the rule. 