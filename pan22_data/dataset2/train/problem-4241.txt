So, in effect, you've got 16TB allocated out to various systems but only 4.5TB of physical resource behind it.
I don't know specifically about the Drobo but, in general, the storage will throw warnings and errors when it's physically out of space and, eventually, writes by the mounted hosts will begin to fail.  The OS will still see the free space that it's been told it has access to.
This isn't a Drobo-specific answer but what do you THINK happens when a thin-provisioned LUN can't be extended past its declared size? The details and way the failure is handled are OS/FS specific but the write has to fail one way or another - though usually existing blocks can continue to be read.
Writes to the LUN simply fail. The only way to notify the OS is not the lie to it in the first place.
If the OS sees this as 16TB even though there is only 4.5TB available, what happens when I run out of physical space?  Is there some way for the Drobo to report to the OS that it is full, despite the free cluster count of the NTFS partition saying otherwise?
While I will only have 4.5TB of space initially, I'd like to use thin provisioning to create a 16TB LUN.
Also, generally, thin provisioning may not allow you to allocate more space than the array physically has...thin provisioning more comes in when you have your 4.5TB of space and you want to allocate say 4TB to 4 different systems counting on the fact that all 4 systems will use far less than their 3TB.
I'm thinking about getting a Drobo S to add some storage on a Windows Server 2008 R2 box.  The Drobo offers thin provisioning.  