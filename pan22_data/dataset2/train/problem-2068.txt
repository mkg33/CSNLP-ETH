Look at Small Basic or Scratch or Alice.  All are great and have a lot of support out there.  Designed to get and keep kids interested in programming.  A little bit more advanced is Visual Studio Code with Python and the Lego EV3 extension.  Programming robots in Python.  What more could you ask for in the way of getting kids interested in programming?
Along with Greenfoot, the system, there is a teacher's forum that provides support but also contributed scenarios that anyone can use. See The Greenroom. I have contributed a few scenarios to the system myself. 
If you're looking for a more competitive arena, Screeps has always looked promising to me, and certain types of students would find it highly motivating.
You could try the Bootstrap curriculum, the materials are free and can integrate with existing curriculum instead of being electives. A talk about the design of the program, and how to design highschool computer science curriculum in general is given here by one of the Co-directors of Bootstrap, Professor Shriram Krishnamurthi from Brown University. 
Greenfoot is an excellent recommendation (as per @Buffy).  If you wanted to stay in the games arena (and not move onto Java), at the machine level, we introduce assembly with Human Resource Machine, which the kids enjoy very much.  It's worth noting that the challenges become quite hard towards the end, but they ramp up nicely, so this works well for students who proceed and different paces.
Greenfoot requires installation on a machine currently, though they are working on a browser based system I think. You can make the scenarios as simple or as complex as you like and you can provide as much or as little scaffolding for the students as you like. Generally speaking the code behind a given scenario is open for students to see and modify. This can be a useful learning experience - reading and maybe modifying code that is more sophisticated than you can currently create. 
If you are willing to switch to Java and also willing to do a bit of work upfront preparing (or finding) scenarios, then I recommend that you look at Greenfoot. It is a graphical framework for programming in Java that gives students a lot of feedback on their programs and includes an integrated development environment as well as the graphics screen. 
The same people that created Greenfoot have also built BlueJay, which is a more traditional Java IDE, but also intended for novices. They also have a book that is a good introduction to programming using the Greenfoot system.