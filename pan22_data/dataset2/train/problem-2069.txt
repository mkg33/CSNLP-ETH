That approach does however introduce a new problem, because this layer need to keep track of where packets are to be routed. But that rerouting is not static, when it changes there may be two possible candidates for the correct destination for the packet from the client. At this point a packet which from the client's point of view was sent to a unicast address would have to be forwarded to two different hosts, where only one of them would reply.
Hosting a TCP based service on an anycast address is known to be problematic due to the possibility of routes changing while a connection is open. That can cause connections to break. An additional layer, which tunnels packets from the client between servers in case they end up on the wrong server in the first place, could solve that problem.
You could probably do it with an oddly configured load balancer, or NAT device as well, as mtak states though, you'd probably have connectivity issues on many different levels.
Are you looking for networks that deliberately route a unicast packet to multiple machines? Or are you considering cases where it happens by accident due to misconfiguration?
Theoretically it would be possible for two machines with the same MAC address which are connected to the same broadcast domain to both receive the same frames. Both machines would also need to have the same IP configured, as the kernel would drop packets which are not destined for the machine. You would probably need to have a hub in the network as well, because a switch would normally not allow two ports with the same MAC on the VLAN. Additionally you would quickly run into problems with TCP sessions with this setup (because frames would be sent to the wrong host).
Having it happen by accident is not very likely. I can't come up with a very likely scenario, in which it would happen. NATing a unicast address to a multicast address is one mistake that could cause it to happen.
Yeah, it's possible with anycast, as both machines would have the same IP address, it would be a strange configuration of anycast however, with both routes having the same amount of hops, priority, and other criteria which would normally favor one over the other. 
Deliberately routing a packet send to a unicast address to multiple hosts is entirely possible. I can think of one meaningful use case for it.
This can be quite common depending on your network topology and switch model(s). If a particular switch doesn't have a destination address in its CAM table it will send the packet out all ports. It doesn't matter if it's broadcast, multicast, or unicast. According to Cisco this can be caused by path asymmetry, topology changes, or a CAM table overflow. I've also seen it happen with poor quality switches.