(2) You call checkLocalStorageBrowserSupport(), but don't store the return value and don't seem to check it in your functions that make use of local storage.  It seems like you require localStorage, so I think it would be good to hide `todo_list_container' if there's no local storage so you never have buttons that don't do anything but that are just begging to be clicked.
Disclaimer: I've only commented on the code layout, I haven't actually read what the functions are doing
I will stop there, but basically once you lay down your infrastructure like this, your application becomes very easy to enhance and progress down a development path. You have got chocolate in your vanilla and though it might taste good at this point in the game it will confuse you as you move forward. The fastest first step is to get the data out of your functions. If you do not want to work from the top down like I started here, work from the bottom up, start with the ListItem (UI) -- ask yourself what it is and what is the minimum IT needs to do and know about. Then go up to its parent.
(1) I find it very confusing that you re-use the same term in different ways.  For instance you have a todo_item object which just has some properties and functions.  I can't think of why these should be together and they certainly don't represent the values for an individual todo item.  Then you have both an addItem function on that object and another addItem function that has a parameter named todo_item, which would hide your previous object variable.  Specifically though I think it is poor form to call a different addItem function from within a function with the same name.
I'd recommend that you investigate one of the popular js encapsulation patterns like the Revealing Module Pattern. You'll find a bazillion examples online if you do a search.
Not only would that be okay, but I'd actually recommend it. Defining the checkLocalStorageBrowserSupport, checkLocalStorageExistingData, addItem and tweakMinorUIStuff methods in the global scope is a bad idea in js. It's too easy for another js library to overwrite your methods in global scope, and that will break your application. Putting the methods on todo_item at least pulls those methods out of global scope. 