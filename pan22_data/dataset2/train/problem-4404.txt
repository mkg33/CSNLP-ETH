You probably don't want to use AddForce, and definitely don't use Rotate for physics since it completely overrides the physics engine (and collisions). 
Using the physics engine joints for the suspension won't be particularly worth the trouble. Instead use the WheelCollider suspension in conjunction with procedural animation to get the best blend of realistic behavior, and a robust implementation.
WheelColliders are an extremely well explored area in Unity so do some searching in addition to looking at that tutorial, you'll find various implementations of features like gearboxes and simulated drivetrains. WheelColliders are really a good base that you can build on. Even more advanced realism features such as tire wear and temperature can all be simulated if you're willing to experiment with the various parameters they expose. 
This tutorial, by the creator of one of the biggest 3rd party vehicle plugins for Unity goes over a few tips you can use to get the most out of WheelColliders. To sum it up, it's goes over using the right units, "fudging" the center of gravity to help with roll, and most importantly, how to simulate an anti-roll bar (it's very easy to underestimate how incredibly important an anti-roll bar is in keeping a vehicle upright, and this carries over to Unity as well)
Use WheelColliders. They're specifically made for this purpose. I've used AddForce in conjunction with WheelColliders with extremely low friction to simulate arcade style hovering vehicles, but anything remotely realistic is going to need a lot more than that. WheelColliders expose properties that handle the suspension, tires, braking, acceleration and steering. Unity's implementation isn't perfect, but if you make sure that you're using the correct scale for your objects, with a few tweaks it can be used for a rather realistic setup.