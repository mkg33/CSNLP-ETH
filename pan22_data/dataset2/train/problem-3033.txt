 Storing e-mails in database is unefficient because of additional overhead introduced. For most cases, maildir is the way to go.
I need mail to be sent to their usernames and be read in the website. But, I'd also like users to be able to access their mail through IMAP as well. I need the user to authenticate with the mail server with their site credentials.
You can host all of your email there and never have to worry about server configurations, mail delivery, ports, security, etc.  You can use any domain name and can customize the logo/coloring of the page.
I know PHP can read IMAP boxes, but I'm under the impression that that's not very efficient for a large-scale multi-user environment. I know some mail daemons can store their boxes and messages in MySQL and authenticate against other systems. I'd imagine that'd be a smoother solution, no?
  I had run webmail for 10 000 clients using roundcube and single box with IMAP (caching imap connection using imapproxy to avoid auth overhead on each request).
Please refer the URL http://php.net/manual/en/book.imap.php with help of which you can integrate your Mail (IMAP) with PHP.
  IMAP handles a lot of things, including mail client concurrency, folders, deletion, authentication - reinventing most of them feels "not right".
Why reinvent the wheel like Irosa said?  Look into Google Apps: http://www.google.com/apps/intl/en/business/index.html
Most mail daemons can authenticate against other backends (MySQL, Postgres, LDAP are most common).  If you are using some kind database of for site, just put correct queries in postfix config to authenticate against your site database.
I'm looking to integrate a webmail system into a website I'm building. I'd basically like a webmail interface built into my existing application.