BTW, the last time I tried using VLC in this scenario, I ran into an issue where VLC would ignore the TTL setting and always transmit packets with TTL set to 1. Read the bug report for a workaround.
The one mulicast tool I have found is mcast.exe tool which is part of the Windows 2000/2003 resource kit.  From what I have read online it seems that mcast.exe does not work across a router, and only works on the local network, so that doesn't seem to be useful for me to test multicast routing.
mcast is the tool that we use to see if multicast has been allowed by our local router. It should be off by default.
You can also try these application: VIC and RAT, multicast application used to be develop for MBONE, available for Windows XP and UNIX. It also support IPv4 and IPv6 Multicast. You can see them at http://mediatools.cs.ucl.ac.uk/nets/mmedia/
I have been asked by a client to enable multicast routing on a Linux box acting as their router since their phone system requires multicast to for a few features.  Since I am not physically near the client I don't really have the ability to experiment with the various methods for setting up multicast routing on Linux.  I can setup a router at my desk that is identical to what is deployed on their network, but I don't know of any good simple tools that I can use to generate or listen for multicast traffic.
This may or may not be helpful, but in the past, I've used VLC (of all things) as a multicast video source. In my use cases, though, the multicast streams never needed to go beyond a L2 domain, so I can't say if the traffic it generates would be "proper" routable multicast.
By specifying the -T 32 option on the sender, you're setting the TTL to 32 which will ensure the traffic can be routed (assuming IGMP, PIM, and whatnot on the routers are properly configured)
I am looking for a good simple tool that runs on a standard OS (Windows or Linux) that I can used to test that multicast is being passed properly by a router.