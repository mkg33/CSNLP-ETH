As you add some space either side of the board I'd use str.format again to wrap the result of str.join.
However you want to pass the digit. To simplify the logic you can use {{:0>{}}}.format(digit).format(data).
First things first I'd change your first loop to use this. I'd not change iteration and jail as they don't fit into the objects we created above.
However to be able to keep the original I'd use a dictionary comprehension and a list comprehension.
As we will go through (my) places again but we don't need the name you can use dict.values() to get the values.
It will significantly reduce the amount of lines in your code and will make your code easier to read and understand.
This is roughly the same as before, but as I use str.format rather than % I'd change it to keep consistent.
I'd loop through this and display them as we did above but you need to know it's 'brown 1' rather than 'brown'.
We also know that this line is around the outer of the square board, and you chose to start the origin at the bottom right.
Dictionary's are like lists, they have a few more features that I'd use and are basically lists but can have 'any' key.
As we constructed the board's positions earlier in board we know where to place things in the boards line.
But I initialize the entire board as space and overwrite the outer circle with this code to the line above.