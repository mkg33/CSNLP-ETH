Read the manpage for shutdown on your system:  The time argument is mandatory on every implementation I've ever seen.
Just to make my life even better I'd like to avoid typing in my password for shutting down the computer. I think there're to possibilities I could look for: 
You can't do this the way you think because sudo doesn't work that way - Permissions are granted to users.
Either explicitly allow shutdown with the NOPASSWD option (read man sudoers for info) or add your user to the group allowed to run shutdown (usually operator).
Also in this scenario I guess I've to consider the possibility of code injection by having some manipulating the script. I guess therefore I should change owner and group to root and just allow execution but not grant read and write access for other users.
Probably the first way is easier and on my private machine I can do that. However I wonder what if I come in another situation. Though it's theoretic I'd like to learn best practise.
The best you could do is allow the script to be run using sudo, but that doesn't buy you anything over Option 1 (and as you've mentioned opens you up to some possible security holes in your script, since you're letting it be run as root).
I wonder if it's better to grant permission for a specific script I write and therefore know what it does and what not instead of removing the sudo password protection for a full command (in this case shutdown. Is this possible?
However what about the possibility of someone exchanging the full file with some of it's own and therefore acquiring sudo rights?