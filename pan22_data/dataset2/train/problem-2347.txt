My host (Slicehost) provides full-VM snapshot backups, which I can schedule to run daily. Slicehost staff are on record that these backups are stored on a separate host machine. This is by far the easiest way.
Even some cheap (sub-$10/month) VPS hostings offer backups. If you pay $15+, then you will certainly find a major hosting company with well-organized backups included in the price.
I'd suggest to choose a VPS provider that already has snapshot backups. Most providers perform redundant offsite backups - it is supposed to be better than you can setup yourself, especially if you are new to this.
This is a good bare minimum to get you started. In future once you can justify the effort, you can worry about backup job monitoring, backup set size optimisation (date based log files, gzip --rsyncable rolling database dumps, exclude junk), having the backups go to a machine which is in a ready state to start serving, DR plans, higher frequency backups, daily automated restore testing, etc.
For the tools, rdiff-backup works fairly well. Of course, don't forget to actually test that you can restore from your backups at least once. It is best to backup the data to another host or some other machine which is always online.
How do people normally backup their server data, and is the probability of machine meltdown or the host company server farm "catching fire" so remote as not to be worth worrying about - especially for a small (read one man) startup like me?
A backup/restore policy is something that is specific to an organisation due to differences in the value of the data and perceived risks. That said, given that you're a one-man startup, you would probably want to do something like:
Initial data is likely to be about 80Mb, and I expect the data to grow at approximately 5Mb to 10 Mb a day.
Another thing that is not clear to me is - where are the files backed up to normally (in the case of remote servers). If the files are backed up to the same machine (or even to another machine but with the same host), there is potentially, a single point of failure). 
I am considering opting for a VPS solution, with the server running Ubuntu server. I am pretty new to this, and I need to come up with a backup policy for my server data.
As a second level of backup, I push my /var/www directories up to Amazon S3 once a week, along with a database dump.