Pay attention to naming - even at this early stage. Naming is not just for readability, but it'll help you keep the concepts and responsibilities clear in your head as you design. MyClass is meaningless, and doesn't tell you anything about what that class does - you may as well name it Class1.
Pull your MyClass out, and don't make it static. For the most part, you should avoid static variables and methods unless you really understand what you're doing.
MyClass is trying to do 2 different things - data access and keeping state of the current row. I'd suggest splitting those responsibilities out, and making MyClass only responsible for filling the dataset and returning it. Currently, your navigation is simple enough that your child form can track the state without too much complexity, so I would move that there. If it becomes more complex, you may want to introduce a new class to handle it.
You'll want to figure out how to get data from one form to another. Currently, it looks like you plan to use static variables for that - that's not a good idea. You should either use events, pass forms along or create a custom class to pass along to hold state. Passing the form along is simple and probably the easiest option to start with.
Don't try to handle exceptions at the source unless you can recover from it automatically. Usually, you can't recover from it so it's best to let it go back to the form - the form can show a message box if it wants to.