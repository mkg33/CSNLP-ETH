This is especially true with Docker. Docker uses the BTRFS or AUFS storage backends, but can also user overlayfs. Overlayfs supports setting caps, but BTRFS and AUFS (see below) do not.
One reason the setcap command sometimes fails is because certain file systems do not support it, if they don't support extended attributes. 
If you instead wish to use something like "forever" (essentially daemonizes node apps), then this is the go:
FWIW, another option is to use authbind. Authbind uses a slightly different mechanism to achieve similar ends to CAP_NET_BIND_SERVICE. I.e. allows non-privileged apps to use privileged ports. 
Figured it out.  Turns out however I installed node, created a sym-link in /usr/bin/node which pointed to another sym-link in /etc/alternatives/node which pointed to another sym-link in /usr/bin/nodejs.
I'm following a walkthrough that guides you through setting up node on an ubuntu machine.  I'm at the step where you configure the system to allow node to run on port 80.  It (as well as a few other guides I've looked at) recommend running the following command:
Assuming the desired app.js is running under non-privileged user "user" and you wish to bind to port 80: