I am not going to repeat @Accumulation's solution but instead point out another aspect. By introducing only 2 variables you can make the complicated example look like the simple one:
I want the code to automatically know which way to iterate through the loop without manually adding the '>' or '<' sign. 
You have a really complicated example with variables, and a simpler one with literals. The literal one is only going to use one branch. So let's do a simple one with variables. Let's say you want to iterate from a to b, but you don't know which is larger. Well, first of all, unless I'm missing something, if a>b, then you'll want integer -= increment in the second branch, while your code has integer += increment in both. So before your for-loop, define a variable direction equal to the sign of b-a (that is, if b-a >0 then direction = 1, if b-a<0 then direction = -1). Then do:
The current way I have gone around this is by wrapping the for loop in an if statement, however this looks incredibly bulky and I feel there must be a better way.
I am using the logic that if the setup part of the loop is smaller than the value in the  test expression, then the sign used will '<' and will be '>' vice versa.