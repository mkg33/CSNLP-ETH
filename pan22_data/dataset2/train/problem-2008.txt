You should be aware that after configuring SSL bump, Squid will create & issue a self-signed cert for every domain it is configured to bump.  Your client must accept this certificate in order for the transfer to take place.  cURL can do this with the --cacert parameter (allowing it to accept CAs whose public key appears in the list) or the -k parameter (disables SSL checking completely).
Also, there's a subtle (but important) difference in the way the two cURL commands you posted above work.  The first will cause cURL to open a connection as though it were speaking to a proxy, ie, open port, issue a "CONNECT " statement, then wait for the SSL handshake to take place, then start talking HTTP.  The second invocation will cause cURL to open a connection and attempt the SSL handshake straight away.  In that case, the host (running Squid) must figure out which host to connect to, usually from the SNI part of the handshake.  Squid can do this, but you need to configure it with the https_port transparent statement.  I would recommend doing it via the first method if you can, as it requires less configuration on the Squid side, and makes it clear on the client side that a proxy is involved.