It will add a route for just those Ip's when you connect your vpn and remove it when the vpn it disconnected.
If you need a temporary dirty workaround to a single or a handful known server ips, the simplest solution should be the static client side routing option.
In an IPv6 world, there's no public IP shortage (and there won't be, event in a few decade). So there no reason not to have a public IP on each and every device of every network. And if you need network isolation, keep filtering with a firewall, but without ugly NAT...
I connected to the network with my mobile phone, then I shared the network connection via bluetooth with my laptop.  I can now use the VPN for my remote employer.  
The ideal and definitive solution to this issue is quite straightforward (albeit it can, and will, takes some time to be globally rolled-out) : IPv6... 
Just as a reminder: this whole issue is due to years of IPv4 address shortage, and extensive use of private IP range behind NAT to workaround this shortage !
If you just need to hit a few one or two ip addresses, add route statement to your ovpn configuration file like this:
In my case I added my desired destination server (192.168.1.100) to my routing table on my linux client via:
I have a simple solution that I'm using at a co-working space that has a conflicting IP range (10.x)