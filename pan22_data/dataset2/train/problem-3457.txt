As you have said, you can do pretty much everything you would do with DSC, with straight powershell code.
I have included a few links above, but there are many good web sites you can find on the Internet about the theory of configuration management systems.  The general theory applies to all configuration management systems (puppet, chef, dsc, ansible, etc) it is certainly worth learning, and worth using in most environments.
Configuration management is about patterns and practices of using code and various systems to ensure a system is in a specific state. Ref 1 2
Another important thing about DSC and many other configuration management systems is about making re-usable resources that actually do the work that can be shared with anyone and everyone in the world.  In this way your actually 'configuration' should be just the few specific details that are specific to your environment.  This also means you should need to write a lot less code, since you can re-use things that has been used and vetted by many other people.
One important thing about Configuration management is idempotence.  Meaning the code describing your system in the configuration management system will be checked and ran against your system periodically.  Lots of basic scripts are not well designed, and will do the correct thing the first time you use it to configure a system, but the next time they will error, duplicate things and so on.  Configuration management systems ideally will abstract away a large portion of the testing and state checking code you have to manually add in a script, to make your script idempotent.