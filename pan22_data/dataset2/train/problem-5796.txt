A side note, CDNs are not for hosting your whole website. So if you're thinking that you can use one to replace your web hosting or use it as some sort of failover plan, you're barking up the wrong tree.
Yes: the CDN servers will still be running even while your site is down, which is a good option to have for handling major outages. You have a fair amount of control over what happens so you can tailor the experience based on your resources and priorities. The options generically fall into these categories:
It would depend on who is hosting your CDN. If you host your website on one server, and the CDN with a 3rd party then it is likely that your CDN will remain active when your website it down. This may not be the case however, as some CDNs only distribute content they can verify is on your website.
One thing our customers do is point www to the CDN and 301 the TLD to www.  If an objects TTL expires then the edge will serve the expired content if it is available in cache.
Most people use them to store static files such as images, css and javascript files. Some can be configured to cache HTML, but that's only if you have a completely static website. If that were the case, you could host the whole thing on S3 and wouldn't need a server at all.
As the other posters noted though, this isn't what CDNs are designed for and they provide NO guarantees that this behavior will work. It just happens to usually work (and it's awesome when you watch it happen!). And of course for specific technical details you'd have to contact your provider.
I was a Support Engineer at a CDN for over a year and I will say all of the answers here are great but IMO @Chris-Adams has the best answer (if I could up-vote it I would).
Then if your server goes down, you have an extra 5 minutes to bring it back up before users will notice. Well, at least for .jpgs. Well, at least for .jpgs that happened to have gotten cached beforehand.
When using CDNs you usually configure TTLs (time to live) for your content. This is a maximum on how old the cache can get before it decides it absolutely has to refresh the cache with the newest content. For example, suppose you configure all *.jpg URLs to have a 5 minute TTL.
Also, some CDNs use features like Akamai NetStorage where you can upload content directly to the CDN -- the CDN is given some content and told to serve it directly a priori. Since there's never an "on-demand" "pull" style caching going on here to begin with, that should of course work when your server is down.
CDN's are designed for scalability and performance, but not for high availability. At any given time, they may require access to the original files.
With the exception of the third option, you have no control over what will be cached on the CDN servers so the most important part of the process is deciding how your site can degrade if various features aren't available: for example, if you have reasonable HTML content even when JavaScript fails completely a mostly information-driven site might be able to run with only basic page content even when more advanced features are quietly failing in the background. 
With that said, if uptime (and fresh content) is important to you then I would consider moving your origin (pain in the butt I know) to a host that doesn't experience frequent power outages.