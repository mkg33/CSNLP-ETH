In theory, the mdadm --assemble --scan --auto-update-homehost command will do what you want. It will blindly attempt auto-assembly and updates to any detected arrays. If you have a backup of the array and don't mind living a bit dangerously you can try this.
If you want to do things "by hand" you'll first need to locate all the devices the array is stored on. You can look at the output of dmesg to find the devices. Look for entries like hdg: 488397168 sectors (250059 MB) .... You should be able to identify all the devices attached to the system.
Examine all the partitions that you expect to be part of the RAID set as per the above. All the component volumes of a given array will have the same UUID. Once you've located all the pieces, re-assemble the array using the mdadm --assemble command, writing the new devices back to the superblock as follows (replacing /dev/mdX with the MD device you'd like the array to be assembled as, and /dev/partition0, etc, with the member volumes of the array):
That'll reassemble the array and update the superblock with the new hostname and devices. After you do that, you can cat /proc/mdstat to see the condition of the array. Finally, you can mdadm --detail --scan >> /etc/mdadm.conf to write the details of the array to the /etc/mdadm.conf file.
You can see that the devices for all of the component volumes of the array have been written in the superblock. Your new installation probably isn't assigning the same devices to the volumes such that the array isn't being auto-assembled.
I clipped the output to show a single sample device (a 250GB disk with a single Linux software RAID partition on it). You should see several devices' partition tables listed.
If you don't have backups of the data then you should proceed with caution. None of this is particularly difficult, but it's certainly worth it to move slowly and with deliberation if it's a single-copy of your data. You can easily trash your data if you do the wrong thing.