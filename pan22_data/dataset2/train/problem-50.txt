In this case, your only option is to unpack the package by hand (I believe rpm2cpio is the starting point on that particular crusade, unless there's an rpm option that does the trick) and place the relevant files in the correct location(s).  If you're only after libssl and (as a result) libcrypto, this should be fairly straightforward -- you copy libssl.so.0.9.6 and libcrypto.so.0.9.6 into place, and ldd on the problematic binary should show happiness.
I've done this on a BSD box without any issues.  Just make sure to only install the libraries and not overwrite the actual 'openssl' binary (manpages too).  
I need to install 2 different versions of OpenSSL simultaneously. I am currently using Amazon EC2 with the Amazon 32-bit AMI, which currently runs OpenSSL 1.0.0a. I have an old piece of software that I need to run that requires OpenSSL.0.9.6. Unfortunately, from what I have learned, OpenSSL is not backwards-compatible so I will need to install both versions simultaneously. I have found an RPM that will work, however, I have no idea how to go about installing them simultaneously without breaking anything. Any information on this subject would be greatly appreciated.
One option would be to simply setup a chroot on your system with the distro that has the set of packages you need.  This will take up more storage, and will mean that you have to do maintenance on both the root OS, and the chroot, but it would allow you to run one app in the chroot that requires an older set of libraries on the same system that you run applications that require up-to-date libraries.  
If you do need the whole OpenSSL suite of a particular version, you need to publically name and shame the vendor, for the good of the Internet, because that's just ridiculous.
You may download source from openssl.org archive and compile it from source, installing into separate directory.
My guess is that you're running a distribution that doesn't have sane policies about naming library packages relative to the soname of the object(s) contained within it, and which also has conniptions about installing multiple versions of the same package.