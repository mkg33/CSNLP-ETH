So, given what I've laid out, does anyone know a better approach to this problem, or is what I am doing fine?
Using Schemas in this way allows a more flexible method for controlling access since you can assign rights by schema instead of at the individual table level.
I would reverse the naming convention for dealing with subset types.  So a table of users, then another table of users_admin, users_reader, users_approver.  
I have 3 types of users in my app. The users share some common attributes, but they also have quite a bit of stuff that pertains uniquely to each user type. I have a person table that contains limited information about each user. I then have 3 tables for each user type: admin, reader, approver.
I've used this in the past for parent-child tables.  It makes them easy to locate and determine who is the parent and who is the child when looking at a list of table names.
Instead of changing the names of individual tables, I would recommend using schema names to denote the different types of users. 