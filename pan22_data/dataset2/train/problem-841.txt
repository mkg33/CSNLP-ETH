Third, note that there are many ways to design a circuit with a specific function, and the companies that produce ROM resident code like BIOSes, Firmware, or even operating systems often have no real idea about the exact implementation of the circuit on which it has been installed. if one or a few pathways are not receiving power when maybe they should, its as likely as not that the ROM will never know.
Once again, the power is just like water in a pipe. When you start to run out of hot water to draw, the pressure drops. an explosion at the water plant may cause every tap in your house to burst. or it might just burst the sink in the guest bedroom. But ask yourself; if you shut off the valves in the guest bathroom, will your kitchen sink still work? will the kitchen sink know that the guest bathroom is out of order, and refuse to work as a result? Since the kitchen plumbing probably does not rely on the guest bathroom, it will continue to work fine. But if you have a relative in town, they'd better not use the restroom.
The first thing you need to know, is that electricity passing through a circuit is like water in a pipe. it is drawn from the source, through the circuit pathways in an entirely dumb fashion. each pipe the power is drawn into doesn't know that other pipes exist; there is no intelligence to it at all. it just goes where it is drawn. That means that if one pathway is damaged, the others won't know anything about that.
For instance, Capacitors are vulnerable to being fried by too much power, or may simply explode because they were unable to release the hydrogen that is the natural output of their chemical composition. One or two bad caps on a motherboard usually won't cause it to catastrophically fail, but depending on the design, downstream components may not receive all the voltage they want. A downstream transistor may read a low-power signal as a 0, when it was really supposed to be a 1, which may or maynot make an important pathway inaccessible. A pathway connecting to the 7th bit of a 16bit ROM might burn out. in that case, any reads off that rom would work fine except that the 7th bit might always be 0, or might always be 1. 
Engineers, both in hardware and software, do their best to defensively design circuits to be as dependable in the long term as is cost effective, so many minor issues can be corrected. The causes and effects are so small and specific that often damage can go unnoticed, or may result in occasional random glitches or bizarre log messages; or it may introduce a fatal flaw that prevents a primary function. 
The second thing to consider is that electricity is an inherently analog phenomenon. I won't get into volts/amps/ohms/etc, but every one of them varies from nanosecond to nanosecond. a component that handles electricity has to take power that has attributes within a range of values. eg: a circuit designed to channel 3.3 volts will rarely be at exactly 3.30. it might be 3.31 or 3.43, or even 1.29. Every component has a tolerance range within which it will operate. if the power is out of tolerance, the component may not work right, may work fine, or may damage itself. Circuit pathways are essentially a conductive medium which connect primitive components like transistors, capacitors, resistors, etc, and more complex components like IO buses to RAM, or a ROM, or a daughter board. All of these components work in different ways, with different requirements, tolerances, and risks if those tolerances are not met. 