A framework provides a minimal architecture built for a specific type of application. It minimises assumptions about implementation details beyond the stated goals of the architecture. While a cross-platform game development framework might have the goal of providing "what is common to (nearly) all computer games, irrespective of platform", and might implement only such abstract factors as timing and entity management, the XNA Framework (implicitly) has a goal of providing "what is common to (nearly) all computer games written for execution on the XNA CLR". Given that this focus is so narrow, they have been able to included engine features with impunity. They bundle it all under the heading of "Framework", since this indicates a certain freedom of implementation which you as the game developer will enjoy.
Roughly speaking, a framework should be as unrestrictive as possible while still providing useful foundations. An engine, on the other hand, is typically more focused toward specific features, and in using it, you accept that there are certain limitations which you will be tied to.