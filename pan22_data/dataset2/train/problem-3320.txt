Where -5 is the age of the files you want to delete (5 days or older in this case). This script is deleting .rar files - drop the -m *.rar if you want to delete any file type.
The advantage would be that you always have a relatively simply-processed list of files created on a certain day that you can iterate over, rather than having to ask the filesystem again and again for details.
This is a powershell script I wrote to do what you want - it does a bit more too. I use it to clear down logs and other temporary files.
Delen - DELete ENhanced - is a souped-up version of DEL. It supports extended wildcards and parent directories, as well as date, time and size filters. Files can be excluded from deletion.
If you insist on using batch files, Robocopy.exe is your answer. Its fast (multithreaded) and very robust. For your scenario you can use the following as a guide :
There is a long list of options, please do robocopy /? to see them all. You can even use it to do incremental backups, scheduling, creating backup profiles, etc.
If you have a multithreaded/multiprocess app creating files, then you might want your index handled in a more sophisticated way.
As an alternative approach: instead of relying on querying the filesystem to get file creation times (and hitting the same files over multiple days, until they expire) you could add the file to an index of your own at time of creation. The index could potentially be as simple as a file named after the creation date, stored in a known location, with a file per line.