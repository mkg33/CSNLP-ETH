Your idea is correct, but devil is in the details.If you need reliable, scalable and usable solution this will require a lot of effort.For hobby project, some scripting would suffice.
As a real-world example, I use this function to configure and deploy virtualized LAMP stacks using an unique template image of Ubuntu LTS.
This highly depends on the guest OS and the software installed on it. If the set of software is known in advance, then you can simply create VM templates, and deploy VMs from templates on demand.
Either way, this is not a simple task in a small home environment, though doing some basic templating under libvirt should be easy enough.
Virtual machine self-service enables the Virtual Machine Manager (VMM) administrator to grant users permission to create and operate their own virtual machines within a controlled environment on a limited group of virtual machine hosts. The Virtual Machine Manager administrator configures self-service policies, which determine the scope of the users' actions on their own virtual machines.
OpenNebula supports ESXi (and Hyper-V but it's not so production-ready), and include a Contextualization feature that permits to configure a VM during the first boot using a set of scripts placed on an autogenerated cd-rom ISO.
My idea is that I have a webpage which interfaces to a VM server (either ESX or Hyper-V), I choose what OS I want and what software I'd like installing on the machine. The webpage sends the required requests to  which in turn builds the machine.