Suppose you had a dozen friends helping you. Would you ask one of them to go off and calculate \$2^6\$, the second friend to calculate \$3^6\$, and report the results back to you so that you can check whether 6 is a solution? No, that would be crazy. You would be better off asking the first friend to check whether 6 is a solution, the second friend to check 7, the third friend to try 8, etc.  Then each of them has a chance to do some substantial work independently instead of waiting for each other's results.
Moreover, calculating \$3^k\$ would be a trivial multiplication if you already knew \$3^{k-1}\$. You should be able to avoid calling pow() altogether if you are trying increasing \$k\$.
While what you've written seems like it will work correctly, those functions are far too small to be calling in a thread. They don't do nearly enough work to make it worth your time to put them in a separate thread. The overhead of switching tasks to the other thread will likely far outweigh the amount of time it takes to do the calculation in question.
One small way to improve performance would be to calculate values and reuse them when possible. For example, in the final if statement you use pow(2, k) and floor(pow(1.5, k)) twice. Rather than calculate each twice, you should calculate them once and use the results of the calculations twice.
I would suggest improving your naming a bit. Names like calcTwoK() and calcThreeK() don't really tell reader what they do. I suggest renaming them to powTwoK() or twoToTheK(), as calcTwoK() sounds like it multiplies k by 2.
You are asynchronously calculating intermediate results that are not worth parallelizing. Instead of calculating \$2^k\$ and \$3^k\$ sequentially, you do those calculations in parallel. But then you have to wait for both of them to complete before proceeding. I would expect that the overhead of setting up the async calls would negate any performance benefit.
And in fact, it's odd that you have a function that does nothing but call a single other function. It seems like any call sites could just call the pow(2, k) themselves.