Use version control; a version control system (VCS) is exactly what you described, with the added bonus that it stores a history of every change anyone has made. There are lots of popular version control systems out there:
•GitHub, which if you have a little bit of money is an extremely cheap and easy way to host all your source. This is the version control platform that most people on here have been talking about. Think of it as a Pastebin account that exists on your local hard drive and is updated whenever any of your team members makes changes. Hosted projects are called depositories. There are loads of free Git clients, some of them integrate right into Windows to make keeping your depositories clean and up to date.
The ideas given already are better than this solution but this is very easy to implement with minimal time investment, for a small project with just a couple of people working together it might be sufficient for your needs.
"we just need something where we can check files out edit them and then check them back in and build from the same set of files"
As many have mentioned, you need version control. There is a nice free offering from FogCreek software (you have them to thank for providing stackexchange which makes this site possible). It is called Kiln (built on top of Mercurial) and it integrates with a nice bug/feature/time tracking software product they have built called FogBugz. For a team of 2 developers they provide free versions of these products (and host them for you). I use this setup for my own projects and the paid versions for all the software products I work on for my employer (we have a much larger team of developers, so must use the paid versions). Worth a look for sure.
If you ara using Visual Studio, the best option is Team Foundation, is from Microsoft and is the best Version Control that I know, the negative thing is that you need a server, sql server, and the team foundation server to run in the server (the client is already with visual studio), if you have the chance, try it.
Having worked for a large global organisation I can honestly say the amount of time lost due to red-tape surrounding their version control software (MKS) is a real pain!
•Occasional use of DropBox if one of us needs a specific asset or script...this is however rare and we prefer to work through GitHub.
Lots of good suggestions already but if you want to go for a low-tech and simple solution, this works for me when I collaborate:
I don't use Visual Studio personally, but I am completely certain that Visual Studio has support for all of these version control systems.