If you can connect to PostgreSQL from the original machine you can see what port it's listening on:
At a guess I'd say listen_addresses will be localhost, so it's not accepting TCP/IP connections from outside network interfaces.
Another possibility is a network firewall on the database host that's not letting you connect. tcptraceroute to the port from the remote host, see what the result is.
First, it's not at all certain that it's freeciv that's listening on 5555. Nmap uses a file called nmap-services that lists the common application for each port (if the port is registered with IANA, it will usually be whatever application was registered for that port). But it's quite possible to use another port for any service, as you've noticed...
If you run nmap with the option -sV, it will actually talk to the port and try different protocol to see which one matches. That will of course take a bit longer than running it with sT, and may trigger intrusion detection alarms if any are in place.
In this particular case, I'd lay a bet that it's port 5555 that is being used - because it's unlikely that a database server to be running freeciv, and it's common for humans to use a portnumer like 5555, 3333, 6666 etc. So if I were you, I'd start by doing pgsql -p 5555 and if that doesn't work, do nmap -sV to find out which of the other ports it is.
(Of course, at its root this isn't a technical problem but a social one. Your DB admin should tell you what port to use; if they don't, your boss should make them do so. But I, too, have been in places where nmap is both faster and more reliable...)