I would suggest that you would still want the relationships listed in your junction table, so that your data model is consistent. Also otherwise you end up having to UNION two results together all the time (one side for the "all"s and one side for the "some-or-none"s) or having filtering clauses of the form property1 = value OR property2 IN (<set>) - both of which can cause efficiency issues depending on the query planner of the engine you are using.
To enforce that P3 relates to all new entries in WebSites without needing to do that everywhere in your business logic that might add sites, you could perhaps define a trigger on that table which checks for Partner entries that are set as global and adds the relationship rows as needed. You need to take care with triggers as they can be quite inefficient (though for most database entities a performance hit on writing is worth a boost when reading, as read operations are far more numerous and concurrent). The other thing to be wary of with triggers is that magic actions behind the developer's back can make debugging more difficult, but if you make sure all is well documented and understood by your team that need not be an issue.
Don't try to shortcut the insertion of data into your tables at the expense of making data retrieval faster.  As a rule of thumb, data is read many more times than it is written.  That means you should keep your data and your code as simple as possible for reading and if you need a bit of extra code for inserts (or updates or deletes) then that's where you should prefer to have it.
This doesn't necessarily mean that you don't want to have a flag on PARTNERS that indicates that new websites should be linked automatically.  Here's why:
One question you need to ask yourself is what happens when you add new entries at either end of your many-to-many relationship.  You can think of your intersection table as being a snapshot of the current state of relationships between existing partners and websites.  
Could it not be the case that one partner happens to (coincidentally) be related to all current websites, but that a new website would not be related automatically?  If this is conceivable then you need to distinguish between who's related to who right now and what happens when a new entry is added?  You can't necessarily infer one from the other.
Having a "goes with everyone" flag will tell you that when you insert a website, that it needs to relate to the flagged partners automatically.  It also tells you that if you insert a new partner with this flag on, you need to insert a relationship record for each existing website to go with the new partner! - So it goes both ways.
You should therefore consider fully populating your PARTNERS_WEBSITES table and at the same time, consider adding a PARTNERS.IS_RELATED_TO_ALL flag that tells you how to handle inserting both new websites and new partners.