I like the Redis solution by @tobyd for some situations.  The other option, which is not specific in anyway to Python, would be to structure your script (Python in your case - could be bash, Perl, Ruby) so that it communicates with PHP via STDIN and STDOUT.  You can call your script from PHP using exec() and store the results in a PHP variable:
In the example $arg1 and arg2 are variables in PHP that you want to go into your Python, and $python_return stores what you get back.  The return will be a string, so you may or may not need to do some processing on it to convert type on the PHP side.  The Python, in this case, has to be set-up to take command line arguments via STDIN and to write the result that you want back to its STDOUT.
I need 14 variables globally whose value can be manipulated by both php and python program.
The python program just wants to read the value of the variable. The PHP program should write the value of the variable depending upon the button pressed in the web server page.
How do i create that variable and use it in raspberry pi with Raspbian OS?