The answer is an unequivocal yes. Quantum computers would definitely still be useful.
Quantum computers are not oracles for BQP, but rather devices which process quantum states, and can communicate using quantum states. Just as the ability to make non-deterministic queries is fundamentally more powerful than the ability to make purely deterministic queries, independent of the status of P vs NP (and indeed this is the root of the oracle separations), the ability to make quantum queries and to communicate using quantum states is fundamentally more powerful than the purely classical counterpart.
This leads to advantages in a wide range of applications
Aside from the complexity arguments, there is another practical reason to want quantum computers. Much of the data processed on classical computers these days is derived from sensing the natural world (for example via the CCD in a digital camera). However, such measurements necessarily throw away some information about the system in order to render the measurement result as a classical bit string (for example collapsing spatial superpositions of photons), and it is not always clear which information will later be considered the most important when initially recording the data. It is, therefore, reasonable to believe that the ability to store and process quantum states directly, rather than collapsing them in some basis prior to processing will become increasingly desirable.
Suppose that P = NP is true.  Would there then be any practical application to building a quantum computer such as solving certain problems faster, or would any such improvement be irrelevant based on the fact that P = NP is true?  How would you characterize the improvement in efficiency that would come about if a quantum computer could be built in a world where P = NP, as opposed to a world in which P != NP?
Here's a made-up example of about what I'm looking for:
(Motivation:  I am curious about this, and relatively new to quantum computing; please migrate this question if it is insufficiently advanced.)