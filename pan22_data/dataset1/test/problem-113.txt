As an instructor, this is certainly a sticky problem.  There are two questions at play here: 
There is an understandable impulse to work only on the first question.  After all, what is the purpose of education if not to help the students progress as fast and far as they can?  However, the two questions are not really in opposition.  The first goal would be hobbled if the second question were not properly answered.  For one thing, I can provide special resources (time, extra practice, reading materials, recommended tutors, etc.) to a student who is having trouble.  For another, in assessing my students, I also discover where I need to improve as an instructor.  Making these self-improvements is how I obtain long-term gains for future students.  Thus, cutting out the second question would hurt students, both in the short- and long-run.
If you look in a grade book at the end of a semester, you will usually have anywhere from 4 to 10 touch points, and even these cannot always be assessed in great depth.  These are paltry number, and it is already hard to characterize what students know from such assessments.  This is even more pronounced when we allow for group projects and free interaction!  We certainly help students learn by doing so, but we lose out on almost any form of assessment.  
Separating everything out isn't necessarily better for the students, either, as this means increasing the number of grade book items, and increasing the stress and workload of the students (not to mention the faculty!) considerably.  Thus, instructors often want these grade book items to pull double-duty, and attempt to answer both questions at once.
For myself, I have nevertheless decided to sequester my labs purely for learning.  My tests are now how I assess that learning.  This has allowed me to open the flood-gates to paired programming, full use of SO and other resources, and nearly unhindered access to peer and instructor help.  
But it also means that there is more work for the students.  I must now include nearly twice as many grade book items, and the sorts of labs that optimize learning are rich and deep, and these involve more time and investment from everyone.  As a professional who believes in limiting stress for my students and aspires to reduce homework whenever I can, I find that this course structure severely limits my ability to do so.  And, of course, all of this extra work is also taxing on me.
I don't have any cut and dried answers here because I don't think that there are any.  There are competing goals, all of them important, and any approach the instructor takes will ultimately be the result of a push-and-pull between these interests.  I have decided to heavily utilize collaboration as a learning tool, (and standards-based assessments with nearly unlimited retesting to help ensure student learning), but these techniques comes with real costs to everyone involved.
I think that, when code is shared, one of the central questions is: After it has been seen, does the student understand what they have seen and will they be able to use this knowledge independently in the future. That is: Did they actually learn something?
There certainly is a population of students for whom this works. None of this is really about them.
There is also a population of students which seem to fool themselves that they are learning this way. I hesitate to psychoanalyze them too deeply, but they seem to have a very narrow per-assignment focus; just scraping by. If you let them, they will cobble together their assignments solely using social connections with negligible (or negative) value added. 
Code sharing restrictions are the least bad method (that I have seen to date) of preventing students from joining this second population. 