Unix filesystems store filenames as raw sequence of bytes. The kernel doesn't know or cares about what the names really are.
It is up to the applications accessing them to use the proper encoding to display non ASCII characters properly. The usual way is through the LC_ALL/LC_* or LANG environment variables. I would recommend to use an UTF-8 locale on all applications accessing the file system to avoid incompatibilities/inconsistencies.
On our CMS that went through many versions and hosting platforms, we just came across an accented image file that would not work from it's url. So I ssh'd onto the box and tried to rename it. 
However, I could not figure out how to type in it's name correctly. For instance, I know that if a file is called my file.txt you would do something like mv my\ file.txt my_new_file.txt but how do you move a file called caf√©.txt? 
In the end, I used a wildcard and did mv caf*.txt cafe.txt but I'm still wondering why this accented image would not work in the first place, and what would have been the proper way to handle it on unix.