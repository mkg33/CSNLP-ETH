Long-lived protocols are those for which the connection is intended to remain open indefinitely. (An example of such a protocol is ssh. While an ssh connection can be short, it is meant to be able to idle forever, thus the protocol is long-lived.)
Short-lived protocols are more transactional in nature; a particular action occurs, or series of actions, and then the connection is closed.
By these definitions HTTP is a short-lived protocol, even with keep-alive.
The fact that an HTTP connection may remain open for minutes or hours while data is being transferred is irrelevant.
And Keep-Alive is a performance optimization meant to allow a client to make multiple requests of the server over a short period of time. Servers must drop an idle Keep-Alive connection after some time, because they have only a limited amount of resources for holding open ports, and the client doesn't need it to remain open anyway.
Because HTTP cannot remain open and idle forever, and is not designed to do so, it is a short-lived protocol.
First of all, fire and forget does not mean what you think it means. I highly recommend that you read more about this as it doesn't seem to be on-topic of the question.
On-topic: Yes, keep-alive does permit sending multiple messages within the same TCP connection but usually you shall not assume that a session stays open as long as you want it or need it, due to multiple reasons: