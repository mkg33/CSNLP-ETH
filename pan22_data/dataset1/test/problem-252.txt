memcache protocol defines stat command using which you can get all of that info. Whichever API you're using, it should have binding for this command.
You made this a tad harder than it needed to be -- the use of a custom resourceType is not necessary for objects that are scalar, i.e. that appear just one time per node.  If you drop the resourceType, you'll just need to migrate the last digit of each <mibObj>'s "oid" attribute into its "instance" attribute, and change the "ifType" attribute of your <group> from "all" to "ignore".
You're definitely going to need to treat some of these stats as counters (monotonically increasing values, such that the delta between two samples is what really matters) by specifying "counter" instead of "integer" (or "gauge", which is equivalent but clearer) for their type.  A good mnemonic for remembering what's a gauge and what's a counter is that a gauge represents e.g. the number of people in a room right now, whereas a counter represents e.g. the number of people who have ever passed through a turnstile to enter a room.  So  "curr_items" should be a gauge and "total_items" should be a counter.  Others need changing too, but that should be enough to get you going.  You'll need to restart and delete any RRD files that were created with the wrong type; OpenNMS will automatically recreate the files.
Finally, you could have done this using theHTTP Collector as well, but then you wouldn't have experienced the joys of working with SNMP ;)
One very last thing -- it's generally preferable to document these kinds of "recipes" on the opennms.org wiki rather than on external sites like ServerFault.  That's because years from now the XML schema for SNMP data collection may change, and it's nice to be able to update the instructions accordingly without having to create accounts on a million sites or track down e-mail addresses for a million authors.