What's happening here is the subquery is looking at each individual salary and essentially ranking them, then comparing those salaries to the outer salary (a separate query against the same table). So in this case if you said N = 4 it is saying:
So looking at the data you have, let's rank them in order, and compare.
So when n = 4, the row that will be returned is EmpID 3 (54000).
A much more intuitive way to write this query, in my opinion, is to use windowing functions like RANK(), ROW_NUMBER() or DENSE_RANK() (depending on whether or not you want ties). Let's take a look at how these different functions work against your data (and I've added an 8th row to represent a tie for 4th place):
I don't think you'd want to use RANK() for this specific problem, because of the way it works there is no 5th place, for example. So now it comes down to whether you want to include multiple rows in the case of a tie, and if not, if you want an arbitrary row or a specific row based on some criteria. So adjusting the statement slightly: 
I have found a query to find the nth highest salary from Employee table , but i don't understand the logic of (N-1)?
If N= 4, then how does the query work? I'm a complete beginner in SQL, please help!