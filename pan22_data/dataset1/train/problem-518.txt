apt-file should work for that. I havenâ€™t tested that 
There is no general way of finding packages that use a given file. You can combine dpkg -S or dlocate to find what package contains a file, with apt-rdepends to find what packages depend on that package. But that won't cover all cases, and it won't tell you which files each package depends on (not that this is really meaningful: dependencies apply to packages as a whole, and often they can't be pinpointed to a particular file in the depended-upon package).
One case you won't be able to find through dependencies is dependencies on essential packages (those for which the metadata includes Essential: yes). Every system must have the complete collection of essential packages, or if you like every package is assumed to depend on every essential package. Case in point: kvm.ko is a kernel module, belonging to the kernel package, which is essential.
Another case you can't always find through dependencies is plug-ins. Many programs will load whatever plug-ins they find installed, and will run even if the plug-in is not there, so the program usually declares no dependency on the plug-in. (The plug-in may declare a dependency on some kind of plug-in framework that the package providing the main program executable depends on, but that's not always the case.) Case in point: the kvm kernel module is an optional component of the kvm virtual machine; you can run /usr/bin/kvm even if the kvm kernel module is not loaded, it'll just be slower.
Here the message from VirtualBox is so generic and playing-it-safe that it's misleading. The message assumes that the KVM extension is compiled into the kernel, but on your system it's really a module that can be unloaded. Merely unloading the module is enough to satisfy VirtualBox: just run rmmod kvm_amd kvm_intel kvm. You can also keep the qemu-kvm package from loading the kvm module by editing /etc/init.d/qemu-kvm or /etc/init/qemu-kvm.conf (depending whether your Ubuntu release has a SysVinit script or an Upstart script) and commenting out the module-loading line, or preventing the service from starting at boot time.