I am learning about the class and methods in Python.
The class Accuracy is a class of several (13 in total) statistic values between a reference polygon and one or more segmented polygons based on shapely module.
where ref.intersection(s).area is the area of intersection between reference and segmented polygon-i
my class design (really basic and probably to improve) is:
I would approach this class the same way that unutbu did, by just storing the polygons as attributes of the class, and using properties and methods for the analysis. I think the only thing I'd do differently would be to implement this as a subclass of Polygon, so any given instance could compare itself to any other polygon on demand. I'm not going to sketch out the details, but I would want it to work like this:
As its own class, I personally would use a different name. 'Accuracy' is an aspect of what you want to learn from the object, but not really representative of what the object is. I would call this class something like PolygonComparison, or something as descriptive but ideally more concise. I don't know if this Officially Pythonic or not, but I think of classes as nouns and functions/methods as verbs, and usually name them that way.
You have a few minor inconsistencies in your style, mainly by sometimes including spaces where you shouldn't or vice versa. These are generally things that won't affect how your code runs, but more how readable, understandable, and debuggable it is. For example,
Then it's much easier to see at a glance that the method has three parameters, two of which have defaults. I'd suggest taking a look at PEP 8, the Python style guide.
Finally, note that you have some redundancy in your __init__ method: