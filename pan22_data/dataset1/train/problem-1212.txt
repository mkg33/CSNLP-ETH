Your class does not implement any of Java collection interfaces. the solution is meant to be an implementation of a linked list that can be used as drop-in replacement for any java list/collection (and also queue). if you look at the LinkedList from the jdk, you will see just what functionality you are missing. (for example, iterator, subList)
now I see that the class does not even implement the most basic contract from Object (namely, equals() and hashCode()) so you cannot safely compare two lists or put one in hash map....
With regard to the academic solution, perhaps they were referring to things like you would see in an assignment such as line lengths, appropriate naming and use of visibility modifiers, no compilation errors, etc.
There were a few improvements you could make to the unit tests as well. While it looks like the code coverage is 90%, there are lots of edge cases and subtleties that aren't clear and the unit tests tell as much about what you can do with a class as what you can't do with it.
If you are using jUnit 5 the public is not required for each method. It was excluded for the class but not the tests.
You didn't use the <> operator on any of the instantiations of the CustomDoubleLinkedList.
public void addedToAndRemovedFromListReturnsTrueOnIsEmpty() {
While you have said you were asked not to implement Java Collections, the Deque interface getFirst() method says you should throw a no such element exception if the deque is empty. This test throws a null pointer instead