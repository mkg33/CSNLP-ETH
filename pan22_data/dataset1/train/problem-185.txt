As the GPG documentation states, --list-keys shows only the public keys, not the private ones. Signing is done with a private key, not a public one (you use public keys for encryption and signature verification; private ones for decryption and signing). I'm pretty sure you just copied over the public keys without copying the private ones, so now you have the public part of the key that you want to use for signing but you can't sign without the private key.
Run gpg -K (capital K, equivalent to --list-secret-keys) on the server where sign+encrypt works, and you'll see the private keys. There's probably only one, and if there's only one then it's automatically the default; if there's more than one you'll see a little mark next to one of them to show which is default. To export the private key, use gpg --export-secret-keys (you'll probably want to specify an output file an optionally ASCII-armoring). The exported key can be imported the same as a GPG public key (using --import). Make sure you have the private key's password, and don't ever leave the key anywhere somebody else could access it, of course.
I have multiple windows servers in my production. Only one of them is active at a time. The encryption command worked perfectly on one server, but has failing on another with the following message:
I compared the list of keys in both the machines through gpg --list-keys
I found one key which looked the key used for signing missing in the second server. So I have added it. It still fails with the same error. 
Question 1: What command can I use to view the default key used by gpg? 
I could only find the command to set the default key, but nothing to view the existing default key. 
Question 2: Setting the -v command (verbose) didn't print anything more in the logs. Is there something else that needs to be done?