You should do a bounds check as you mentioned then reduce the velocity so you don't get shaky behavior. You kind of got it but I'm not sure what displacement does.
Velocity can be handled however you like but the above code should ensure that the runner stays between -50 and 50 inclusive and doesn't shake when it hits a bound.
I am developing a kind of vertical endless running game, where the character has 4 possible lanes to be in. I am using libGDX and want the character to change lanes by adding a horizontal velocity to a Vector2. The position will be upgraded by velocity increments and not by simply changing the position to the next lane. So far I have a working function, but as I increment the horizontal velocity, along the run, it loses accuracy. Let's assume each lane is 50px width. 
I am also using a acceleration vector to slow down as the character gets closer to the next lane.
The 2 functions below are about what happens when the screen is touched right or left.
The position verification is a boundary condition to avoid the character going off the screen.
The function below is called about 60 times per second, as delta is a very small number and represents time.
I am looking for smarter options as I am not pleased with my own. Help would be appreciated!