This avoids the need to store potentially lengthy strings multiple times across every order they are used in.
Additionally if the product name is ever updated you only need to do this in one place.
It is also more flexible as it allows you to have multiple different products (perhaps over time) with the same product name.
It is trivial to join from Products to Orders to retrieve the name in the times that you do need it. You could even create a view that encapsulates this.
As usual, it depends. Let's first consider what a key is, it is something that uniquely identifies something in your business. Even if you choose to use a surrogate key for some reason you should still identify and implement the natural candidate key's.
Quite often there is a conflict between these properties and some kind of compromise has to be made. A natural key - such as name in your case - may not be stable enough and therefor is a bad choice for a key. A surrogate key on the other hand is not familiar to the user. 
To conclude, there is no easy answer to your question, it depends on the situation. Design your keys, and make the best out of it. I would not recommend blindly choosing one approach over the other.