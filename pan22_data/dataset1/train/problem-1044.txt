I am creating a p2p video chat app using the libjingle/WebRTC code. I would like to collect a copy of these video conversations on our server for users to watch later - but I don't want to suck up too much of the user's bandwidth. Is multicast appropriate for this? I would like the client to be sending one copy of each video packet. At whatever network link is appropriate the packet should be copied and delivered both to the peer and to the server.
From reading about IP Multicast, it seems the packet should have a multicast address as the destination and both receivers subscribe to the multicast address. I can't see how this would work on anything but a LAN.
Perhaps I am approaching this problem from the wrong angle? I don't know if multicast is appropriate.
For multicast to work outside LAN, you need multicast routing, which is slightly tricky to setup, and not all ISPs support multicasting. So, if your application is targeting Internet, then using multicast is bad idea. Maybe try sending video streams through your server, that way you might be able to bypass NAT, though at the expense of added latency.