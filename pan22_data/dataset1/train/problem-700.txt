I am working with a legacy application that has about ten years of customer data. A majority of this data is not used in day-to-day operations but there is a business requirement to have the data available for the customer until his retirement from the system.
We are exploring archiving the data to a copy of the existing database and then purging the records from production past a certain point in time. 
My concern is that the database undergoes a substantial schema change every quarter due to development efforts. 
If I were to archive a mirror copy of the data, would I also need to apply every single change script that goes against production?
Are there any alternative strategies? It seems like no matter what form of storage you choose (i.e. database, flat files, xml), you will always need some way of mapping older schemas to newer ones.
You need to define your requirements more specifically before even thinking about a solution:
Now having said all that, one thing I would advise you, having done it here (SQL Server), is this: avoid multiple databases if at all possible, particularly if you require the ability to edit historical data.
While I certainly don't recommend multiple databases, it is a possible solution depending on your requirements.