It ought to work, as it's a common enough trick.  For example, the monitoring tool munin has a node configurator (munin-node-configure) that tells you what plugins you can run, and then takes a --shell flag that makes it spit out a bunch of ln -s commands to link in the plugins, when piped directly to bash.
There was even once a tool for configuring something - it was over 15 years ago, I can't remember what - where you'd become root and get the config done by opening a telnet session to an autoconfigurator and send the output straight to bash, with
I can't imagine doing anything like that these days.
Another technique you can use instead of piping to a bash subprocess is the eval shell built-in for cases where you need the generated shell code to rely on something in your current shell's environment, or you want the output of your program to include actions like setting environment variables in the current shell process.
You might want to keep the changed PATH environment variable in your current session, so you'd use eval. For example:
This is similar to how programs like ssh-agent are usually called in .xsession or .profile configuration files.