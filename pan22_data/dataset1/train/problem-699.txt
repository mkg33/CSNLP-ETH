A car can get across the country faster than a truck. But if you need to get two tons of pumpkins from New York to Los Angeles, a truck is going to get the job done a lot faster than a car. Why? Because the truck, though slower, carries more and thus needs fewer trips.
There's a lot of things to consider. The important ones are:
The MTU of a particular medium dictates the size of the largest packet that can be sent down it. Across the Internet this is typically 1500 bytes though this may vary if other technologies such as PPPoA are involved. If data larger than the MTU needs to be sent, the data will be fragmented into multiple packets - this takes time.
Everything you transmit has an overhead - typically meta data that describes what you're sending. Sending larger volumes of data at a time reduces this overhead and thus the required network bandwidth.
Depending on the protocols you are using, you may detect and compensate for lost packets. If larger volumes of data are sent at a time there is more to resend on failure. In the same vein, if smaller volumes of data are sent then there is an increased likelyhood of failure.
There may be a requirement of the client applications to get data quickly or in bulk. For example, video streaming requires a small amount of data as quickly as possible for the video to start playing. Messaging systems such as IRC can't display the message until it has been fully received. As such, video streaming suits smaller packets and messaging may suit larger packets.
The protocol you're using dictates the size of data to send. For example, with TCP, if you had a small window size you would have more overhead for acknowledgements. If you had a large window size, you suffer the issue with failure re-sends mentioned above.