Moving on from Quanta's comment, I bit the bullet and implemented my framework as a CLI call instead of HTTP. Easier than expected as I only had to change my 'httpvariables' class to accept command line arguments as well as HTTP. Now, no MySQL problems! There must be something hanging onto the MySQL session when using WGET. I read a lot of places and there wasn't any information to suggest that this should be an issue, and some places suggested that WGET was actually a quicker way to call a PHP script from a CRON schedule. 
I solved the initial problem with wget by also setting -tries=1 rather than 0, as I assume that the server response was too slow so wget was querying it again, and again, effectively DOSing my server, with my server. This allowed the server to recover itself, but it wasn't acceptable to have that slowing things down for any page requests.
Thanks for the replies, made me think about a few alternatives!
I mean hard to understand how wget related to mysql...
May be you ask you script by wget on the same server? and this script kill CPU. Just an idea.