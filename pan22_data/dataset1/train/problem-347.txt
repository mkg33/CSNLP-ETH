That refers to any NICs waiting to send a frame, especially those involved in a collision.
The NIC is at OSI layer-1. OSI layer-2 for ethernet is the MAC layer. Layer-3 would be IP. Layer-4 is the transport protocol, e.g. TCP or UDP. Above layer-4 are the application layers (off-topic here). An application will start sending data to the transport layer, that then sends through the network layer to the MAC layer that gives it to the NIC.
That makes sure that the back-off time is never less than the slot time, and it is quick and easy to calculate.
That makes sure that all stations have heard the jamming signal, and no station will transmit while the jamming signal is still traversing the link. A host immediately next to the host doing the jamming will hear the signal before other hosts on the link, and it will stop hearing the jamming signal while it is still traversing the link.
Jamming when it is no longer needed will slow collision recovery, and therefore, unnecessarily reduce throughput on the link.
What is the waiting NIC referring to? Is it the NIC mentioned in the previous sentence or another NIC which was involved in the collision?
The NIC is "requested to send" by the upper OSI layer (in other words, by the node that it is attached to) ?
Why is the exponential back-off algorithm using multiples of the slot time?
I understand that the slot time is computed such that a node is still transmitting when the signal announcing the collision (jamming signal) arrives at it. But what does this have to do with how much time nodes should wait after a collision occurs?
I will answer only the following question, as it was, for me, the most important:
I thought of this situation: nodes A and B are on opposite ends of the network. They send a message at the same time, and the collision occurs very close to B. Now, B notices the collision and starts its own exponential back-off algorithm sequence. Let's assume that this results in node B backing off. Now, the question is, how long does B need to wait?
To answer the question, consider the same event, but from A's perspective. When the jamming signal reaches A, B has been waiting for half a slot time already. Let's assume that the exponential back-off algorithm sequence, run at node A, results in A not waiting at all. Therefore, A re-sends its original message as soon as the jamming signal reaches it. So, when the re-sent message reaches node B, B has been waiting for an entire slot time. If B decided to wait less than the slot time, a new collision would have occurred, even if the exponential back-off algorithm yielded different results for the two nodes, A and B. 