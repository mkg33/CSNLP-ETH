What you have there is equivalent to =SUM(A:A) - which runs much faster as a native Excel function. Always use Native Excel in Excel itself before resorting to VBA.
As a general note: if you are going to do something bespoke - convert the range to an array and work with the array. This has a significant performance improvement for a number of reasons which have been explained many times on this site. The key ones are that you are not switching between the Excel model and the VBA model each loop and that you can work with data types instead of objects.
Using the Intersect method to trim off cells not in the Worksheet's UsedRange will greatly improve performance.
For maximum performance you should trim the target range and then load the values into an array.
It is a best practice Option Explicit to the top of the code module to ensure that you declare all your variables.   This will help the compiler catch syntax and datatype errors.
Avoid using underscores in you method names as the VBA uses them to indicate events.