If done right, all you need to do is update the master DNS server, and have the rest as slaves, which will either poll the master or be informed by the master of a pending update.  Once you have automatic updates set up, you can have as many slaves as meet your availability needs and then they'll keep up to date, provided the master itself is reachable.
Host the DNS on one of your servers, and have any number of other servers pull from it.  ISC, the creators of BIND, even offer commercial hosting.  I'm not certain of the terms, but you can find more info on their web site.
The nice thing about hosting the DNS locally is that you are in no way trapped by any provider -- if they hurt you, you can just move to another.  It will require work to move, but it's just a few hours of web-facing work, and won't affect your customers at all.  It is hard to get your zone data out of a fancy editing tool on some registry sometimes.
However, unless you are DNS experts, I don't recommend serving your own DNS.  It's not as trivial as some people think to do this on your own.  There are all kinds of interesting things to learn before attempting it, and it's not like HTTP hosting.
What you want are geographical diverse, stable, and able-to-run-if-part-crashes providers.  That is, an earthquake in California should not take out their entire service.  They should have multiple "time zone" presence, and if possible, multiple continent presence.