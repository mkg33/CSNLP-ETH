It's a security problem.  You can never go wrong if you follow the Principle of Least Privileged.  In other words, if an authenticating principal doesn't need a particular permission, then don't give it to them.  Do you give out information regarding the type of locks on your door to other people that don't need to know that about your house?  I would hope not.  They probably wouldn't do anything, but it's still not prudent.
If we based data principles off of luck and generosity, we'd be in bigger trouble quite a bit more often.  Security is an aspect where you should only grant when you can defend why you granted.  You're simply giving somebody more information than they need to know.  Don't do it.  Server state is still sensitive.
As an administrator you would view this information as being in your domain (performance / index usage / etc) but there are potentially compelling reasons that a development organization would want this information for a large legacy system they support- identifying zombie tables that are only touched by maintenance processes for example.
In the end it always ends up being an issue of "luck and generosity" since the call on whether any particular request is justified ends up being a soft choice and not a crisp formula. The use of best practice patterns without looking at context is itself a pretty nasty anti-pattern and reality is that many approach their positions with "talk to the hand" as a starting point.