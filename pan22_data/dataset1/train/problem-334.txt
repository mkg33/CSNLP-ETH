Tools like update-ca-certificates ensure that the certificate is linked to by a symbolic link that matches the hash value of the certificate.  When deploying certificates using cfengine, I include a step to add the symbolic link after the certificate is copied.  I found this simpler to define than running a program when the certificate was installed. 
Java uses a cacerts file located within the installation directory.  You will need to either install a new cacerts file or import the certificate into the cacerts file.  Alternatively, you may be able to install a jssecacerts file next to the existing cacerts file.  With either file, you need to ensure the file contains all the certificates you want to trust. This may be a sub-set of the default set.  The simplest and most stable option would be to install the file in the default Java version.  The certificates in cacerts are periodically updated as various certificate authorities update their public trust certificates, so you will need to maintain this file over time.
Depending on which browser you are using you may need to install the certificate as a trusted certificate into the browser's keystore which may not be either of the stores already discussed.  
After creating a new certificate authority, manually importing the CA chain to a browser, and verifying that browsers can trust new certs signed with the intermediary, we copied the CA cert chain (pem and crt formatted) to our Ubuntu servers under the following directories:
Once this was done however, applications on the Ubuntu machines such as wget/curl/java still do not trust connections that use the new certs. According to another post, we need to run dpkg-reconfigure -f noninteractive ca-certificates or update-ca-certificates on each machine that has the cert. Not only have these commands not worked, it would be impractical to run them against thousands of servers. We use CFEngine for configuration management, but it does not seem to have a facility for this sort of thing as far as I can tell.
Is there a way to script Ubuntu to non-interactively update the trusted CA certs in a manner that could work against thousands of machines?