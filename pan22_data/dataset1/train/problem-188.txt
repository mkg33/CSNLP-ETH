I have Instant File Initialization enabled on our SQL Server, so the 'empty' part of the database file is not zeroed before being allocated.  My understanding is that this means that the file could contain 'deleted' data.
So now I want to send a copy of a database (probably a backup file) outside of the company.  But there's all that potentially sensitive 'deleted' data sitting around inside the file.  Now I would like to zero the unused portion of the file.
Is that possible?  I imagine I could create a new database and copy everything over, or perhaps restore a copy of the database to another server without Instant File Initialization enabled and then be aggressive with a ShrinkFile command to remove most or all of the unused portion of the database file, but is there a less manual and time consuming method?  Ideally a command to tell SQL to zero the file as it would have done if Instant File Initialization was not enabled.
Have you considered restoring a copy of it, enabling TDE which will force it to 0 out, then disabling TDE again?  I haven't tested this but I think it'll work, we'll have to test it out though.
Something else too, have you considered restoring a copy of it with IFI disabled, creating a new filegroup with new files, presizing it, rebuilding the clustered and other indexes on the new filegroup, then dropping the existing filegroup (If it is the primary filegroup you'll have to shrink it since you can't drop primary)