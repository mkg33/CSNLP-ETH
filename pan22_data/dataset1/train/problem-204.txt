If you can afford significant downtime, you could create a new table with the new PK and populate it in batches.  Insert a million records, delete these from the old table, repeat until all records have been moved.  Then drop the old table and rename the new.
This should require a modest amount of temporary space, but it may take a while.  The old table would have to be offline during the process.  Be sure you move records in the order they'll appear in the new PK.
If you're not familiar with looping and batching in SQL, I can sketch out sample code.
Note that it would probably be faster to populate the new table without a clustered key and then add the PK, but this would probably also require more temp space.
The clustered index "is" the table.  Rebuilding the index will require enough space to duplicate each existing non-deleted row, page-by-page.  Since you don't have Enterprise Edition, you do not have the luxury of rebuilding the index online.  This means the table will not be accessible during the rebuild operation.  
You'd likely be better off rebuilding by creating a duplicate empty table on a different drive that has plenty of free space with room for foreseeable growth, moving data row-by-row in key order, then renaming the old and new tables.  For instance if the original table is Table1 and the new copy is Table2, rename Table1 as Table1-old then rename Table2 as Table1.