I've actually written an article for this for the SU blog in the past
I guess what you're really asking is what interface it uses and what advantages it may have.
Firstly a lot of keyboards do both PS/2 and USB with a simple, passive converter, so your keyboard may be both. The internal circuitry is roughly the same so there's little difference - keyboards have negligible latency compatred to human reaction times. There's no real practical advantage to USB 2.0 or 3.0 for most HID applications so this shouldn't matter.
Practically speaking the big advantage that PS/2 keyboards are supposed to have over USB keyboards is something called NKRO - the ability to press more than a certain number of keys at once. Unless you're already having issues with it , this may not be an issue. 
The choice of switch type on the other hand may make some difference - I prefer mechanical keyboards, but a good scissor switch type keyboard might be a lot better than a standard membrane switch keyboard. 
So... no, using PS/2 or USB shouldn't make a difference. Getting a keyboard you're comfortable with and fits well does.
Based on the comment to the original question, I will answer a slightly different question, regarding responsiveness and latency.
USB version is not going to make a squat difference for keyboard responsiveness. The data packets are so small that the difference is negligible. What might make a small difference is the poll rate for HID devices. In USB, devices can't end an interrupt to the host. Instead, the hot must periodically poll the device for changes, which can be done up to 1000 Hz. (That is, 1000 times per second.)
By default in Windows, the poll rate is 125 Hz, which means this stage will potentially introduce 8 milliseconds in the input->output latency chain. 125 Hz means that the USB keyboard is polled slightly more often than two times per frame, at a screen refresh of 60 Hz. (The 60 Hz screen refresh will introduce up to 16.7 ms latency, which is the time it takes for on frame to be transferred.) This was deemed satisfactory for general use. In the worst case scenario, this 8 ms latency will cause you to miss the rendering of one frame, causing a cumulative latency 8+16.7+x ms, or 24.7+x ms, where x is all other latency in the chain, like the time it takes for the game to process and render the frame, and the latency introduced by some monitors because they're buffering the . (This is likely to be the dominant time term.)
If you still want to optimize this latency, you can use the hidusbf utility, linked below. However, be aware that it's a bit fiddly to set up, especially on 64-bit operating systems.
http://www.ngohq.com/news/15043-how-to-increase-usb-sample-rate-in-windows-vista-7-a.html