I woke up this morning to corruption in one of my databases.  I have a job that runs daily DBCC CHECKDB's for all databases on a server.  The output indicated corruption in only ONE table (fortunately).
I'm always looking for the last line so I can figure out the minimum level of recovery involved.  In this case, it says "repair_allow_data_loss is the minimum repair level for the errors found by DBCC CHECKDB".
I looked at the Object ID and verified OBJECT_NAME(1946163866) indeed pointed to my ONE table.  The error report showed problems with index ID's 10 and 11.  I then selected from sys.indexes for object_id=1946163866 and found the index rows for indexes 10 and 11 - both of these indexes are non-clustered.  I dropped and recreated both non-clustered indexes and re-ran my DBCC CHECKDB - no errors were reported.
I'm puzzled by the minimum level of recovery reported by the DBCC CHECKDB as being repair_allow_data_loss.  Shouldn't this be rebuild?
Yup - there are some errors where CHECKDB picks REPAIR_ALLOW_DATA_LOSS even though it's a nonclustered index. You should be able to manually rebuild these (begin tran, disable, rebuild, commit tran). My guess is a lost write, stale read, or possibly a new bug in 2016.