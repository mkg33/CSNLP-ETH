I am going to look at the code that you have and see if I can simplify a little bit of it
why do you need to have a decimal representation of the value in array[c]?  I assume that you are trying to convert the string representation to a number before you try to perform calculations on it, but you don't need a float for multiplication because you should be dealing with whole numbers the entire time.
that looks much simpler than what you had, I do not know the performance impact of using parseInt over multiplying into a float, but I would assume that you would take a hit in memory allocation.
Your for loop looks odd to me, it resembles a for each loop but you use the variable c as an index to the array and not a value from the array.  I have been looking into this, and found that for each ... in is deprecated
I would go further into this, but I have found the documentation on for ... in on MDN and it now makes sense to me.
for future thought, I don't know if for ... of works on Euler problems or if for ... in is still accepted, there is also another way that you could loop through an Array, but I don't know if it will be accepted by Euler either, it's called Array.prototype.forEach()
Well, your solution is a so-called "naive" one.  Here's why:
You are multiplying sequences of numbers containing zeros - which are obviously not going to win in this competition. It is also possible to make the loop somewhat shorter, but ultimately, multiplication here can be replaced by sorting. With long math sorting digits may be faster than multiplying large numbers, so here's my solution: