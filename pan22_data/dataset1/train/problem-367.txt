Why have you defined your cbuffer as reading in from register b0? That might be a potential cause of your problem (the device context is writing to a different register than the one your buffer is reading in from). 
Also, before writing to your buffer, you should use the ID3D11DeviceContext::Map() function, as you need to prevent the GPU reading from it before you are ready to pass it. Try the following:
I think that's the correct syntax (been away from DirectX for a while, gradually easing myself back into it :P), but the concept is to ensure that it doesn't read the information before you've written the new information to it. That also might be causing your issue. I also don't believe that you need to tell the shader the offsets of the elements within the buffer, that should be figured out when you bring in your shader for compilation.
Other than that I don't see any issues that could be causing your problem. But then, I'm currently an "untrained eye", so to speak, so if you still can't get it to work, then try looking at the tutorials from this guy's website, they seem to be fairly good, and provide a good starting ground to build off of (I find once I have a working concept down, building on top of it is much easier, and enjoyable).
I've tried everything I can think of, but I cannot get a constant buffer to update a variable in my shader in DirectX 11. I followed the examples on msdn. I read and re-read the articles on constant buffers. I even followed the nearly identical thread on this site. But for some reason I simply cannot get this to work. Can someone point me in the right direction?
I'm sure it's something simple and stupid that I've overlooked, but I cannot seem to find the problem myself. Any ideas?