What does your colleague propose as the primary key for this link table? 
Primary key columns can not be NULL of course: the table above has nullable.
There isn't any natural row identifier (which is what a PK is) in the example above (a IDENTITY column is not a primary key), therefore it fails in any modelling process. Don't even think about creating tables without some model (ERD, ORM, IDEF1X, whatever)
You'd also need CHECK constraints to ensure you don't have 3 way links.
Finally, you're straying into 4th and 5th normal form territory but for the wrong reasons.
I can't find any examples on the internet: that shows how stupid this is
Putting multiple relationships into one table can be useful if those relationships have the same attributes and/or if you want to aggregate data over multiple relationships.
It is necessary if the types of relationships are defined by the user at runtime. However this is rarely really the case.
In your example the relationships don't share attributes, the relationships even referening  two different tables. This makes it hard to enforce constraints and the design is also less intuitive.
I would only chose that design if creating tables literally costs money.