How about Unity itself? I know Desktop Dungeons went down that route.
Setup your sprites as flat planes in X and Y, and then use Z as your depth (greater values of z will render behind lower ones).
Use an orthographic camera to eliminate true perspective, as you're better off faking this with paralax or whatever.
You may have to build your own collision detection / physics, but in 2D they're trivial.
Cocos2d Javascript bindings help you develop crossplatform mobile/browser games. Their vision is one code base accross mobile platforms and browsers. They say Mac support is there, while Windows Phone 8 support is on the way. Windows is not supported natively, though cocos2d-x project anounced that they support Windows 8 Metro. With cocos2d-html5 backend support, cocos2d-JS can be quite a portable platform.
Also there is a promising world/user interface editor called CocosBuilder. With a dedicated developer, who is employed by an industry giant, this tool has been under heavy development lately and progressing nicely.
https://github.com/cocos2d/cocos2d-iphone/wiki/cocos2d-and-JavaScript
Whatever you do, unless you have very good reasons and plenty of resources (work force, money,  and time), don't write your own engine.