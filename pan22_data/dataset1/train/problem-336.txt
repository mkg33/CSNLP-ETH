I just couldn't find appropriate flags to add-in to your find command. So, I used loops and I think definitely a better solution than this exists, even using only find
So, In the command you wrote, file checksum.md5 was created in the current directory (that was root for you). In order to create checksum file in each sub-directory, you have to traverse there, execute command, then get back to current directory. Not exactly but, something like this :
So, I just used lines that you have used and put in a loop that iterates over all subdirectories present in current directory. Here's what I did :
I think there is scope of improvement for this solution and Any such are welcomed. Feel free to add-in more details.
To build off Ignacio Vazquez-Abrams answer I made the following bash function which crawls the sub directories MD5ing the contents, places the MD5 file in the sub directory, then post processes the checksum files to sort them so that the resulting checksums are in order based on the filename:
Changing the first find's -name parameter to include wild carded extensions such as *.jpg will make the find command only MD5 specific files in the directories. By default with * it hashes all files in a directory.
Perhaps making the first find's -name parameter a passed value would be better for some people, but most people will be hashing the entire contents of the folder rather than just a subset of files.