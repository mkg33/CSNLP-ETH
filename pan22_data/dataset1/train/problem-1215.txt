I would check your scale. Physics in Unity are designed to work at real life scales (1 unit = 1 meter) If you create a scene that is not to the correct scale, you are going to have a terrible time getting it to look correct. 
Lets assume your ball is supposed to be a basketball. A standard basketball is 23cm (0.23m) If you build everything to scale and have normal gravity it should accelerate at 9.8m/s^2. In game space that would be 9.8 units/second squared.
If you just made the ball the size of a unit sphere and scaled the environment up. It would look visually like everything was correct but, you have done is created a giant (~5x) basketball in a giant world. When you hit play the ball would appear to be affected by gravity at a different rate, 2.254 Units/second squared. 
The temptation in this moment would be to try to adjust gravity and the relative masses to compensate for the scale being off. The problem is that PhysX is actually only built to work well at one scale, the real world (1 unit = 1 meter). If you deviate from that standard scale you are going to an increasingly difficult time getting anything behaving correctly. 
Try adjusting the Max Angular Velocity in the Physics Manager.
You can access the Physics Manager by selecting Edit->Project Settings->Physics from the menu bar.
Maybe try a value around 100. That seemed to work well for me. 
You can override the Project Settings value of Max Angular Velocity for any Rigidbody by scripting Rigidbody.maxAngularVelocity.
I hope this works the way you are expecting! It did for me, but I didn't test the side effects of having set a high value. If anyone here can explain why adjusting the Max Angular Velocity may be a poor decision, please let us know.