Checking if a point is inside a rectangle is easier when the rectangle is not rotated. You just have to check if the position of the point on the x axis is between the mininum and the maximum of the rectangle, then you do the same on the y axis.
This image shows how it works for the x axis. The blue point is between the min and the max of the rectangle. The red isn't.
To check if a point is inside a rotated rectangle you first rotate everything so that the rectangle is aligned with the axes. Then you do the same thing as before.
Note that you don't have to rotate the rectangle. You can use the coordinates before it was rotated. You just have to rotate the point by minus the angle of the rectangle, around the center of rotation of the rectangle.
To rotate a point around another point you do the following:
If you're using matrices for your transformations you can use the inverse to find the position of the point.
A very very easy way to check for polygon-point collision is to use area calculations.
The point and the edges of the rectangle define 4 triangles. You can calculate the area of these triangles by calculating the distance from the point to the endpoints of the edges and using the sinus law:
Where a and b are the distances and P is the angle at the point.
You then add these areas together. If the sum is bigger than the area of the rectangle, then the point is outside, if it equals the area, then it's inside.
This isn't a cheap way to calculate this though, so if you use this, do a broad phase before.