that depends where you "set" your environment variables. the equivalent to your bash example would be like this:
but i think you have done it via the windows-system-settings-dialog (or whatever its name is). the result of this is that you have actually changed the registry. these registry settings are mapped into the process when you launch a new process.
so, you can either start a new process (cmd.exe in your case) OR you can read the registry keys reflecting the changes you want. you could also write a little .bat / .cmd script which gets the environment from the registry and changes the current enviroment accordlingy (if the mood strikes me i ll do this after lunch).
It really depends on how your environment variables were set.  If, for example, you used the "SET" command in the command line, it only effects the current instance.  On the other hand, commands such as "SETX" will permanently adjust the value of the environment variable.  SETX will ensure that all future instances of cmd will see the update.  It will not effect the local environment.
If the environment variable is set by another application and is not being updated, it is often easiest to either restart the "explorer.exe" process, log out and back in, or reboot.  Essentially, you just need to tell explorer to reload the environment variables.  If it is an application that you have developed, such as an installer, ensure that it is calling SendMessage (HWND_BROADCAST, WM_SETTINGCHANGE, 0, (LPARAM)"Environment");. This tells explorer to refresh its cache of the environment variables.
This is important because applications launched by another process inherit their environment variables from their parent.  As such, if you launch cmd from explorer, you get the variables as explorer sees them.