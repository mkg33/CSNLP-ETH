Graphics APIs have a function called "backface culling" where they omit drawing any triangle which is facing away from the viewpoint.
This is determined by looking at the winding order of the vertices after projection, classifying them based on if it's clockwise or counter-clockwise.
There is a mismatch between the winding of your source geometry and the winding that your current settings in your engine. Either change the winding your engine expects (if possible) or change the winding in your content creation package. That operation is usually called "unify/flip normals", or is achieved with an option in the exporter.
As you claim to be able to load a sample mesh correctly, you need to fix your mesh to agree with conventions, or fix the exporter in case it does it wrong.
I'm using Irrlicht 1.8.1, and Blender 2.71 to create my animations. I've just create a simple cube, added a default material to it, and i've mapped a texture to it using UV unwrap, all that in Blender.
Then i use I to save rotation+location+scale,  when i pressa ALT+A, everything works fine, and when i press F12, i can see that the texture mapping are fine too. 
When i export the mesh using OBJ format (which is not an animation) and load it as AnimatedMeshSceneNode or simple MeshSceneNode, Irrlicht render it as expected. Fine
But when i export the entire cube animation scene (checking the export animation option, and material option, etc) and loading it in Irrlicht (cube.x) the model is loaded and the animation started as expected but the TEXTURE ARE MAPPED INSIDE THE CUBE! Then the outside faces of the cube looks like transparrent letting you to see the texture mapped on the faces inside this cube.
Thought, I noted Irrllicht was able to load the well known "dwarf.x" animation model in its examples source codes.
Anyone knows how to fix this unwanted behaviour of the texture?