The second line will be run once all jobs from parallel have exited. If your script contains arguments, you need to quote it, e.g.
This can also be done with GNU Parallel but I don't have it on my system due to obvious naming conflicts. I think you only need to make a list of scripts and then:
The -j4 means parallel will execute on 4 cores if possible.
I recommend using GNU parallel. There is a convenient tutorial for it here. It could either allow you to run all four scripts in parallel, and then run the fifth command, or you could set it up to pipe the out from the first four into the fourth, running all five in parallel. Here is the command to run all four in parallel:
You can pipe the output directly into the fifth command. By default, parallel will group output from each command, e.g. if script-2 completes first the output stream will begin with the entirety of script-2's output, followed by that of the next command to complete. Use --line-buffer if you don't care about output lines from different commands mixing. Use --keep-order if you need the the output from the commands kept in order, i.e. the output from script-1, then script-2, etc.
Another option is to just use xargs, which should already be installed on your system. xargs has a -P option that allows you to specify the number of concurrent processes. Note that it doesn't handle grouping the output, so you can't pipe directly into the fifth command. Usually you need to set -n as well.