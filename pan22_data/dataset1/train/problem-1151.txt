Try to use point primitives. It should be the fastest possible solution, you use just position for rendering, but you can set the point size and even a shader/texture, so it may look almost like a mesh.
If you want to go even further you can render this on some off-screen texture to make some post-processing, like edge detection or better normal creation - this way you'll get almost countless possibilities to get the look you want.
I'm writing a plugin for this library for Unity3d.
I have it working and now I am looking for an efficient way to draw the particles.
My 1st test just uses sprites and runs fine on my laptop but I doubt it will be so good on a mobile device.
Is there a cheap way of simply drawing lots of particles to the screen each frame?
The library generates an array of all the particle positions which updates in FixedUpdate() so I can just draw everything in that array each frame.
I'm thinking maybe somehting in the Graphics namespace would handy here, like maybe Graphics.DrawTexture
Also I might consider doing some kind of metaballs like pass over the particles to make them look more liquid like.