I'm using Slick2d for a game, and while it runs fine in Eclipse, i'm trying to figure out how to make it work when exported to a runnable .jar. I have it set up to where I load every image located in the res/ directory. Here's the code
Now the obvious problem is the line URI uri = new URI(ResourceLoader.getResource("res").toString()); If I pack the res folder into the .jar there will not be a res folder on the filesystem. How can I iterate through all the images in the compiled .jar itself, or what is a better system to automatically load all images?
You can't list files by directory inside a JAR file. Those files are placed inside the classpath when running the JAR and you need to access every file directly by its name. Access based on the folder structure does not work when accessing files inside the classpath.
You don't "notice" the difference in loading in this case because you are using the ResourceLoader that comes with Slick. In general that is the correct thing to do, but in this case it "hides" the fact that the classpath data is load and not the filesystem data.
So you either need to write down explicit what files you want to load or you need to generate some sort of file list while building the JAR file. Or you need a naming conversation that allows you to load all images. Something like image0000.png, image0001.png, image0002.png, ...
In case you choose to use a filelist you may look at the ANT build system and at fileset, filelist and pathconverter in order to get the automated generation of those lists going.