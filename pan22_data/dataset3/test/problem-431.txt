I'm hoping they get this worked out, as well as editing remote files.
In a REPL fashion, so that I can execute selections of code and instead of running them locally, pass them through to the remote interpreter?
I am a python developer who is stuck on a windows machine that doesn't support all the necessary library versions that I need to use.
Then, enter either username's password on the remote machine, or your user SSH keyfile (typically .perm) (only one is needed to connect), and press Ok.
You are "supposed" to be able to connect to a remote interpreter through Spyder from the Consoles>>Connect to an existing Kernal menu item.
1234) entered in the connection file path field will be expanded to jupyter/runtime/dir/path/kernal-id.json on your local machine.
Copy the connection file (jupyter/runtime/dir/path/kernel-pid.json) to the machine you’re running Spyder on (if remote) or note its location (if local).
https://groups.google.com/forum/#!topic/spyderlib/Ytd61nCkjBM
So the files are local on windows and synced with your linux machine, then your python interpreter which you run via putty and your windows code editor see the files locally
Happy to switch editors if somebody know how this can work.
Connect to kernel dialog, requesting path and connection details
The port number is the one on which the SSH daemon (sshd) is running, typically 22 unless you or your administrator has configured it otherwise.
Launch an IPython kernel on the local or remote host if one is not already running.
If you’re connecting to a local kernel, click Ok and Spyder should connect to the kernel; if a remote kernel, proceed to the final step.
If connecting to a remote kernel over ssh, check the appropriate box and type the full hostname you’re connecting to (in the form username@hostname:port-number).
Is it possible to "pipe" a python interpreter from my remote linux box into a windows code editor?
Luckely I have access to a Linux box, which I normally open via putty.
If using Spyder 3.3.0 or later, you’ll need to do so with
(after you’ve first installed spyder-kernels on the host with  install spyder-kernels).
You can get jupyter/runtime/dir/path by executing jupyter --runtime-dir in the same Python environment as the kernel.
This is something most modern IDEs are starting to be able to do.
Click Connect to an existing kernel from the Console menu or the IPython Console pane’s “Gear” menu.
Here is the new Spyder documentation for connecting to a remote kernel.
If using a version of Spyder before 3.3.0, ipython kernel should work to launch the kernel, albeit without certain Spyder-specific features.
Note, if on Windows and connecting to a remote machine over ssh, you’ll need to install the paramiko python package first (e.g.
I am currently using spyder with anaconda for development.
if you run SAMBA on lnux, then linux will do windows file sharing, and then your windows code editor can view the remote files as if they are local.
Not piping but if you use putty or whatever ssh client, so you access the python interpreter.
But you may want to make sure that the windows code editor doesn't go nuts if the connection breaks e.g.
Browse for or enter the path to the connection file from the previous step.