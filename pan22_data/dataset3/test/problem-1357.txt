how would one approach this problem from math/physics standpoint?
The gas could possibly be done using perlin noise as Lunquil suggest, but I think you should have a model that lets the stars and the gas cloud interact to make it look more natural.
If you're definitely using 2d, then I would just make the first 2 steps in a number of layers, and then dimming them out wrt to z.
I have a 2d galaxy where each star is rendered a particle:
Likely one could build a colorful nebula even from a picture of supermans pyjama and a tiling concrete texture, if using some creative pixel shader coding :-).
To get something decent I think would be pretty easy.
I am sure you could take it a lot further than that but it would probably require experimentation.
I cannot agree with solutions proposing involving millions of particles, or just building up the result from a multitude of individual small pieces.
One could indeed even have a handful of 3d objects as first guidance, if a view from different angles as needed (grab an isometric snapshot onto a rendersurface, work onwards from that).
The textures don't need to look like nebulas initially, they'd only be pixel and color/float32 value placeholders for the shader calculation.
Now, it looks like you actually want a galaxy, which is a different kind of object.
Maybe using some caustics or some reaction-diffusion system.
Reading textures and doing suitable custom maths on the color values (or numbers, if float32 argument textures) would be my approach to this challenge.
The nice thing with problems like this is you can process as much as you want because it's an offline problem really.
If you only need to view the result in 2d, meaning no need to fly around the nebula, or enter into it, my approach would definitely be working with a shader and doing pixel processing from a handful of argument textures.
http://skyserver.sdss.org/dr1/en/astro/galaxies/galaxies.asp
I'd like to approximate it with nebula, so that instead of seeing lots of tiny dots from afar, users will see lots smooth light in the area.
So, to get an "exact" physical solution, you would:
From a physics standpoint you would first need to choose which kind of nebula you want.
I'm more interested in technology-agnostic solution which accurately resembles underlying particles.
Would be about grabbing a good hires, middle res, low res and potentially a micro res texture, where the 2 last would be nicely tiling ones, and then just doing texture lookups and after calculation combining into a result that pleases the eye.
(Remember to use float32 surfaces always, so to not force intermediate calculation results into only 256 possible values per channel)
But if you have hints how to do it in a specific technology - those are welcome too!
https://en.wikipedia.org/wiki/Reaction%E2%80%93diffusion_system
Additive rendering on top of each other may be a way to go (eg.