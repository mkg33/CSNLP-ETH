When looking up a file by hash, there is no need to contact a remote server to learn of updates, and no need to handle cache invalidation for anything other than freeing up disk space.
I recommend it because the design is exactly what you need for an efficient local cache.
Another contender is XtreemFS: the feature set includes
It looks like gluster performs local file caching.
In MooseFS Master machine the full file system structure is cached in RAM for better speed.
IPFS is worth looking into, even though it's still relatively young and performance isn't on par with Ceph or GlusterFS yet.
All content (including the directory structure) is immutable and addressed by a cryptographically verifiable hash.
Check out OpenAFS it has local disk cache, see: http://docs.openafs.org/Reference/5/afs_cache.html
Mutable addresses can be had with IPNS, but those are just pointers to file hashes, meaning that only a single request is needed to find out of an updated file tree.
This means content can be retrieved from anywhere - in memory, on disk, or even an untrusted peer.