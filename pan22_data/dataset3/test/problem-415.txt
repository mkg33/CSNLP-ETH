For example, given a list of IP addresses, we want to know the state, or lat/longitude, country, etc.
It is rather difficult to exactly pinpoint where a specific prefix is being used without inside knowledge of the network.
The good ones have nice APIs you can work with that will allow you to query by various regional levels.
The short answer is that doing this correctly is practically impossible.
I realize that this would probably require quite a bit more time to implement than you seem to have ("The catch is it has to be ready by tomorrow..."), but since there seems to be general agreement here that a geolocation database will be highly error-prone, I thought that an alternative location source might be more accurate (though I realize also absent from many client requests and perhaps even spoof-able).
For example, Twitter's API seems to allow for this possibility.
Hook into your web server, or server firewall, etc so that packets are looked up on the fly against the Geo Location database (the dbs are local data files you update periodically [eg monthly]) then make a decision, or insert a firewall rule.
There's no sure way to know if, for example, a certain prefix was delegated to a customer, and that customer is hauling it back across three states to a branch office.
If it's difficult to get an accurate mapping between location and IP address, wouldn't an alternative solution perhaps be to rely on client location information from GPS hardware in mobile phones via APIs?
A lot of these GeoIP databases have blatantly incorrect information in them.
The long answer is that you will most likely need to talk to a GeoIP company (such as MaxMind).
In the end, its generally a simple task to query a big GeoIP database and build firewall rules and whatnot from that.
You would have to look through the db products to see which one(s) are organized in a way you can use.
But the products come with sample libraries for many laguages) that would spit out all the IP addresses, networks, whatever for a given state or zip code.
None of that is easy, but it's definitely do-able.
The db products are meant to be used programmatically.