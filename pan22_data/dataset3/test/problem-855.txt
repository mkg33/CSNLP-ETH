Nate...you need to build a sproc the takes a date-range, for example: @startdate and @enddate with both being datetime.
I noticed that you have already decided on your solution, but wanted to offer another suggestion which utilizes Aaron Bertrand's Date Dimension table.
Assuming you had created and loaded his Date Dimension table, it would be a simple as:
I'm trying to automate some sales processing that is currently largely manual.
Normalize the rows into date or datetime data-types, even if you have to make the assumption that the day part is 01
What's a better way to do the following, that doesn't rely on string manipulation?
There are just so many situations where a Date Dimension table comes in handy.
I would suggest not trying to evaluate the quarter date range in sql, that process is more procedural-based and not very friendly with set-based operations.
I'd like to accomplish this using SQL's built in datetime functions rather than a case statement and casts.
Once you have normalized your datetime value(s), you can then use where datetime_field between @startdate and @enddate
Part of what I'm trying to accomplish is better re-use of aggregation queries for historical data, currently there are just a lot of queries saved in the cloud.
I need to able to pass in a year and quarter, and get a pattern to match against the sales data.