Edit: Some very nice addt'l background here: http://blogs.msdn.com/craigfr/archive/2008/10/30/what-is-the-difference-between-sys-dm-db-index-usage-stats-and-sys-dm-db-index-operational-stats.aspx
When SQL Server RTM'd, I wrote my own scripts for perusing and reporting-on the DM tables and thought about automating their activity.
It looks like dm_db_index_usage_stats is the key to all of this.
I'm seeing a cute little T-SQL script here (http://blog.sqlauthority.com/2008/02/11/sql-server-2005-find-unused-indexes-of-current-database/) to show unused indexes that should run on SQL Server 2005.
I did some index-related query and I've shown this in my blog (http://dbalink.wordpress.com/2008/11/09/how-to-finding-index-usage-stats-with-dmv-in-tsql/)
Bear in mind that SQL Server does not know your business.
I still use my scripts, but I apply my company's business decisions to what I do -- Something I can do in a smaller company.
It does not know what business tactical and strategic decisions your company has made, is making, and will make.
(See http://msdn.microsoft.com/en-us/library/ms188755.aspx  I'm gonna have to go look at some production databases I created now to see what these stats look like.
The same logic applies to indexes which are under utilized or not used at all.
As always, know your data, know your business, know your business' direction.
One glance at a missing index report where SQL Server was asking for all remaining columns of a table to be added as "Include" columns on an index for a table with very dynamic content was the deterrent I needed to not automate the process.
This means that an index missing today may not be relevant tomorrow or it may become more relevant.
Another one http://aspadvice.com/blogs/ssmith/archive/2008/03/31/Find-Unused-SQL-2005-Indexes-for-Current-DB.aspx here, too.