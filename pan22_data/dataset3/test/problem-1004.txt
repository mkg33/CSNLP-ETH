Once I found all the words that matches the hashtag pattern, I am supposed to write an output text file for each URL that I connected to with the results of the lookup.
I wonder to know what improvements could be made for the performance stuff (considering the multi-threading requirement).
External libraries being used: Apache Commons Validator (for URL stuff) and JSoup for HTML handling.
Since the application is supposed to support more than one thread processing, I am creating a "task" that will connect to the URL, then get the HTML using JSoup, then search for the hashtag pattern (regex) and then save all the matches in a String variable that is a property in an object that holds other information of the process.
A class (singleton) to handle read/write operations on text files
So, how I am focusing this solution is to create a task for each URL being analized.
An enum holding the supported patterns, I am using by now the hashtag:
Or if I can get any kindly suggestion to improve the implementation of this application.
Once the whole analysis is done for the URLS, I start to write the content (results of analysis) on a file for each URL.
I've been implementing a little application that will read a text file that holds URL addresses (one address per line).
Based on that file, I am supposed to read the parsed content of the main page for each URL and search for any text that includes a hashtag.
I am saving as String because that content must be output to a file.