But top of the list for designing the architecture is the level of access users are to have over their own machines - and whether admin access is shared, functionally devolved or restricted - its difficult to design permissions models whereby developers can manipulate permissions within a secure scope but require access to change file ownership (e.g.
The Unix System Administration Handbook is a great book (the earlier editions helped me a lot) - it has a section on disk partitioning.
(this is what a lot of people do for a living - and can spend days, weeks or months on a single project).
Internal (employee) and external (clients/customers) should not be serviced through the same system whenever possible.
Also this relates to partitioning only and how it relates to security, scalability, etc.
It's not possible to answer the question without a lot more information - firstly, what do you mean by partitioning - this might mean how you split up the HDs (and possibly map the filesystem to the underlying logical disks), it might mean how you define the firewalls between devices or it might mean how you assign resources to virtual machines.
There's no requirement that a single machine cannot be both a user workstation and a server - but you need to think about how this affects the level of control the user has - you can disable access to shutting down the machine easily enough - but what about the power cable?
The question I have in particular relates to the partitioning of Linux servers and the reason as to why they should be set up in that manner.
It minimizes the ill-actions of a client/customer from negatively impacting your other (good/paying) clients/customers.
"I also require to set up a web and mail server that my staff have access to.
all web developers need to be able to edit files on the webserver, but they should not be writeable by anyone other than these people).
There is typically some control over the usage/mis-usage of employees and even less when it comes to the clients/customers.
I am not looking for particular applications/software to harden or to secure but rather taking a step back and looking at holistically building an environment that meets the needs now and later.
The question is so sweeping and generic, it sounds like a badly thought out homework or interview question.
logging, mailbox sizes, scalability, security, hardening and the like."
Even once this is defined, there's still a lot of unanswered questions about budgets, usage and availability which would just take far too much time to go into just now.
Ideally, individualized partitioning at the system level per client/customer is even better.
I am looking at setting up the following environments mimicking a real world environment to a degree.
Certainly life will be a lot simpler if you use a centralised system for managing authentication and potentially other services - so an LDAP installation somewhere is a good idea.
I am new to the world of server configuration and as part of my introduction I am challenging myself setting up several Linux servers within a virtual environment e.g.
I would appreciate if someone could advise on the following
Now considering I may also have to host other websites and mail boxes of clients, what do I have to consider when partitioning the server e.g.
Certainly you need to start thinking about usage scenarios and documenting assumptions you are making about the usage.