You should keep them separate, yes, a sprite has nothing to do with physics, even if your physics get information like size from the sprite.
You could have a CollisionComponent with that information, or maybe a SizeComponent that both sprite and collision can access.
You will still need to share the position, which brings to the next point: Sharing the data.
In my code I have systems, they are the ones with logic and they can access more than one component, so a physics system could access the SpriteComponent and get the size (probably with no need for a PhysicsComponent if every object is going to act the same.)
In your case, since you didn't mention systems, I'm assuming your components have a pointer to their owner entity, you can simply do something like:
Which is fine for a simple game, you can also make a message system, so your components don't actually depend on other components, they can simply receive and react to generic messages.
I think using systems is a much better approach, but there's nothing wrong with a direct pointer or messages, it's a matter of what makes more sense to you.
I would recommend the CollisionComponent having the size on itself, so you don't actually need a Sprite at all.
Sharing the data is a really difficult question, to which I say it depends.