Quite simply - don't point /usr/bin/python to any other python.
simply you have to edit usr/bin/yum and change the shebang to the same version installed within your distribution.
this why you made installation to a new version of python than the one that was already installed with your OS and that yum is dependent on.
directories installed using "make altinstall" contain the major and minor
You can edit the yum (/usr/bin/yum) call to python like:
For example, if you want to install Python 2.5, 2.6 and 3.0 with 2.6 being
Instead, if you want to use python2.7 just modify your path to put /usr/local/bin first.
I installed Python 2.7 and pointed /usr/bin/python to /usr/local/bin/python2.7
overwritten by the installation of a different version.
From the Python 2.7 README: "On Unix and Mac systems if you intend to install multiple versions of Python using the same installation prefix (--prefix argument to the configure
This involves downloading the source and following the directions found in the README.
to install multiple versions using the same prefix you must decide which
Install all other versions using "make altinstall".
How do I get yum working with Python 2.7 on CentOS?
After installing Python 2.7, I get the following error message every time I use yum
When you get to the point where you would normally run 'make install', you want to run 'make altinstall'.
${prefix}/bin/python which refers to ${prefix}/bin/pythonX.Y.
In general, you shouldn't touch anything in /usr/{bin,lib...} other than in /usr/local
the primary version, you would execute "make install" in your 2.6 build
script) you must take care that your primary python executable is not
This will leave default python in place and give a python2.7 command in /usr/local/bin/ instead.
You can build python2.7 (as described in http://docs.python.org/devguide/setup.html#unix ) instead of using yum to install it.