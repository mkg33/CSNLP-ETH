The sample below will work with an htaccess-style setup:
You can configure this in an htaccess file, or in the VirtualHost configuration file.
You can join the Linux svn server to the domain by following this article.
From there, you configure apache to authenticate to the AD using Kerberos.
Since you are running SVN through Apache, you can take advantage of Apache's built-in authentication methods to control access / track changes to your repository.
Make sure you implement SSL if you are at all worried about the security between the client and the server.
After you are done, user's can log in with their Windows passwords and activities will be assigned to their user.
First install mod_auth_kerb, then connect apache2 to kerberos for authentication.
This answer assumes your developers use Windows and your have a Active Directory domain controller.
You can have a little about apache + svn + mod_autz_svn  and something more in my slides presented to the International PHP Conference '09 available at http://superalbert.it/download/misc/PHPCon09_SVN_advanced.pdf
Unfortunately, I can't get you specific configuration details right now as I am out of the office and don't have access to our svn server.