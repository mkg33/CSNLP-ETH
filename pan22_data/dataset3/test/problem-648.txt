Would this require changing the data into coordinates and using GIS software or can I get away with using Python or R?
Here's a simple solution using the R package ggmap.
If you have some addresses, what would be the node and what would define an edge?
Speaking as a Graph/Complex Networks guy I'd recommend Networkx package in Python.
If you provide info in the comment here I'll answer your question in details.
And then we can find the length of time estimated to walk there with something like this.
This is the main library I used for my master thesis and my research during last 2 years.
For example, if I have 100 houses from all across a city is there any easy way to determine the shortest distance between two houses and all that good stuff?
As long as your graph is not gigantic (millions of nodes) you can handle it using Networkx.
Graph is not constructed from your addresses unless you have a definition for vertices and edges.
What's the best / easiest way to create a graph from address data?
But what you need is not only the library but a philosophy to convert your data into a graph.
When you convert your data into a graph Networkx provides you all fancy algorithms for everything (shortest path, community detection, statistical analysis, etc).