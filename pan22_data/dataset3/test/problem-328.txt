I only have max 512 of these objects on the map and they all contain bounding boxes.
As for whether it's worth it, a lot of that depends on just what you're intending to do; 512 objects is few enough that individual frustum culling is probably fine, but you may find yourself wanting the spatial partition for other reasons (for instance, for object interaction).
Currently I just do a loop through the list of all these objects and check if its bounding box intersects with the frustum, it works great but I am wondering if if it would be a good investment in an octree.
And even if they're dynamic, you don't necessarily need a full octree; you can go down to a quadtree, the two-dimensional version, and treat all boxes (for purposes of the spatial partitioning) as having the same height.
Octrees aren't the only way of handling spatial partitioning.
I have a very simple game which consists of a 3d plane for the floor.
I am wondering whether I should look into implementing an octree of some kind.
If your objects are static - which it sounds like they might be - then you may be better off not using an octree but instead using a hierarchy of bounding volumes.
I am not sure if an octree would make it faster since I have so little objects in the scene.
There are multiple objects scattered around on the ground, each one has an aabb in world space.