For example, it is normally considered "safe" to unplug drives at all times as long as no writes happen.
The controller may discover that the block has reached its end of life (becoming non-eraseable) and may mark it as such, then erase a different block, and possibly it will have to do the same thing 3-4 times.
Even Windows might be configured in a way that causes "surprises".
Some drives have two or three layers of caching, some of which are volatile and some that are not, and some really weird, obscure wear-levelling algorithms that do some very non-obvious stuff, too.
When the device communicates that all the I/O operations are ended the OS will release the device declaring that you can safely remove the device.
The blinking indicates some activities in the device, or at least an hardware (not OS related) communication to the user.
Windows may send a flush command and get a "Yeah OK" reply, and you pull the plug, only to discover the next time you plug in the disk that nothing was OK.
You may check if, with your model, that way of blinking (short or long pulses) has a special meaning.
The controller may find a checksum error and relocate the sector, which may cause another few megabytes to be rewritten, whatever.
The same is true for virtually all solid state disks.
But it only happened with a second person ready to remove the USB and run away (immediately) after the go-ahead of the system and when writing operations were required at the very last moment.
The OS stops/refuses the new I/O operation requests from its programs, waits the ending of the current I/O operations and checks if some lock is active on the device.
Except that isn't true at all when you or someone else using the computer e.g.
In general the scope of the question is so wide that there cannot be other single universally valid answers: too many models and brands may be involved.
In my personal experience only a few times in several years (and specifically not with windows 10) I remember a data loss or file system corruption if removed quickly immediately after the go-ahead of the system.
When you have at least one side that is open source you can read what happens
They may rely on the fact that between the go-ahead of the system and the average human reaction time needed to unplug the device there usually is enough time for the modern devices to finish the internal operations in progress.
It should be (and in almost all cases it will be), but you cannot be absolutely sure in any sense.
I've had USB devices (not just disks) from "reputable" manufactorers which were so awfully standard-violating broken implementations... it's horrible.
Limitations written to safeguard the company as much as it is possible, even if they knew or should have known about the possibility of the damages (see below for Windows 10, but you can find similar for the devices producers).
The OS was reading/writing on the USB drive (HDD,SSD).
It could take 0.5 milliseconds or five seconds (unlikely, but still) to finish safely.
Usually 8 short pulses mean the byte zero, and 0 is the exit code of the program with no error at all...
The problem is that both sides are often valued considering their performances.
), nor could the guys who once upon a time wrote the "eject safely" code possibly know.
The only thing that is really 100% safe is when there are no blinking lights and no sounds coming from the drive any more (sound is admittedly not such an awesome indicator on SSDs, but on a hard disk it's a pretty good one).
So... the drive blinks for 10 second before powering down, fine.
Modern drives (virtually all external Seagate drives, in particular) do weird stuff such as shingled magnetic recording which increases density by overlapping tracks, and causing massive write amplification in some non-obvious conditions.
The blinking of some Seagate models is an error code [avid] communication.
You write one byte, the controller may have to erase a complete 512k block, copy 53687091 bytes from the old block, and write your single byte.
So, since they discharge the consequences in advance and are valuated on their performances, it is up to you to decide to what extent you can trust them and you will feel safe.
You write one byte, and the harddisk may have to reorder a megabyte or two (maybe?).
Usually both the device firmware and the OS drivers are closed source, so you have to rely on their documentation and on the License Agreements.
I would consider it "not safe" for the simple reason that you have absolutely no idea what is going on inside a drive nowadays (nor does Windows).
Moreover, the responsibility of each side is limited by the License terms.
Now we can even specify in which sense you want to be safe...
It might correctly report "flush OK" or it might do it incorrectly.
It will take 10 seconds extra, really... what do those 10 seconds cost you?
Even more weird stuff (MAMR, and whatnot) is on its way to becoming mainstream, and we cannot know how whatever will be in a disk that you buy in 6 months from now will work (could takes 10 seconds during which it shoots microwaves at the platter to "finalize" the disk, whatever?
turned on performance mode (which enables write cache and thus definitively moves disconnecting at haphazard times deep into the realm of "not safe").
You must refer to both the manual of your HDD and the instructions of the operating system and drivers, consider the most restrictive and yet you will not be able to be absolutely safe.
The OS can answer only on the base of what the device itself answered.