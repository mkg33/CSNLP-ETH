As far as I can tell from documentation, sf::View has a getViewport() method.
Your edited code at time of the comment didn't work, because of that else statement.
Figure out your mouse position in world space and divide by the tile size.
Basically keep track of where your upper left corner is in world space, add the mouse position to that (with appropriate scaling etc.)
SFML has a few good functions that allows you to do what you want a bit simpler
Luckily, SFML has it's own built in collision checking function in sf::FloatRect, so you don't need to write out the checking for if a x is less than another x and that
This method gives the coordinates of the top-left point of your view.
Next you will need the coordinate of the mouse, in relation to the top-left of your window.
That line of code will convert the mouse position relative to the window (sf::Vector2i), to a world coordinate (sf::Vector2f).
Finally, you add the two coordinates together, and you'll have the world-space coordinates of the mouse.
If you have any questions about the stuff I used, make sure to ask.
This is just off the top of my head, it may contain errors.
You check if the mouse hits the VERY FIRST tile, and if it doesn't return null
First off, you should really store the tiles in a 2d array.
From here, it's a matter of basic integer divisions to get the tile you are currently hovering.
I have the window as an argument there, or else it will get the mousePos relative the the monitor
Combine the mousePos check above, and the code here below, and it should work out fine.