A couple of suggestions that worked for me from this Reddit thread:
Then when you ssh in, the problematic bashrc will be moved out the way, before your login shell is started - you can then obviously fix the bak.bashrc and move it back into place
I'm assumming that your system will allow you FTP access.
I couldn't get a 'mv' command to work (tried before without -t), so I think the -t option must have done it, but you can test that if you want.
What did work however, was to send an 'rm' command as a final argument to ssh.
Not wanting to seem like a noob, the last thing I wanted to do was ask for help from the admins, and I couldn't get a well-timed ^+C to work.
In such a case, be sure to change your password (securely) when you have finished repair.
My suggestion is to use simple FTP and then delete or rename file bad file on the FTP command line after logging in.
From man ssh (for OpenSSH_5.6p1 at least, not sure when it was added),
I managed to mess up my .bashrc file too on a new cluster I've been given trial access to.
If I recall some bad experiences I have had like this, the ssh, scp, sftp do seem to run the initialization files.
Connect via SCP or SFTP and edit/rename/delete your .bashrc file that way.
..which means you can create ~/.ssh/rc containing the following:
I've now recovered from the .bashrc~ file (made by vim) everything but the dodgy line in question and everything is right in the world!