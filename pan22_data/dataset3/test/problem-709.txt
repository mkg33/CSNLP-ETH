This shows that the row data itself only takes up a fraction of the data.
If the primary key on Table 2 is created as 'nonclustered' then the index is smaller but there is a 'hidden' index created that is the same size as a clustered index anyway.
The first table is a mini version of the second, with only the primary index created.
I have inserted 235605 rows as that's what I have in the live database.
Some digging has shown that it is how MS SQL stores the information.
When I run the size query across these two tables, I get the following:
In one case it's pushing the database over the 10gb Express limit so it's causing a financial problem as well.
However with those extra fields on the table, it expands the primary key out to 210mb, even though all those fields are blank and the same field is the only one in the primary key.
I have come across a sizing issue with my database tables becoming too large.
Is there any other way to structure the table so that you don't give up so much space to the index?
I created two test tables and filled them with data:
I have found that with the size of some of my tables, that even though the primary key is on a BCD file, the indexes are increased the database to 2-3x the size of the data.
This appears to be an impact of how MS SQL want to access the data.