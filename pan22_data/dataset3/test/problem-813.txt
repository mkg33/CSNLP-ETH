It's basically Ingo Karkat's answer, packaged in a plugin, though, so reading up on :help filename-modifiers and following his advice is definitely a good way to go.
I can assume that if it exists it will always be in the same folder.
For a drop-in solution to the problem, consider using my fork of the Go runtime files: https://github.com/AndrewRadev/vim-golang.
(This requires that you have :filetype plugin on.)
It defines the :A family of commands (relevant definitions are here, filename modification is here).
However, such a mapping (or command) can be easily defined, e.g.
This uses :help filename-modifiers to extract, compare, and assemble an :edit command.
I do not care if it opens in a buffer, tab or even in the current buffer, I just want to press a button and be able to switch between the two.
When working with Go I would like the ability to open the corresponding test file for each .go file I am working with, and vice versa.
There are some plugins that can switch between C/C++ .c and .h files; some may be so configurable to deal with your use case.
I can recommend the plugin vim-twitch to address this issue.
The above is globally for use in ~/.vimrc; if you want this only for Go files, use :nnoremap <buffer> <expr> ...
The format that is followed is foo.go corresponds to foo_test.go.
Then either prepend :autocmd Filetype go, and put that into your ~/.vimrc, or, as that gets unwieldy as you add mappings and other settings for various filetypes, put the commands into ~/.vim/ftplugin/go_mappings.vim.