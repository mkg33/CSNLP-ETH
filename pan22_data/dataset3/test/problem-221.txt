Therefore you cannot build a simple application to take a look into the data of another progam running.
You tagged Windows, yes it's possible (at least in the general case of a user on their own computer with admin rights).
You can attach to the process and have a look around at its memory, what threads it is executing, and the assembly instructions they are executing.
Alternatively you can just attach a debugger to your program (ida), but Ive only used gdb.
Please accept my apology but I'm trying to get an answer for this question.
In modern operating systems, RAM accesses are separated between processes.
I can only find the bits of memory I want by putting something like longuniquestring in the program's memory (but this is not the right way Im sure).
To do this you will have to program in kernel mode or use debug functions of the specific operating system.
You use a debugger, like the one in Microsoft Visual Studio.
I wanted to know if there's a way to current data from RAM?
A lot of game cheat engines (I won't link any as I'm not 100% sure which are safe, but I have used one for research) will let you search the memory of a running process for a given value, or browse through it.
Set the computer to hibernate and boot it up with a livecd or liveusb.
Afair the pagefile.sys and hiberfil.sys are built up from 4k pages, and will contain the memory used by your apps and windows.
For example:- I have an In-Memory application running and I wanted to know what data set does it hold.
These values can then be changed, or 'locked' which I think is simply done by having the program repeatedly write the required value very quickly to undo any changes.