These theoretical attacks on the Brainard hash typically entailed the collection of many thousands of SecurID token codes and an extensive statistical analysis of the series that might be effective, on some tokens.
I've been a consultant to RSA for many years, and my bias is overt, but I'm usually up for Q&As.
The original SecurID, first introduced in 1987, used a proprietary John Brainard algorithm to hash a 64-bit token-specific secret and Current Time to generate the SecurID's series of 6-8 digit token-codes, continuously changing every 60 seconds.
They charge for their server and the "secret keys" used to initialize these token emulation applications.
Seeking software capable of cracking an RSA SecurID, Nick Kavadias wrote: "I remember reading that the algorithm for the key generation had been broken & that there was a software utility available, where if you punched in enough sequences from your physical key it would figure out the key sequence.
(The most insightful deconstructions and analysis of the Brainard hash were in a 2003 paper by Biryukov, Lano, and Preneel and another paper published in 2004 by Contini and Yin, two former RSA cryptographers.
If someone somehow gains access to your workstation/laptop (locally or remotely) then they have everything they need to login as you on those systems.
I would not recommend using such software if it exists.
RSA has freely distributed millions of software versions of the AES SecurID, customized for various hand-held platforms, from their website.
Since 2003, the RSA SecurID has been based on AES block cipher, the US advanced crypto standard.
There are, doubtless, various reverse engineered versions of the SecurID code in circulation.
Try this but you have to know the Serial Number of your token.
It is possible to emulate SecureID devices providing you have all of the required items.
I know of several attempts to use this approach to actually crack a SecurID, but they were all unsuccessful
You might even find your self in a litigation situation as you will most likely be in breach of any agreement made when you were given access to the services.
Which undoubtedly won't please whoever provided you the device to secure access to their own systems.
The SecurID uses a 128-bit token-specific secret key, and AES, to continuously generate a series of 60-second SecurID token-codes by encrypting:
Although, to the best of my knowledge, no one ever successfully cracked one of the classic 64-bit SecurID, there was a fascinating burst of academic insight into new types of vulnerabilities in the old SecurID hash has that was published shortly after RSA upgraded to its AES SecurID.
So you can play with real or imitation SecurID code -- but without the 128-bit secrets make the RSA system work.
But in doing so you're breaking the fundamental design of two-factor authentication.
And RSA's authentication server will only register and support SecurID secret "keys" which have been digitally signed by corporate RSA.
I don't believe that you can use your RSA keyfobs, but there is a free community-based, open-source, web-based two factor authentication called WikID.
Whoever has given you the physical key to use for gaining access to their systems will not be happy if you do anything like this and are likely to at least completely revoke your access if they find out.
You are essentially removing a level of security from the login arrangements.
I doubt if there is actual software out there -- and it would be, after all, only good for attacking the 64-bit SecurID, a product no longer in use -- but there academic papers available that explore the probabilities, if that is your bent.
The principle of two-factor auth is that the physical item, which is the "part of the puzzle that you have", cannot be duplicated and is kept with you at all times.
No one is likely to "break" AES in the foreseeable future.
The point of having an extra physical device as part of the authentication process is that you have the device and the remote hacker (or the person who has stolen you laptop) doesn't.
If you emulate this in software on your laptop, then your laptop becomes are target for stealing and/or copying this data, potentially without you even knowing that it has happened.