I know that using System.Windows.Forms.SystemInformation.TerminalServerSession I can determine if the current session is a local session or a remote session from RemoteApp execution.
I'd create dotNet app that connects to a central SQL Server and scan every 250ms for a simple record with your PC name.
you may have to use the task scheduler to accomplish this.
lots of work to dev and test, hard to deploy, lots of moving parts, and still scripty in places, but this would probably be microsofts answer, as it correctly implements their guidance for process elevation.
http://technet.microsoft.com/en-us/library/cc772785%28v=ws.10%29.aspx
depands how remote the users are from the server but lets assume they are all in an office at the end of a network or VPN.
its just as scripty as psexec, but is entirely native.
I am writing a program that is used as a RemoteApp from server to the client machine.
I'd like do it natively, without use of plug-ins or psexec if it can be helped.
from the server schedule a task to execute on the client in the users session.
http://www.codeproject.com/Articles/31113/Create-a-Remote-Process-using-WMI-in-C
within 250ms the local app will find the record, launch the app and delete the record.
Is there a way for me, if Terminal Server Session is true (when user is running the app remotely), to tell the local machine to execute an application, like MS Word?
you can write .net or VBScript code to execute the client app.
4)create a windows network service for the local PC, and upon signal, launch the task under the users session.
I've had reliability problems with WMI before, but those were domain wide automated ops, and much of the issue appeared to be power management on idle workstations.
seriously, lots of people use psexec for this purpose, and works most of the time.
you have 4 options with varying degrees of complexity, reliability, and deployment considerations.
The second field in the record is the program to run.
This means that a server based app can write to the DB every tie it wans to open a program locally.