So, a domain is basically just a way to refer to a resource (server/group of servers) by a name instead of an IP address.
Private domains e.g "mailserver.local" or "pdns.mycorp" means that the resources will only be addressable internally.
It's platform agnostic as well, the only thing you'll need to worry about is what DNS server/method you use.
It's basically up to you, you need to choose something which is consistent and make your DNS service reliable.
Obviously whether you use a private domain or public domain is like using a private or public IP address.
If you're using DNS or some kind of zeroconf domain name system (e.g Bonjour), then you can just update the mapping between domain-name and IP address to point to a new physical resource.
If you want something to be publically addressable, or don't want to roll out your private DNS infrastructure, you'll need to buy and use a public domain name, something ending .com or .net or whatever.
Referring to a resource by IP address is bad for obvious reasons, you're not able to change the IP address of the resource without updating all your configuration that refers to it.
On *nix, the traditional, venerable choice would be Bind, but other DNS servers are available.
I believe Windows deployments tend to mostly use ActiveDirectory as a DNS server, since you'd need to have one in a Windows domain anyway.