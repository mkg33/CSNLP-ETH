Just don't make the effect a child of the can, or it won't finish before the object is destroyed.
You can use the Instantiate(Object theObject) function to spawn that prefab.
If you don't know about Prefabs, I suggest you research them because they are uber useful.
The despawn script will wait a certain amount of time or until particle systems finish and will be attached to the top-level of the prefab.
I recommend you create a prefab with a particle system(or set of them) that also has a despawn timer script attached to it.
Especially the Explosions Section https://unity3d.com/de/learn/tutorials/projects/space-shooter-tutorial/explosions?playlist=17147
You should have a look at this SpaceShooter Tutorial from the Unity Website.
Doing any of those could happen inside your Shot() function, ideally by calling a Subroutine.
For a 3D game, a simple particle effect spawned at the location of the can would be easy enough to do.
The effect has to be in within the same method where I destroy the cans.
For a 2D game, you could use a particle effect or a sprite animation at the point of impact.
I've made a game where you can shoot some cans, but I want to add an effect when a can is shot.
You can make a public GameObject field in the MonoBehaviour of that Shot() method.
Now all you need to do is to spawn this particle Effect before your bullet gets destroyed.
This would allow you to simply drag the prefab from the Asset Explorer into the properties window for that object.
You might want to tweak this particle Effect to your liking
Beware to make sure that you destroy your Particle Effect after it has stopped.
You know, a kind of explosion or something like that.
Then in the editor, create an empty gameobject containing you effect and drag it on your script.
The way the game works now is: when the can is shot it disappears destroy(gameobject), but I want to add an effect before it disappears.