Gödel's first incompleteness theorem states that in a consistent formal system with sufficient arithmetic power, there is a statement P such that no proof either of it or of its negation exists.
I'll try to answer your question from the point of view you take, in short; I'm also trying to relate the two theorems in a different way.
Therefore, there must be a statement which can't be proved or disproved.
Assuming by contradiction that all statements can be proved or disproved, this algorithm would solve the Entscheidungsproblem, but that's absurd!
This does not imply that there is no decision algorithm for the set of theorems of the theory, which would also say that nor P nor not P are theorems.
Let's use this to build a new algorithm: Given a statement Q, to see whether it's provable, run R in parallel on Q and not Q, by interleaving their execution, and stopping when the first of them halts, and producing "No" if "not Q" was proved, and "Yes" otherwise; this gives a computable algorithm.
That's the also the core of the answer by Kaveh, I hope to have explained it clearer.
The set of theorems Thm is partially decidable, and suppose R is a program which recognizes it (i.e., halts with "yes" if the input is in Thm, continues running otherwise).
I'll now try to prove that Church-Turing's theorem implies Gödel's theorem, please explain me where and if I'm wrong.
Church-Turing's theorem result says that such an algorithm does not exist.