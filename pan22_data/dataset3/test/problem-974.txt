I currently have a table at hand that records order transactions.
The tables unique-key constraint is a combination of TRANSACTION_TYPE, ORDER_ID.
Till now we only had full refunds because mostly the items bought were of single quantity.
I tried searching for this possibility and even tried it in this site.
The columns in this table are TRANSACTION_TYPE, ORDER_ID, QUANTITY, DATE, CREATED_BY, CREATION_DATE.
The transaction types are 'PURCHASE' and 'REFUND'.
I can break this constraint to make it possible to do multiple refunds by expanding the combination to TRANSACTION_TYPE, ORDER_ID, TRANSACTION_REFERENCE (this reference comes from the service that does the actual purchase or refund).
Any help to even nudge me to the right direction would be much appreciated.
We're hoping to make it multiple in which case we will possibly have to perform multiple refunds.
But there's the thing, this means that I can do multiple refunds on the same order and the same is possible if it is a purchase.
I am not sure if the title makes any sense at all, so I'll just go ahead and explain my situation.
But if anyone here has an answer for this, I would LOVE to hear it out.
I would like to create a constraint such that the combination of 'PURCHASE' + ORDER_ID is unique in the table so that only a single purchase is possible for a given ORDER_ID by constraint.