The purging topic is really interesting since this feature exists only in Nginx Plus (Nginx's commercial edition).
But there are also other possibilities like the ngx_cache_purge module.
It's my "nginx of reverse proxies", small, lightweight, doing one job and doing it well.
You can control Nginx's cache expiration with multiple directives/parameters:
As an added bonus the add_header X-Cache-Status can be used to check if the page is from cache or not.
There is an nginx plugin called ncache which claims to be "a web cache system base on nginx web server.
You can specifically invalidate cached pages through
You can write different response codes instead of any.
proxy_cache_path /data/nginx/cache keys_zone=one:10m inactive=60m;
Now you can't invalidate cache for selected pages.
the inactive parameter in the proxy_cache_path directive:
Based on the fact that you can't find docs on it, I'd be a little bit wary about relying on it in production.
The simplest thing you can do is remove the cached file manually:
Now, when you want to invalidate that page and cache again
I recommend my blog post if you want to learn more about Nginx caching.