Download PuTTYgen, and execute it to generate a SSH2-RSA key.
Then save this session (I'm assuming you also set up the account, IP address, etc.
Click the Generate button, move the mouse around, until the key pair is generated.
It's free, contains plenty of features, was created in 2000 and is still activity maintained.
When I copied this file over to Windows, the system insisted on splitting the single long line into multiple lines with "\" between the lines.
A more secure way is to store your private key in an encrypted file, using a passphrase.
Once this is done, you just have to select the session, and you are logged in.
ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAgEA5Kp+G9z8eE0MpPZL9JZksstIa3L9JEND6ud11IiD6f1jw/7Lv7CvZcCdkOVMT+DlTbryRoqfbNMLkjajqNTUGBAscTduUtPYuQtYEQgtbJdhyHtTHK9XwiKeQr7LjHZcEg3osYh+MzZFscldQMaZ26AKh81EC9XuIu98snjOBM0ysb14Uu7hMvti5Xd3kSW7ctL2j1ORuRgZX6LHihaezvsBFI5SlZ4vyxymRKQnyV6OkMNMXESJpXh3cTMIIGtDJtbbYvh5Qs0f3O1fMiQYyz2MjGphdzBihq85a1SHx0LBk31342HsCiM4elZkicmjmy0qYGShmzh1kfZBKiBs+xN4tBEyjRNYhuMGP2zgpr9PFO1buYdLah5ab3rubB5VbbRP9qmaP2cesJSN91luc099gZ+CgeBVIiRr1EYTE8TqsSBdvmu3zCuQgDVcSAoubfxjM4sm3Lb6i4k4DJmF57J6TrcyrSIP9HPDuBuYoOfSBKies6bJTHi9zW2upHqNlqa2+PNY64hbq2uSQoKZl1SxwSCvpbsYj5bGPQUGs+6AHkm9DALrXD8TXivQ+IsWEV3wnXeA4I1xfnodfXdhwnybcAlqNrEwKb3wGWdf3d8cu+mJrJiP1JitBbd4dzYM0bS42UVfexWwQSegDHawAby0MW0= rsa-key-20160822
in above script SLEEP is for wait in between commands in miliseconds.
Personally, I would copy the file over to the Linux machine, and then edit it, because editors like vim are much more tolerant of long lines.
If this is the first time you have created the ~/.ssh/authorized_keys file, make sure the directory and file are not group or world readable.
I'd use the 'J' command to join two lines, then search for spaces and delete the spaces between the lines.
MTPutty - Multi-tabbed putty (portable version because of corporate installation limitations for many users) as it helps to connect to many servers and its easy to organize in folders with this free software.
Combining two different packages for a security solution can be  dangerous.
Opening PuTTY from WinSCP can be done from either the login window, or from the SFTP window, which I find extremely handy:
Once this is done, then you have to create a PuTTY session where the private key is used.
Then save the private key in one file, and the public key in another file.
You should first use PuTTYgen to create a key pair, then install the private key in PuTTY, and copy the public key to the remote site.
I use WinSCP to “auto login” in PuTTY with a password.
The second is the key which should end with the characters "=" the third field is optional, and will contain what you put in the Key Comment field.
Link to get latest PuTTY binaries (and check the FAQ).
You have to edit this to a form that is suitable for your remote site.
I would like to explain more on Emrald214s answer on MTPutty as its a nice free software.
Strongly advise using the public key mechanisms rather than sending passwords from the shell.
This is the PuTTY-only way to do it, only using software from the PuTTY site.
In the PuTTY session, go to Connection=>SSH=>Auth and click browse and select where you stored your private key "It's a *.ppk" file.
If you want to preserve saved options (such as pre-configured window sizes and tunnel proxy) and load a saved session to auto-login, use this approach: http://www.shanghaiwebhosting.com/web-hosting/putty-ssh-auto-login
Once it's generated, your screen will look like this:
This software helps a lot in daily operation if you need to deal with many servers.
Log into the remote machine, and copy/edit, then append the public key into the ~/.ssh/authorized_keys file in the same format as the other keys.
That way the private key is always encrypted, and you only have to type in a passphrase once in a while.