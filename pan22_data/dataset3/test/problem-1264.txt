Where I've worked, I have encountered Perforce, Subversion (with TortoiseSVN) and Git.
Git has a steep learning curve, but it offers the most flexibility, especially with regard to working on parallel features collaboratively; I find Perforce and Subversion's branching capabilities to be lacking.
We don't have Gigs of stuff though so we haven't had any problems.
But remember, you can use a different version control system for your binary assets.
I have been using Mercurial for a bit now with some of the XNA development I've been working on with a friend.
For instance, you can get the Mercurial bigfiles extension ( http://mercurial.selenic.com/wiki/BigfilesExtension ) to have your assets stored in the same Mercurial repo, but only fetch the binaries you need when you need them.
Besides Perforce as munificent mentioned another non-free (although it also has a 2 user non-expiring license) is AlienBrain.
If you're going to have multiple people working on your game it's much, much easier in my experience to use a distributed version control system (I use Mercurial) just because it makes merges so much simpler.
After changing from Subversion to Mercurial for my hobby game project, I would never go back to Subversion because of how much easier it is to merge changes made by different developers in a distributed system like Mercurial.
Both Perforce and Subversion are better than Git in this regard, and I've seen both used for the task -- TortoiseSVN is great for non-programmers to work with when they just want to "get their stuff in".
I've been using Git only a fraction of the time I've worked with Perforce and Subversion, but for source control, I prefer it over the other two hands-down.