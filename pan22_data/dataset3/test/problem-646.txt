From my point of view, and for this project, it is also more important that the movement feels good rather than accurate.
This will apply a force to the ship, or whatever is running this code from its origin point, if you want to be more sophisticated, you can replace the "x" and "y" in the "physics_apply_force" command with a specific point (like the thruster's coordinate)
Some of that code is probably (read: clearly...) wrong and I figure I need an overall 'speed' value of the ship that I then affect with my two forces (gravity and thrust) but I can't for the life of me figure out how to do it.
if you do not have very many objects, in the events for the ship and the ground, add this event: "collision".
2) check the "use physics" option in all relevant rooms.
4) assign sprites to all physical objects, and in the object menu, create a suitable physics fixture.
I'm making a little Lunar Lander game as my first foray in to GameMaker, I'm wanting to have the ship land and take off again too.
However, the pseudo-code you both gave me examples for is very useful and will come in handy when I move up to using Unity in the near future or come in to a tricky spot in GameMaker again.
I've already asked this on the GameMaker forums but had no response so far.
3) adjust the gravity to the desired amount in the room setting.
Without physics: simply add or subtract from your image angle with your key presses, except you need to run this code at the end of every step:
My answer involves the use of GameMaker's Physics Engine, which may not be the right answer for everyone.
I'm new to scripting and programming in general and I'm having trouble with acceleration, in particular with gravity.
I have been away the last couple of days which is why I haven't replied since then.
If your ship has the right geometry, it should be possible to make it land like a normal object would.
2)Thruster: draw your ship with the sprite pointing to the right.
I've actually sort of figured this out using a different method.
If you want to make sure that it has landed on the proper side, simply check the angle it is pointing at when it lands on the place where you want it to be.
where "10" is replaced by the desired amount of torque.
when you add this, the system will ask you which object do you want the current object to collide with, choose "ship" is you are doing ground, choose "ground" if you are doing ship.
Then, add some placeholder scripts in the collision events so game maker doesn't automatically delete them as empty events.
If you are dealing with many colliding objects, create a parent object and add a collision event to it, with itself.
GameMaker has some built in variables (gravity and friction) which I wasn't using correctly.
1)Gravity and terminal velocity: These can be fulfilled first by the automatic acceleration created by the gravity setting.
I'll give the pseudo code a shot when I have a minute and see what happens.
1) check the "use physics" check-box for all relevant object, including the ship and the ground, which can be built from rectangular box(es).
The ways in which the questioner's requirements can be fulfilled:
They also tie in to the hspeed, vspeed, speed and (crucially) direction built-in variables too and I hadn't been aware of exactly how they worked until now and had been messing things up badly.