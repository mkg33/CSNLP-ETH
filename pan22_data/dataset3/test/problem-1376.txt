Tweak your inputs, and mind your draw calls and you're on iOS/Android.
This is not a problem that can be solved, it's one you have to consider from the outset even before you write your first line of code.
Unfortunately Apple kind of torpedoed that when they changed their Terms and Conditions to restrict which languages you can use.
What you say about the different platforms holds true today.
Some things just don't mix that well whatever you do.
And some ports just don't make sense without re-designing the core of the game.
This way you know you have a fun game before over-committing yourself.
A cross-platform development tool that is so new I don't necessarily recommend it is http://www.monkeycoder.co.nz/
However it was always a problem and will always remain a problem to port games from PC to console to mobile, and vice versa.
Write once and you've got Mac/Windows Standalone and webplayer based.
Indie or not, the biggest hurdle is actually design.
The biggest hurdle then is resources, and that means a lack of time most of the time, but also lack of know-how and possibly finances (license fees, buying devices, etc).
Use C/C++ and SDL and you can write your program cross-platform on PC-like machines, probably much more smoothly than years ago.
It has just become more pronounced in the recent years by allowing Indie developers to program for consoles (or developers hacking access to it to create homebrew games) and by the rise of mobile devices powerful enough to run games.
Porting has the same problems it ever has, but there are more devices to port to.
The Unity engine gets you a huge chunk of the way there.
Also, development for the 360 is done in Windows using C# as language, the iPad can only be targeted on Mac OS computers and using C, C++ or Objective-C. Or Javascript, if you prefer.
One approach might be to create a framework that uses the same conventions across multiple languages/platforms, then it is just a matter of tweaking syntax to port games.
You might want to launch your game in Flash, which can be developed quickly and reach a large audience, then if it is successful port to iPhone, XNA etc.
Unity goes across pretty much everything now, although on XBOX it will get you on XBLA but not XBLIG, so not an option for smaller indies.
It claims to be a cross-platform app that supports all major desktops and mobile devices, and Flash, from one code-base.
As you say, a game that runs on Xbox360 and iPad might work, but they also need to be fundamentally different in terms of design.
While it is too new to really judge, it has a great pedigree: it's creator previously made Blitz3D and BlitzMax, which were great development tools for indie game developers.
The 360 has a controller, the iPad a touch screen.
With projects like MonoTouch and XNATouch it was looking like XNA might get you on most platforms with a bit of tweaking.