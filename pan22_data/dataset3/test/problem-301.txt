I don't know of any that take a whitelist approach, blocking anything that isn't HTTP on port 80.
Most typical firewalls will do basic port-based rules (if it's on port 80 it's OK, even if it's really some non-HTTP protocol), or they will do deeper inspection and deny flows which match a specific pattern of badness (file extension, virus shellcode, etc).
I want to create a simple JSON-based protocol to allow my game to talk to my custom server, but I don't want embed it in HTTP.
Most typical home firewalls don't block outbound connections by default.
node.js might be a good fit on the server-side for this sort of app.
Firewalls that do deep packet inspection will flag this as non-HTTP and may react.
In fact most home based equipment do not even have a firewall, they just rely on NAT to prevent inbound connections.
I would also add that anyone who has a firewall filtering outbound connections has the experience to open up needed ports outbound as well.
So personally I wouldn't worry too much about sending out port 80.
As a bit of clarification, I am mainly concerned with the typical home firewalls that most people might have, not a high-end corporate firewall.
I won't use the same server as a web server, so I don't care about losing port 80 for real web serving.
What issues do you see with using HTTP - there are plenty of people using HTTP for chat servers etc.
Other thing to look at would be Google's work on SPDY - http://en.wikipedia.org/wiki/SPDY - Chrome uses it for a lot of communication with Google's properties.
If I send a custom text-based protocol request to my server on port 80, will firewalls block it for not using HTTP format, or do they only care about the port number?
Paranoid corporate-types don't want you running SSH over port 80 so you can tunnel out of their network policy framework.
that have the same sort of behaviour as game engines communicating with servers.
However, run of the mill Linksys/Dlink/Netgeear commodity grade firewalls generally don't have such features.