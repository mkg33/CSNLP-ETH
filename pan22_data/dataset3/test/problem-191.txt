This way, I know I am requiring a file relative to the file that the require statement is in
You might also look into __autoload() in php 5.2 or lower or SplAutoloadRegister() in php 5.3 and 5.4 to have create functions to autoload your classes from files based on how you want via  creating that magic function or in the latter case registering a autoload function.
This was asked long ago, but for anyone finding it via google, the correct answer is to make sure this file is in the PHP include_path that is set in the php.ini OR add your path to the php include_path via the php.ini or at runtime via set_include_path() php function [ http://php.net/manual/en/function.set-include-path.php ]
You file can then be accessed via include('myfile.php') or require('myfile.php') that both search the PHP include_path as well as the current directory for the file to be included.
Keep in mind that when using require '../[something]', you're referring to the working directory of PHP, not the path of the actual script.
I'd check all the directory permissions and ownership, and the file permissions, and if those are all right, I'd check for a rogue .htaccess file or some other piece of lock-downery that may be tripping you up.
If Apache's document root is /var/www/html, then you shouldn't have any trouble pointing at something in /var/www/html/includes/ unless there is some specific directive (or permission issue) blocking it.
Well, far as I can see it should work: I use similar directives all the time.