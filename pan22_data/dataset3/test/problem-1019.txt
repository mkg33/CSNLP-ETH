Over there, we only have one environment, the one Windows presents us with.
By "file manager", I mean applications that allow you to administer your files: create, rename, create folders, etc., like Nautilus (in GNOME) or Dolphin (in KDE).
You can use xdg-open <DIR> to launch the file manager on a directory.
As such, the notion of a default application is indeed effectively system wide.
If you ask XDG, then you'll have to check what XDG thinks this file manager should be.
Same deal for any other "environment", such as Gnome, or KDE.
It all depends how you might be trying to open one.
What you might perceive as default apps under Linux, such as what is stored in the $EDITOR environment variable, is not as much a "true" default app, as simply a convention used by a lot of people who write system tools and scripts.
There is no such thing as a "Default File Manager for Linux".
The case for default apps seems to come mainly from Windows.
You might be able to query some xdg application to find out what file manager is used.
as a Linux user, I see that some applications can request a path to be opened and this causes a file manager to be launched.
I'd like to do this programmatically, but how can I know which is the default file manager?
xdg should be desktop-environment agnostic (eg xdg-open will pass the arguments on to the correct file opener).
If you have all of them installed, it's perfectly possible (and fine) for each of them to have a different "default file manager".
Feel free to define $FILEMANAGER, if that suits your use case.