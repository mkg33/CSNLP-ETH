What you gain from doing this is the ability to have a cache hit at your ISP's server, which could save you dozens of milliseconds in many typical setups.
I've seen the need to resolve some domains differently on the internal network vs. the external network, once again a local DNS server was the answer.
For example, I've seen cases where the ISP's supplied DNS servers have a lot of latency.
If someone else is worrying about CPU load, you don't sacrifice speed of your own machine.
Is running a local DNS server the best solution to that problem.
I've had mail servers be slowed by the providers public DNS resolvers.
Unless you have a security concern, or you ISP's DNS servers are somehow limited, you should use them.
If your ISP provides you with a recursive DNS server that
The DNS system was designed to run more efficiently with regional caching via your ISP.
I've often seen people deploy a local DNS server with really no good justification for doing so.
There are lots of reasons why you might want to use this setup - say, you might be running .local zones for your site (or split-horizon on your site's domain), or you might want to blackhole DNS certain zones.
I've seen local DNS servers deployed for very good reasons.
By installing a local DNS server, this issue was resolved.
Then there aren't many significant benefits for recursively resolving your DNS queries.
You can set up a DNS server to forward recursive queries instead of resolving them itself, and simply have those requests go to your ISP's server.
Installing a local caching server fixed this latency.
We tracked and measured this latency, up to 800ms in some cases.
IT solutions are highly dependent on the environment that they are deployed.
In this case, you've added another service to be maintained, another vector for attack, and another link in your network for which you are responsible.