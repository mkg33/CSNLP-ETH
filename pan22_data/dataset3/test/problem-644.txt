This may not sound like much given you have a Docker Windows client but it's useful if you have Linux toolchains that include docker for it's client-side functionality.
From: https://blog.docker.com/2016/07/docker-for-mac-and-windows-production-ready/
This creates aliases for all the files in the DOCKER_BIN directory:
Since they end in .exe the easiest option is to create aliases.
My question is: Can you run Docker natively on the new Windows 10 (Ubuntu) bash userspace?
Something like the following in your .bashrc should work:
My understanding was that the primary limitation of running docker on other OSs was the Linux Network containers that made it possible.
/mnt/c/Users/YourUsername) and you should be good.
Once Docker 1.12 is released and the Linux Docker client is separated, you should be able to run the docker client in Windows 10 bash.
Recently Microsoft announced a beta of a Ubuntu linux user mode running natively on Windows 10.
One caveat: you'll get an error message like "Unable to translate current working directory" if run from a Linux directory.
This means if you've already installed Docker for Windows you can simply invoke the docker binaries installed under C:\Program Files.
This can run binaries compiled in ELF format on Windows (unlike cygwin which requires a compilation.)
Docker does not currently work in the current build (14316) - assuming you can get it installed.
As of the Creator Update (released publicly on June 13, 2017) you can run native Windows executable directly in WSL.