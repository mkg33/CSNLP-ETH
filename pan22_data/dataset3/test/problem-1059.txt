You can check in Windows Task Manager which program is using so much RAM.
Windows generally does a very good job of making these tradeoffs, and I wouldn't recommend trying to tune it too much.
(For example, if you disable your paging file, two months from now you may find you're editing a large image or something and are simply unable to save it because the memory allocations always fail.)
You may want to disable swapping entirely to see if it is the cause of the problem.
Also, there are Windows Services which I prefer to turn off, as they tend to make a lot of unnecessary disk I/O: Superfetch, ReadyBoost, Windows Search, Windows Defender, Volume Shadow Copy and Distributed Link Tracking.
The tradeoff is that when these applications eventually do need to access the memory pages that haven't been accessed in a while, they may not be resident.
If it kept applications in RAM, even when they hadn't been used for a long period of time, throughput would suffer.
In this case, the application has to wait for a moment as they are read back into RAM.
Windows makes the decision to page out memory that has not been accessed in a long time.
Windows has to make a tradeoff between throughput and latency.
From personal experience, I find swap file unnecessary on PCs with 4GB+ RAM.
The used, but idle physical RAM would reduce the RAM available to other applications and the system.
Windows will be trying to maximise the amount of free physical RAM as that's useful, so upgrading your memory to 8 or even 12GB would improve the responsiveness of your system - especially if you are running several "resource hungry" applications.
I don't know the algorithm it uses but I wouldn't be surprised if it looked at the length of time the application had been idle.
You can make the latency better, but there will be a huge penalty to throughput and, worse, you can get into a state where some things just don't work.
And that makes it less likely that Windows will have to make any tradeoffs in the first place.
This allows more physical RAM to be used as a disk cache, and it significantly improves application throughput.
Windows will have paged the programs out of memory and onto disk.