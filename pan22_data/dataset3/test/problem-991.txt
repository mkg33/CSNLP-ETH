That was the strategy behind FLV, to compress the video code for download, and then decompress it assuming fast CPU and lots of memory in the client.
I'm not a flash developer so I don't really know, but if your game needs this much memory it probably has a lot of supporting code, which is where, even on "gods-own-machine," you may run into issues.
I watched the memory usage as it slowly crawled back up to the 970~ mb mark as all the game's various assets loaded.
Investigation lead to Firefox/the flash plugin taking up almost a gigabyte of memory usage.
Do you want people to play your flash game on their Netbook and/or their flash supporting Playbook or Android tablet?
If so, then memory usage over and beyond 50 MB is likely going to be an issue.
Absurd, but I'm sure you can point at the game and say it has millions of users.
I would differentiate between download size and memory size, some assets are large, other game related data structures bloat the client's memory but require little bandwidth to download.
The issue, may be Flash's ability to address this much memory quickly.
I thought this might have been a fluke, having experienced many browser-based memory leaks over the years, closed everything and tried it with another browser.
If you only expect your game to be played on tricked out gaming rigs, then taking up 100-400 MB memory is likely not going to be a problem.
FWIW, I was helping out a family member complaining of a slow PC.
(yup, just checked, 14 million monthly users, blah)