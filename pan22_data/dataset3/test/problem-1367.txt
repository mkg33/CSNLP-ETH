Sure, you can do that, but sometimes you really can't wait to fish a key out of your pocket to get into the bathroom.
Using SSL where it's not needed would be a lot like putting locks on all your doors.
As soon as you submit the form, they switch to HTTPS (or so you hope).
Your browser may have accessed the form using an unencrypted connection, but the submission is the real critical part.
I've left my credit card information at I don't know how many web shops, and I noticed that some are very "sensitive": they go to HTTPS as soon as you go to the checkout area, which is good.
The point is: you don't know in advance whether they will encrypt your data when you submit, or not.
Faster to service == less resources required to serve the site, less resources == less cost, less cost == more profit.
I think it would make me, as a customer, feel a lot safer.
So why don't web shops just do everything in HTTPS?
As far as knowing whether you're going to be sending your card data down the tubes without a bodyguard, if the submission page is HTTPS your browser should issue a warning saying "this page will be sent unencrypted" if the form submission URL isn't HTTPS also.
It's a fair bit faster to service requests using HTTP, especially when the browser isn't pipelining requests.
Also, is there any way to find out in advance if one of those "unsensitive" web shops will switch to HTTPS, before I submit my credit card information?
http://media.grc.com/sn/sn-217-lq.mp3 is a link to the actual podcast (#217), and http://www.grc.com/securitynow.htm is a link to the whole collection of Security Now!
Even knowing and understanding this, I still prefer to access an order form over an SSL connection.
That means that the form's action URI needs to use the HTTPS protocol.
(Apart from the fact that it's much simpler to set up for the admins, which I don't think is a very good excuse.)
Steve Gibson has a great discussion about this a few weeks ago, and explained why HTTPS needs to become the standard for all web communications (like Google is suggesting with SDY).
However, if the form page isn't secured, then normally you won't get a warning (in theory, you could have your browser setup to warn you for every form submission that isn't HTTPS, but that would drive you insane and nobody does it).
I've even seen one that redirected to plain HTTP immediately after doing something in HTTPS -- Firefox's nice coloured HTTPS indicator in the address bar flashed before my eyes and was gone instantly.
Technically, in order to call a transaction secure, the only part that needs to be encrypted is the form submission.
All of this goes double, triple, or more when the shop is using a hosted cart or site or whatever -- in that instance, the vendor has no control over what the site does, and the person who runs the overall site has no motivation to make you feel better unless the vendor takes their business elsewhere (and let's face it, working out that you're not making sales because your shop isn't sufficiently SSL'd isn't the sort of thing that someone who's relying on a third-party cart host is likely to come up with).
Some, however, let you enter your credit card information on a page that's on regular HTTP.