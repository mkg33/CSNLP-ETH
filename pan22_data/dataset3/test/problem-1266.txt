The Unity documentation has a good example on how to achieve this with a useful example.
Essentially what you are doing is calculating the angle between the enemy and the target.
http://docs.unity3d.com/ScriptReference/Vector3.Angle.html (example included below for illustration purposes)
Providing both of these values gives your enemy detection cone a look similar to the diagram below.
Once you have this value you can then check if the angle is less than whatever angle you want to be the enemy's field of vision.
This in itself is enough to provide a reasonable detection system but you may also want to factor in distance from the enemy (as the enemy may be short sighted?)
If the angle is less than your field of vision then the target is in the enemy's field of vision.
This can be easily discovered through the use of the rather nifty Vector3.Distance function which is used as shown below.
You achieve this through getting the forward vector of the enemy and then using Vector3.Angle to calculate the angle.