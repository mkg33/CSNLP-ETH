A more modern example of what I'm trying to do would be the Soft Edge 3D Doodle tool in Paint 3D.
I am trying to find (or maybe create) an algorithm for creating a smooth, rounded 3D mesh given a 2D outline.
I'm implementing this in C#, in Unity, but I'm not necessarily looking for code.
I'm trying to recreate a system from a Gamecube game called Amazing Island, and you can see an example of how it works here.
The closest thing that I've been able to find is how to take an outline and triangulate it to make a flat 2D mesh.
Here you can see a video, which demonstrates the technique.
It would be nice if I could find a way to have non-simply connected shapes, but it's not necessary, and seems like it would be significantly more complicated.
I can get a list of points representing the vertices of the outline, which seems like it should be the first step.
A description of an algorithm, or even a good idea for how I could approach the problem, would be great.
I'm pretty lost on how I can take that and turn it into what I want though.
The result should have smooth, curved, somewhat organic-looking edges, rather than simply extruding the shape into a prism.
Basically, you draw a shape with a freeform pen tool, and the shape is "inflated" into a 3D mesh.
Fibermesh takes 3D input curves and interprets them as the contours of the surface.
It then creates a smooth surface by using an optimization technique.
Each shape can be assumed to be simply connected (meaning shapes with holes through them are not possible), and it can be assumed that the outline won't self-intersect.