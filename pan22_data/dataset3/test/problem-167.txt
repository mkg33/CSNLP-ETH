Developer rule number 1 - "it's not my fault it must be the sysadmins"  Of course developers think virtualization hurts their app.
Every company I have worked for I have implemented virtual technology and have not heard problems stemming form those solutions put in place.
Maintanance should be very similar if not the same, but deployment is much easier (which may not be a great thing).
I'll just say that the additional convenience of switching to virtualization has outweighed any performance issues that might have otherwise impacted my opinion.
My stance is that my machines that need raw performance don't get virtualized.
I have not heard of performance problems when the right hardware per need is used.
Everything else is making the transition as it becomes possible for me to convert them.
I'm a big fan of virtualizationand encourage all of my customers to consider how they can save time, money and spac doing so.
Unless you are deploying servers alot you are not going to see much saving there, however Licensing costs can often be less expensive
On the admin side you gain a lot of flexibility, and a lot of redundancy.
Its expensive but in the long run there are a lot of added benefits depending on the budget and what you expect out of the solution.
Both Microsoft and VMware have healthy offerings so you can choose a vendor that fits your needs.
If you do not spend your money where needed like on a SAN or hard drives in general you get what you pay for.
Performance can be an issue, but only if you're either trying to virtualize something that's too resource-intensive to easily virtualize, or if you're overloading a VM server.
I have been involved with virtual server technology since 2006.
On the developer side, you can customize the exact os/software layout you need, and the admins don't give you as much crap since it doesn't eat up a whole machine.
I love virtualization, both from the perspective of an administrator, and from the perspective of a developer.
If the VM is too slow, you can easily migrate it to a faster machine, give it more resources.
In the event of a disaster, you can flip the whole thing to a new machine.