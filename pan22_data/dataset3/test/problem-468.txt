Each byte has a memory address, so the 32 bit address bus can be used to access 4 gigabyte of memory.
Try a small scale example to understand the concept.
You could also express that as bits if you like, i.e.
If you have 2 bits(binary digits), you can store 2^2 numbers, that's 4 numbers.
If you for example had a 16 bit address bus, and each memory unit would be 4 bytes, you could access 2^16 * 4 bytes = 262144 bytes.
The unit that you express the result in, is the same unit as you express the memory unit in.
So if you want to reference four apples, each one can be associated with a number.
In this case, memory locations, each being a byte and each byte has been given an address.
The possible number of addresses doesn't have a unit, so while the address bus is 32 bits, the number of possible addresses isn't 4294967296 bits, it's just 4294967296.
The amount of memory that you can address is the possible values of the address bus (2^32) times the size of each memory unit (1 byte), so 2^32 * 1 byte = 4294967296 bytes.
So similarly, 32 bits, lets you store 2^32 ~= 4 thousand million numbers('cos 32=20+10+2 so 2^32=2^20+2^10+2^2), and 4 thousand million is 4 billion or 4 Giga, so that's 4 Giga objects.