It will be hard to perform time based actions when you aren't using a game loop of some type.
Though I think the above comments are a bit confused as with most games, there is no waiting around for inputs its always updating.
I would either do straight text-based game, or switch over to using a game loop, if you want those added features.
If it's text-based, why not just store the starting time in a DateTime?
Once the timer runs out, a callback function could be triggered and you would then update player age, plant status, etc in that callback function automatically.
And using a BackgroundWorker I think is better than multi threading it in this particular scenario.
Then when you need the time, just subtract that value from DateTime.Now, pull the TotalSeconds from the resulting TimeSpan, then add that many minutes to the starting DateTime?
Once you are done with that, then make sure to restart the timer again for the next aging cycle.
That is the standard way of getting the time from C#.
You could always have the game loop keep running, even if there is no text submitted, and when there finally is you can react upon that text.