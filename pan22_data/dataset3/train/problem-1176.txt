If LetSet was a function with only one parameter, this would cause a Let coercion on the RHS, if an object is supplied.
Only because LetSet is parameterized, the object itself is assigned.
I wouldn't use either version of this code, and use explicit built-in keywords (Set) and operators (=) instead, as appropriate.
if the RHS is a range, the usual behaviour of a Let assignment is that the values in the range are assigned instead of the object.
The idea is to use For Each Controls loop to make the correct assignment.
So, following the principle of least surprise, I would suggest to use the first version.
A Property Let procedure is more problematic though, because such procedures always receive their value/RHS parameters ByVal - regardless of whether or not it says ByRef; M.Doerner's answer gives more details about the implications of this.
Not knowing what type you're dealing with means you're coding late-bound, which isn't ideal in the first place.
Although you think that the second one is closer to your desired syntax, it is actually somewhat confusing.
Here I use Matt's suggested name Assign to touch up the API Call used in Sancarn's answer
The first method which springs to mind is to use a collection to catch the function result.
But then, this is involving a stack frame for an otherwise very straightforward operation - the method intending to be generic, it cannot bring any additional logic to the table, and ultimately comes off as redundant.