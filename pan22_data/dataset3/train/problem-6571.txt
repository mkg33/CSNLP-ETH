This is acheived through adding a "Binding" for each domain name (called a Host Header) to tell IIS which "site" to serve up to the client.
A different solution is to set up a new site for example.com in IIS and use an http redirect to refer requests to www.example.com.
See a picture here: http://www.iishacks.com/wp-content/uploads/2008/10/host-header-iis7.gif
You will need a binding for "www.example.com" and a binding for "example.com".
But if your web pages or application code depend on the url being www.example.com, they won't work properly.
In apache I would add www.example.com as an alias to example.com and done.
We are using ASP.NET 3.5 with a SQL Server database.
Even if you have the DNS records for example.com and www.example.com pointing to the web server, you must still tell IIS7 which site to serve up when it sees these domains.
Typically you have to actually add a DNS record for example.com to your DNS in order for your site to be accessible at both example.com and www.example.com - if both of these records already exist in the DNS then it's probably an IIS setting somewhere
Your users' sessions will continue on www.example.com, and all your site code will work as normal.