It's similar to how you can capture 2D pictures of our world on camera.
To put it simply, you can imagine projection lines going from the virtual camera in 3D space to each 3D point by passing through the view plane.
The other type of projection is perspective projection where these lines converge making more distant objects appear smaller and giving more realistic results.
The point where a projection line intersects the 2D plane is the projection of the 3D point.
This type of projection isn't realistic but is useful in certain instances such as drawing 2D graphics using a 3D engine (the HUD for example).
This page has some figures that could help you visualize the process.
In orthographic projection these projection lines are all parallel; the distance between the object and the camera doesn't make any difference for the projected shape.
Note that although projection implies discarding the Z coordinate, in reality a transformed Z value is still used a measure of screen depth so that we can tell which objects are visible and which ones are occluded by other objects.
Projection is one of several transformation objects undergo in the graphics pipeline, and is usually done using a projection matrix.
This is done by projection, where each 3D point is projected onto a 2D view plane.
The 3D environment is described in terms of X, Y, and Z coordinates, but ultimately you need to map that to a 2D screen with only X and Y axis.