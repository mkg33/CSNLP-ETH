In my code I am reading a CSV file directly into pandas.
I am reading, a machinelearningmastery.com post about improving neural network performance, and I am attempting to normalize my own data set with the tips mentioned in the post using sklearn preprocessing MinMaxScaler.
The process appears to just return a numpy array, but I use Pandas during the machine learning fit process.
The snip below is what the data looks like with column names:
Is there another method to madness that I don't need to dependent on column names?
For example, I fit a lot of models like this process below to differentiate target and input variables.
From the post, I normalize the data with this code below.
If the df2 = scaler.fit_transform(df) leaves columns in place but just removes names, I could just use a column number to .drop - differentiate target & input variables.. Demand is the name of my target variable, and I could just call the second column..., right?
What's happening, is my column names are stripped away and I use column names a lot in dropping & selecting.