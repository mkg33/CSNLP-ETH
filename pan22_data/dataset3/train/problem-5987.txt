Other items I've seen suggested related to this kind of attempt recommend monitoring for the failed attempts and blocking the source IPs - eventually the same IP will be used for another probe, so by detecting and blacklisting after attempts to log in with a nonexistent account you gradually reduce the threat at the cost of increased firewall rule processing.
I'm not sure about your actual implementation, but here is some general advice:
Can you help me understand how this can be done from different IP addresses, can it be effectively blocked?
Audit your passwords (with john the ripper or similar), and see if you can increase the timeout for login.
Here's some discussion and analysis of a "slow brutes" botnet attack that started in 2008: Slow Brutes Final Roundup
I notice that each name is only tried once or twice.
It appears that one of my servers is undergoing a sophisticated dictionary attack on ssh, in that I am seeing a bunch of usernames being tried on on of my servers alphabetically with password failures.
Install denyhosts or fail2ban - it will block by IP after a certain number of attacks.
and does the slow persistence of the attack (probably will take several months to go through the alphabet) mean anything specific?
Other discussion from the same time period at this site suggests
denyhosts operates on /etc/hosts.deny and I believe that fail2ban operates on iptables rules.
I assume they are trying "password" or the user's username - but can i verify this?
Also, it might be best to not block after only a single connection attempt - typos do happen.
I'd also be interested to know if anyone else is currently seeing similar activity on their public ssh servers (ie.
are we a specific target, or is this attacker blanketing thousands of ssh servers with this attack?)
As long as your users have strong passwords of 8 characters or more, at that rate it will most likely take around 3000 million years to brute force it!
Also, is there any way for me to reveal what passwords (or even hashes) are being tried?