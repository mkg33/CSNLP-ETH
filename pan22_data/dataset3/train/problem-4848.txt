There are commercial and free tools that are "XML aware" and will do what you need without much hassle.
I wrote a simple python tool for this called xmldiffs:
(Think of it as applying an XML code style filter.)
Normalizing first removes any formatting differences that don't affect the actual content of the XML.
Then "normalize" both documents before comparing with a non-xml aware diff tool.
Alternatively, you could accomplish ordering the fields via xsl:sort or by specifying a sequence order in your XSD (which would make any existing documents invalid by definition.)
There is also apparently an eclipse plugin that will compare XML.
Two approaches that I use are (a) to canonicalize both XML files and then compare their serializations, and (b) to use the XPath 2.0 deep-equal() function.
Python-based xmldiff looks like a very attractive solution; it claims to "extract differences between two xml files and to return a set of primitives to apply on source tree to obtain the destination tree."
If you have things that you consider equivalent, but which aren't equivalent at the XML level - for example, elements in a different order - then you may have to be prepared to do a transformation to normalize the documents before comparison.
Both approaches are OK for telling you whether the files are the same, but not very good at telling you where they differ.
A commercial tool that specializes in this problem is DeltaXML.