and then set newvar=orange (just as if the statement had been set newvar=%var2%).
The variable within percents is expanded when the line is parsed.
The variable within exclamation points is expanded after parsing, just before the line is executed.
The purpose of delayed variable expansion is somewhat complicated –
(because %1, the first argument to the subroutine, is var2)
But I’ve found a kludge for doing it that doesn’t involve a temporary batch file
If called from within a subroutine (i.e., someplace you got to with a call statement),
When we jump to :kludge, the statement is first transformed into set newvar=!var2!
to terminate without blowing away the parent, interactive, Command Prompt.
It uses a subroutine and a trick called delayed variable expansion.
Otherwise, they act like a jump to the end of the batch file, causing the batch job
The percents around the outer variable name are doubled to delay the expansion until after the inner variable has been expanded.
but the important thing to know is that it lets you reference variables
The CALL command provides an extra level of variable expansion.
It must be first enabled with SETLOCAL ENABLEDELAYEDEXPANSION.
(or looking at every variable to find the one you want).
I agree with AFH; you need to get CMD to “double-parse” the set statement.