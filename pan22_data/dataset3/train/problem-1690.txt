There's no way as far as I know to have the browser segment localStorage based on anything other than the origin, and there's no way to change the origin other than changing the URL.
If not, are there methods in Javascript that will disable sharing between these entities?
If your goal is to prevent server1 from reading/writing to server2's storage, that won't be possible without changing the server's origins.
When accessing these servers directly, they naturally have independent localStorage objects, since their origins are different; in this case the hostnames differ.
If your goal is to segment your stored data by site to avoid conflicts, you'll have to do that manually by assigning each site some unique key under which it can store it's data.
Is there a way to disable sharing of localStorage between proxy, server1, and server2 in this configuration?
Now, each of the servers proxy, server1 and server2 all pass the same-origin test, since they each have origin=https://proxy.example.com:443.
When I place these servers behind a reverse-proxy, they are accessed as follows:
Consequently, the localStorage object is shared among them and this sharing is confusing the apps on server1 and server2.