In the snippet below the three exceptions I declare in the throws clause are all thrown by BeanUtils.setProperty(), which is a third party library.
Programming errors should, as much as possible, produce unchecked rather than checked exceptions.
However, there is no reason to handle the exception raised by a misspelled property name.
Don't declare any exceptions types, those are only for exceptions that your caller should handle.
Is it better to wrap them in my own RoleBeanException and throw that?
For example, you should handle the IOException raised by attempting to open a file that isn't there.
Programming errors in general should produce unchecked exceptions.
In this case, you should catch all those exceptions inside this function and rethrow them wrapped in a RuntimeException.
Checked exceptions are for circumstances that will occur during the normal operation of the program and thus should be handled.
Is letting these three exceptions "bubble upwards" with a throws declaration bad style?