As at MongoDB 3.4, when a primary transitions to a non-primary state (eg.
The MongoDB manual has some information on how to Evaluate Performance of Current Operations.
If the load was coming from suboptimal queries that were terminated on the former primary (or due to other resource contention), you could perhaps have avoided reconfiguring your replica set by finding and addressing the root cause.
If you have long running queries which are likely to be interrupted by a restart you could consider:
You should also implement a monitoring solution (if you haven't already) in order to capture a baseline of normal activity and help identify metrics that change significantly when your deployment is under load.
A recommended area to investigate would be why your primary was heavily loaded and why a change in primary would have reduced the load significantly.
Cursor state is specific to a given mongod, so you cannot resume a cursor on a different member of the replica set.
as the result of an election) all active connections are dropped so they can be re-established on the new primary.
Generally electable secondaries in the same replica set should be identically provisioned in terms of hardware resources, so exchanging server roles should have pushed similar load onto the new primary.