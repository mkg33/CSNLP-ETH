As you can see, I am playing the footstep based on a timer.
I thought of making a prerendered 10s soundfile and looping that in gametime, but than the playback won't fit when the gamespeed rises.
The correct way to do it is by calculating how much time passes each frame and then firing the sound at the frame the foot hits the ground (or maybe a few frames before it if you still have issues).
I am developing an XNA-Game, which is pretty much a runner game (side-scrolling).
And as it turns out, I am having quite some problems with the footstep-playback.
Try to steer away from timers and the likes as they interfere with the linearity of your game loop as you never know exactly where you will be in code when the main thread is halted to execute the timer code.
Which are imprecise as they will only update when the CPU feels like it (just like when yielding threads).
Another advantage of using the game loop for everything is that you can easily speed-up and slow-down time and everything will react to it.
The following is in C#, but I am quite sure that anyone will understand it:
Now I am in the middle of adding sounds to my game.
I am using this method, since the gamespeed gets higher during gametime (I can change the interval in that case).
The reason your sound is lagging is because you're using a timer event.
In a game the game-loop is the artery of everything time related.