Also, most Proxies and Firewalls will not let connections to those ports unless specifically configured to do so (Without configuration, Outgoing proxies won't be listening to non-default ports, hence will not forward the request to the webservers, while Firewalls would simply block non-TCP80/443 connections attempts)
However, IANA has assigned 3 HTTP-ALT ports for both TCP and UDP.
After that, the http server will handle the communication and then will consume resources.
Source of port numbers: https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml
Although admittedly naive, isn't it somehow intuitive to think that server performance could somehow be increased?
This means that you do not have to specify the port (http://www.example.com:80, https://www.example.com:443) when using a web browser.
Don't mistake a different port for a different physical connection or a higher network bandwidth or server processing performance.
The server doesn't waste resources by handling connections in one or more ports.
Using these ports is also acceptable, but you will be making the life of server admins hell.
Many ISPs throttle outbound TCP/UDP ports 80 and 443 (IANA defines as HTTP and HTTPS, respectively), and in this case, using those ports will detract from site loading speeds, etc.
Server resources are allocated to handle connections, and the port number is just a way to connect a specific program to a specific connection.
If you want to have a webserver listening on any other ports, the users have to manually add the port to the URL, or it has to be encoded in any link to that particular port.
Port 80 & 443 are the "default" ports for HTTP/HTTPS
As everyone else on here has said, it is basically pointless to host a web server on any port other than port 80... unless you're hosting it from home.
Therefore, this is not a method to increase performance in any way.
They still come over the same wires, go through the same network interface hardware and driver, and so on.
And the server knows that anytime he receives some request on port 80, he'll handle it to the http server.
The only possible exception to this is if you were to associate two different demons (or two copies of the same) running at the same time to the two different port numbers, and if each of these demons would scale up extremely badly with load.
For example: the HTTP server knows that he'll listen to connections that come in the port 80.
Why isn't it sensible to dedicate more than one TCP/IP port to http?
If you were to send two packets to a server, in terms of resources the server expends to process these two packets it doesn't matter if one of the two have different port numbers or the same port numbers associated with them, the internal handling will be close to identical.
All of this limits what can be done at the TCP/IP level
One way of boosting performance would be by having a load balancing device/service listening to TCP80/443 which would then redirect the request to servers on different ports and/or ip (Local Balancing) or even different remote sites (Global Balancing).
What the server gets are TCP or UDP packets, which happen to have a port number as part of the address.