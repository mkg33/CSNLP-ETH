As I understand it (and I could be very wrong here), there are two chips a pi can use to produce PWM.
Flexible duty cycle and frequency (up to say 20kHz).
RPIO.GPIO uses DMA to time PWM (as opposed for instance to RPi.GPIO which uses software timing).
This will be a bit of a guess but will probably be correct.
The one other reference to DELAY_VIA_PCM I can find on the web claims it is "sw" pwm, which I assume they mean software.
The hardware timing source for RPIO.GPIO can be hardware PWM or hardware PCM.
So I have a project that is going to use audio and need to do some PWM to control a motor.
So with RPIO will I be able to use the DELAY_VIA_PCM setting to get hardware pwm, and still leave my audio channels available?
Jitter free (unless the system becomes very busy).
Any GPIO, more than one at a time does not introduce instability.
Only works on the GPIO with hardware PWM (12/13/18/19).
In the documentation, the RPIO library has settings for DELAY_VIA_PCM and DELAY_VIA_PWM the default.
PCM references the other chip that is not the default audio chip?
Any GPIO but more than one at a time introduces far more instability.
Hardware timing is much better than software timing but not quite as good as fully hardware PWM.
I assume DELAY_VIA_PCM uses hardware PCM and DELAY_VIA_PWM uses hardware PWM.