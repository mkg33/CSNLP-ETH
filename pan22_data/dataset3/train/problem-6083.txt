I then adjusted the Hyper-V settings for the server up and up and up until I was at:
I've also tried adjusting processor compatibility setting for "Run an older operating system, such as Windows NT".
There is the option of purchasing a fast physical server to replace the VM.
You might get reasonable performance with two processors.
If you give your VM a single core and assign it 100% of that core, you've maxed out what performance you can from that system.
My problem is with a virtual Windows 2000 server running on the above system.
Is there an inherent problem with virtualizing Windows 2000 server?
For more information on measuring CPU usage in Hyper-V, please check out this article.
Your Win2K VHD will be running multi-processor code indefinitely after that, even if you go back to a single virtual CPU.
You can only run a single CPU while using Windows Server 2000 on Hyper V.
Thanks in advance for any suggestions you may have.
Second, measuring CPU usage of the host server is not as simple as using Task Manager, since Task Manager is itself running in a virtual machine.
You need to go to device manager and change the HAL from the single processor HAL to the multi-processor HAL.
My memory says that there were about six binaries that changed.
Our shop lacks the expertise in FoxPro and the business decision has been made that the effort is better spent in a rewrite.
Ideally I would like for the host to go to 25-50% utilization when the Win2000 VM is pinning.
Is there something else I can try to capture more CPU cycles from the host server?
Win2K was only using one CPU, even when you assigned it four.
There are most likely performance improvements to be gained in refactoring the legacy source code but this is not an option.
Calling Microsoft for support with Hyper-V and Windows 2000 will result in being told that the only supported configuration involves one virtual CPU.
Your first problem in your little test with 4 cores is that you're running an unsupported configuration.
This server runs IIS 6, some cgi-scripts and some asp pages.
That will trigger the installation of the multi-processor kernel, ntdll, HAL, etc.
Some background info: these are our old legacy services which are currently being rewritten in .Net.
Your other options are to deploy a physical box or deploy a hypervisor that supports SMP on Windows 2000 (like ESXi).
Breaking this assumption by virtualizing more processors will result in less than linear performance gains (cough, cough.)
Meanwhile, my Win2000 VM performed the exact same each and every time (pinned CPU with 3 accounts logged in performing the same search, or 30% CPU utilization with a single account performing a search).
However, I did not try the "Migrate to a physical computer with a different processor version" setting.
The kicker is that throughout all my tests (top configuration and bottom) my rack server sat at approx.
I am confident this would have a dramatic improvement.
Lastly, please understand that the reason that Microsoft isn't supporting more CPUs for Win2K has partly to do with the fact that the Win2K kernel has no idea isn't being virtualized and it has some hard assumptions that all CPUs run all the time.
However, I would prefer to have this server virtualized as I have been burned before by a machine needing a reboot... a task easily performed from my phone for a virtualized server.
My question is how can I give more horsepower to my Windows 2000 VM, or is this even possible?
With this configuration if I logged in to the web services with 3 accounts I could slam the Win2000 VM to 100%.
With that said, I suspect that you got exactly the same performance each time because Windows 2000 didn't automatically reconfigure itself as a multi-processor installation when you added virtual CPUs.
When you run unsupported, results are difficult to predict.
You might want to back up your VHD first, as these multi-processor binaries are less efficient than the single-processor ones when running single vCPU.
First, Windows 2000 only supports a single virtual processor on Hyper-V.