Part 3 is very ambitious and I do not know if anything fruitful can be said at all, but parts 1 and 2 are already nice for an undergraduate project.
In Spring 2009 Sasha Razborov taught a course on quantum computing.
I suggest something like providing current quantum computing development tools (such as libquantum) with the capability of taking advantage of CUDA-enabled GPUs to accelerate the simulations.
The course website contains some "project" ideas, as well as references to a few seminal quantum papers.
One project I would suggest is this: Try to develop a quantum algorithm based on quantum random walk for linear programming.
However, those problems and/or some of the references might spark some good ideas for you.
matrix and vector operations, which was what GPUs was designed for in the first place.
The "projects" on the page are really just "more involved homework problems", so they are probably not suitable in and of themselves for a senior thesis, nor will they take 11 months.
Quantum computing themed languages such as QCL have been created for thesis projects.
For the project you should first learn some basic facts about quantum random walks and how they are algorithmically useful, second about randomized simplex type algorithms and third trying to combine the two.
In fact any quantum computing based languages I've seen implemented on the web have been done for thesis projects.
In the book "Quantum Computing for Computer Scientists" they provide programming drills that collectively add up to such an emulator.
Quantum computing is more or less about linear algebra, i.e.
I don't know how helpful this will be, but maybe it will offer some guidance.