There are lots of tutorials online for fetchmail and procmail, and also tutorials for how to integrate the two (that's how I came up with the above).
I think the best support for sieve is provided by cyrus.
https://github.com/flajann2/imap-filter/blob/master/README.org
Note the keep directive above, which ensures that messages are not removed from the IMAP server after they're retrieved.
https://github.com/flajann2/imap-filter/blob/master/examples/default.imap
You could configure procmail to run scripts based on regular expression pattern matches in received messages.
The following configuration allowed me to run a script for every new e-mail message is received in my e-mail account.
I can run fetchmail in a cron, or configure fetchmail to run as a daemon with the set daemon 600 directive in .fetchmailrc (where 600 is the number of seconds between polls).
On Linux and Unix operating systems, you can use fetchmail to poll your IMAP e-mail account, and pass any new messages to procmail.
Yet another way is to use the ruby gem imap-filter.
The author promises to provide more examples in the near future, and is open to feature requests and pull requests.
To do this, you'll need to install the fetchmail and procmail packages.
Depending on your IMAP server, you could simply use some implementation of sieve.
The DSL is Ruby-based, but you don't need to know much Ruby to use it.
Now if I run fetchmail or fetchmail -v the script /home/username/myscript.sh runs once for every new message.