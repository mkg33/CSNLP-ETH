However, there are some requests (such as image uploads which need to access shell commands) which can be slow and block the application server.
I'm new to using HAProxy to load balance my app, which currently runs five backend application instances.
What I'm finding is that a straight-forward round-robin style of balancing doesn't make sense here, since requests which could be handled simultaneously and returned quickly get backlogged behind the slow requests.
I have a Ruby app that uses fibers, EventMachine, and thin to try and keep it as non-blocking as possible.
I think the latter approach is probably best, but since devops isn't my strong-suit, I thought I would check and see what best practice is in this scenario.
Of course, "best practice" is probably to have all long-running requests moved to background tasks, but in this case let's assume I don't have time for that right now if it's avoidable :-)
So most requests will return quickly, or at the very least they won't block the application server, so it can serve multiple requests at once.