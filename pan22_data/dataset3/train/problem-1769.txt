Have you already had an uptime problem or are you trying to solve an issue that hasn't yet occured?
In case the main provider fails just move to the other and keep going.
I would think that either Amazon or Rackspace alone should give you the uptime that you require.
Have the site served from the CDN, and have the CDN talk to your servers.
http://www.howtoforge.org/high_availability_loadbalanced_apache_cluster
I know how to make everything work in just one provider.
If you have a low TTL set for the DNS records, you might be able to have them transition to the new site automatically.
Any help is greatly appreciated... tips, advise, gotchas, anything is welcome...
All your static content could get served from their geo redundant servers and help you with site availability.
If your Amazon or Rackspace hardware fails your image is restarted on other hardware.
If you have massive surges of traffic, and a lot of static content I think you should consider a CDN.
More than 20 minutes won't really work as the site hosts a live score board among other things.
I'm working on a website where we need to have a good deal of uptime.
The whole point of the cloud is that you already have a high availability situation.
Edgecast has reasonable prices and an excellent network.
While there is a php based part, this is not mission critical and in case of failure, we can live with the cache for a say 20 minutes until the eventual problem is sorted out.
For example, if I CNAME myapp.com to a domain in Rackspace and it fails, when I change the CNAME to point to Amazon, a great deal of users will aready have their DNS cached to Rackspace and the whole thing would be pointless... this is one of the many questions that I have...
For this particular website we'd like to have the app running in these two providers at the same time but just serve the pages from off one of them.
Specially in the short bursts (15-day periods) that the website's events happen.
What I'm not clear on how to achieve is the actual switch from one provider to the other.
That will distribute the load to servers that are designed for such a setup.
We had successful deployments in Amazon using multiple EC2 with elastic load balancing and also using the Rackspace cloud (Cloud Sites and Cloud Servers).
The page is dead simple and can be served almost completely off an html cache.
We've used http://www.edgecast.com/ in the past to handle such loads.