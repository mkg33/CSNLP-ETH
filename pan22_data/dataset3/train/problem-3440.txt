However, process priority should be a number set by the user [or other programs (including the process itself)] and influence the scheduler further.
Perhaps, VS is determining it can reduce its CPU usage to allow other threads more CPU time?
I end up with setting the priority back to "Normal" or "Above Normal", however in few minutes it will be reduced again.
The scenario is: I have a process running, initially in priority "Normal"
I have a question regarding win-7 schedule and process priority.
I find this process to be often reduced to Background (Low I/O).
However, this does not mean a priority cannot be changed by the running program.
The process in this situation is Visual Studio 2015, which uses quite a lot HDD, which can be a bottleneck here.
These answers sugegst using Prio to save a process's priority (enforced by a background service) it might also help in your case.
There is a  .NET property called Process.PriorityClass which can change the priority.
As far as I know, Windows operating systems will not change a process' priority unless told to do so.
So, the question is: Is process priority recalculated to cover its I/O usage?
I have tried setting the priority using standard windows task manager or procexp (I guess there should be no difference).
The scheduler of windows will most likely indirectly consider I/O usage (because it will schedule processes less often that return quickly like processes waiting for I/O).