I am submitting another answer, not because I want to undermine the accepted answer, which is very good, but because your search expression was so nearly right.
The confusion is that in file masks * means an arbitrary string of any length (including zero), whereas in regular expressions it means any number of occurrences of the previous pattern.
I cannot deny that they are forbidding, and I cannot recommend an easy way in, although you may find this tester useful (although it does treat / as a special character which needs to be preceded by the escape character \ - it does in some contexts, but not yours, so allow for this if you try it on your search expression).
As you see it is very little different from what you tried, with only two extra (but critical) characters, but I hope my explanation may give you the confidence to pursue them further: you are bound to need them again.
Your search string would have worked perfectly if regular expressions used the same matches as file masks, but unfortunately they don't, and what you need is:
*" in your search expression, and this uses the other big difference between file masks, where ?
You understand file masks, and by using the simple modifications needed for regular expressions you have a starting point.
matches any single character, and regular expressions, where .
Don't be put off because the expressions seem to be gobbledygook: I have been working with them for years and there still many which are beyond me, especially the check for binary numbers which are multiples of 3 in the Wikipedia page - I have found explanations, but even with a degree in mathematics I cannot understand the expression in detail.
you need to tell the search expression that you want to match it with a literal ., and you do this by preceding the .
means that >.</a> at the end of your search expression means that any character between > and </a> will match: to match only a literal .
So what you asked for was a string containing any number of slashes (only) between the quotes in the href= clause.