Though, after pasting data, should I do :set nopaste again?
I just knew if I uses :set paste the indent is not broken.
I just wanted to point out that with a good terminal emulator and a properly compiled and configured vim, you shouldn't need to change 'paste'.
This post has my favorite answer, https://coderwall.com/p/if9mda/automatically-set-paste-mode-in-vim-when-pasting-in-insert-mode
As romainl suggested, the documentation explains that setting the 'paste' option disables several other options, and you will certainly find that sooner rather than later it will cause problems for you.
Basically if you start in Insert mode and use Ctrl+Shift+V or right click paste with your mouse, Vim detects that this came from a terminal and automatically sets paste mode, then unsets it once done, so you don't lose remapped keys (which can't work in paste mode because its writing raw data) and you are back to a "sane" state when it is done.
Then vim will "know" when you're pasting with the mouse and will effectively set and unset the 'paste' option for you.
For this reason, there is the 'pastetoggle' option.
As others have written, you don't want to leave 'paste' set.
In a terminal vim, pasting clipboard data often messes up the code indent.
One way to get a vim with the X11 feature is to run gvim with the -v option or create an alias,
You need a good terminal emulator such as xterm or GNOME Terminal, vim with the X11 feature included, and the 'mouse' option set to 'a'.