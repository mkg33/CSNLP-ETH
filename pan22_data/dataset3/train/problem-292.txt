I'd just recommend you use any model you feel comfortable with and tell the reader of your paper that is what you are using.
In these cases, the definition of a recursively enumerable language changes to "... the TM accepts $w$".
Now it's obvious that in both cases all definitions are obviously perfectly equivalent.
For example, if you're actually trying to program up a TM (for whatever reason) then the more expressive they are, the easier to program.
I also came across TM definitions where there is a distinction between accepting and rejecting states.
In the same book, a language $L$ is recursively enumerable if there is a TM so that: $w \in L \iff$ the TM halts on $w$.
The difference is that in the first case you can't write and move at the same time.
However, according to Wikipedia (and pretty much everywhere else) it's $\delta: Q \setminus F \times \Gamma \rightarrow Q \times \Gamma \times \{L,R\}$.
On the other hand, if you're trying to prove a lower bound or uncomputability result, picking the weakest TM might make life easier.
I wouldn't say that one definition has "prevailed".
Different definitions might be useful in different contexts.
And the busy beaver function, for example, is usually defined relative to a fairly weak model.
Note that in this book the TM only has halting states.
If you look at the literature and textbooks, you'll see a large variety of definitions.
In Lewis's and Papadimitriou's book "Elements of the Theory of Computation" the transition table is a function $\delta: Q \setminus F \times \Gamma \rightarrow Q \times (\Gamma \cup \{L,R\})$.
I'd like to know which defintions have prevailed so that I can follow those.
In wikipedia, halting states are actually also accepting states.