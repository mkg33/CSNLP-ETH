Remember that in Super Mario Bros, there are bosses even though your primary attack is jumping (fireballs notwithstanding).
Often, this is done through obvious checkpoints but it doesn't always have to be this discrete.
Try to strike a balance between tricky platforming sections and places to "rest."
And here's an article I came across some time ago while researching procedural level design for platform games.
One test would be player lives lost, the map would show literally, problematic "hot spots" where an enemy battle was more difficult that others, or where you require a difficult move or jump to move further through the level.
Not being able to attack doesn't make bosses out of the question; it can actually make them better.
A really important takeaway in several of these articles is how the level design teaches the player how to play the game.
Note that very few platform games are constantly challenging but, instead, provide places to pause and revel in the completion of a difficult section or psych themselves up for the next block.
http://lucasartsworkshop.wordpress.com/2009/10/09/telemetry-data-heat-maps-and-unlearning-what-you-have-learned/
There's a wealth of information in them, as well as in the original article that lists them.
http://eis-blog.ucsc.edu/2010/09/a-probabilistic-multi-pass-level-generator/
Bowser can't be defeated by jumping on him but getting past him is a challenge that breaks from the jump-on-everything's-head mold that many simple platformers exhibit.
Here's another article about Mario-style level design.
If your game is for personal or non-commercial use, heat-mapping would be considered over-kill.
If jumping on enemies and jumping in general are your only two gameplay mechanics:
Additionally, Super Meat Boy features several different types of bosses, many with a unique gimmick.
But you don't actually attack any of them directly since you can only jump.
auto generates the levels based on the players skills :) is a lot of fun to play and learned a lot from it.
You need to create a situation where they can first learn that they can jump, then learn that jumping on something can have an effect on it before you toss them into a level with monsters that can be jumped on.
The article was by Chris Pruett, entitled "Hot Failure".
His resources were Goerg Zoeller's BioWare telemetry talk (http://gdc.gulbsoft.org/talk) , Replica Island player metric snapshot (http://replicaisland.net/index.php?view=en/player_metrics.php) and the use of ImageMagick (www.imagemagick.org).
From The Big List of Game Design, here are several articles that discuss Mario level design in particular.
The following link talks about it, and www.gdmag.com had an article on it in their Sept 2010 issue (with a download of python code).
If your game is a commercial project, or you plan on going the commercial route in the future, one test tool you might want to research is heat mapping.
You basically run your game with the heat map system collecting data and prioritizing by color.