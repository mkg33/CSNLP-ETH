For backups there's full, differential and transaction log backups.
A sane sample of backup strategy would be a full backup every day and log backups every hour (this depends on your needs), so in this case you would be able to restore the database from the full backup + all the daily log backup.
Full and differential backups are types of backups that you can do to a SQL Server database, while Log Shipping is a High Availability strategy (by moving log backups at a scheduled time from a server to another and have those 2 databases in sync up to the limit of your backups).
What are the pros and cons of each strategy and in what situations should they be employed?
Of course, you can ignore differential backup of transaction log backup.
Nice info about Disaster Recovery (backup & restore :-)) you can find on MSDN: here and here.
The best way is to use all three backups types altogether.
In this case, if the failure occurs, you will lose not more than 19 minutes of your work.
And remember: you don't have a valid backup until you restore from it to test if it's ok.
From what I can tell, there are three possible ways of backing up your SQL Server database
One more tip - to be sure that your database in safe, from time to time restore your backups on a test server.
For example, If your database growth fast you can use the following SQL Server backup strategy: full backup - once a day, differential backups - every two hours and transaction log backups -  every 20 minutes.
Most typical scenarios are full backup say at midnight, diff backup at noon and transaction log backups every 30 or 15 minutes.
How much time are you ready to spend to recover your database?
Another nice reference about DR you can find on Simple_Talk.
In short, you need to chose how much data you can recover from backups in case of a failure.
Another example, if your database growth slowly you can perform a full backup once a day, differential backup every six hours, and every hour make transaction log backup.
Everything depends on your database, how fast it grows, how frequently you make changes in your database and other.
Before to choose your backup plan, consider how much data are you willing to loose?