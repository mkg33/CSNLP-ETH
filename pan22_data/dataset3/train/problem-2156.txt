I realise my Angle and the Direction vector is currently tied together and I need to disconnect these somehow to be able to rotate freely without changing the direction of the movement, but I can't quite figure out how to do this while keeping the acceleration/decceleration functional.
Currently the sprite immedately changes direction when I rotate it.
I'm prototyping some 2D game concepts with XNA and have added some basic keyboard inputs to control a triangle sprite.
What I want is for it to keep moving in the same direction when I rotate, until I hit key up, adding thrust in whatever direction the sprite is pointing at.
This would simulate thrusters on a classic space shooter like Asteroids.
When I press key up the sprite accelerates in it's current facing direction, when I release the key it brakes down.
This is my player struct, holding information of the sprite.
Would appreciate an explanation rather than pure code samples.
For rotation, when I press left/right keys I rotate the sprite.
Do I need to change my velocity and acceleration fields to Vectors instead of floats to accomplish this type of movement?
This is how I'm currently handling thrusting / braking (when pressing/releasing key up) (simplified, removed some bounds checking etc):
I am following along various beginner tutorials and haven't found any describing this, but I have tried some on my own without success.
This runs in the update loop, keeps the direction updated and updates the position:
I'm adding an image to describe the behaviour I'm after and some code samples of how I'm doing things at the moment.