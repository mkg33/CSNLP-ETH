Can someone help me in setting this up especially on how to write the regexp for that condition.
After finding the regexp, I should add this rule to a file (let's call it nginx-401.conf under /etc/fail2ban/filter.d/ that will look like
What i would like to prevent are the last 3 lines, where the return code is 401.
As far I understood (mostly from here) I could make a regexp to intercept that lines that contains a 401, setting a burstime of 3600 (60 mins lock) and retries of 100.
In the end it seems to work, this is my conf just for reference:
As you can see, NGINX works as proxy for the service and for the website and other services.
I've google around on how to use fail2ban, but I can't figure out how it can work in my case.
As action I use shorewall, and to send email when the ban occurs I had to modifiy the action accordingly to the setting that you see.
The access.log of nginx looks like this (i've hidden some sensitive infos)
Here I don't really have idea of what action should be and if the rest is set up correctly.
), it may happen that someone gets 401 every now and then.
Now, I would like to protect these VMs from bruteforce, such that, if there's a huge amount of 401 the IP should be blocked.
* 401 but don't know if it's enough and I would like to avoid to block everybody by mistake.
In the setup I've right now I've NGINX that works as proxy for (serveral) internal VMs.