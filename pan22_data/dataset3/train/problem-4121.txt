Of course Oracle has the option to define varchar2 length either as char or as byte.
Starting with SQL 2K8 you can exceed this limit, but there are performance implications.
My point here, is that it is not always wise to define field with always as small as possible.
There is a limit to the size (8K) of a row in a table and SQL lets you define varchar fields that could theoretically exceed that limit.
I have seen a lot of alter tables to increase field withs later (caused by changed requirements).
If theoretically there is no maximum length then I would question why varchar would be used.
Surely it depends on what information is being stored in the field?
Having 20% - 100% unused field with is a discussible option here.
When moving data via import export from a database with single byte collation to one with multiple byte collation (like Oracle XE) the length in bytes can increase and importing the data into the tables created by import fails.
I context of Oracle Databases I learned that always using the smallest field size for Database columns has one pitfall.
Some things are going to have a maximum length for a number of reasons and if there has to be a maximum length then that should be the length of your field.
Also, there is the whole reasonableness check of limiting the size to what you expect the data to look like.
If you want an unbounded length field why not go with text or ntext?
Assuming you are referring to SQL Server, I can think of one.
So the user could get errors if they put too much data in the field related to that.