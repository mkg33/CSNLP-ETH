Even without memoization, I cut the calculation time by about 40% when I switched from your version of binomial to the following:
I find the if easier to follow in a complex statement like that.
It's unclear if memoization of the factorials would help more.
Along with it I made the factorial() and binomial() functions.
It may depend on how many values you need to calculate.
The reason this works is that \$ \binom{n}{k} = \frac{n!}{k!(n-k)!
Note that you could use the ternary operator rather than the if in binomial.
and replacing factorial(k) with permute(k, 1) works because
I have serious doubts about their efficiency, in particular whether my implementation of the factorial() function should be correctly optimized for tail-recursion, and whether it is possible to rewrite the bell() to be more efficient.
This is my implementation of the bell() function to calculate the n-th bell number in C.
Let me know any critics about my code, and if I can rely on this implementation or maybe use different approaches.