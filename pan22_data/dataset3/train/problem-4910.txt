Try the same thing with CTRL-C.  You'll see that with -t you are sending the CTRL-C to the "sleep".
and it treats it like normal keystrokes, which the sleep command ignores.]
You might NOT want '-t' when login scripts behave differently if there is a terminal.
You'd do this say if rsync going out to server was blocked, but ssh wasn't.
For a long-running command, you might want to prevent someone from accidentally halting the process if they type ~.
ssh -t creates a pseudo terminal on the remote machine.
This is useful if you are chaining ssh commands thru multiple servers and want a real terminal on the far side (so you could use 'vi' for example).
1) setting the prompt, and 2) expanding the path to many interactive applications.
With -T you are sending the CTRL-C to the ssh program running on your machine.
There may be times when this makes a difference (i.e.
This also minimize the network connections that will have to be closed (delaying the reboot).
When piping the input or getting the input back, which is the typical use of "ssh host command".
Obviously a mis-configuration, but no need to chew up a resource for a bunch of tunnels and rsyncs.
In such examples, you want the process to NOT have a tty.
After this has been set up, you can then rsync to localhost, instead of to the remote host, hence effectively, tunneling your rsync via ssh...
Here's an example of setting up port forwarding from localhost to some remote host...
Yes, sometimes you want to make a silent, backgrounded connection, for example when setting up a tunnel (e.g.
This is bad practice IMHO, but I've seen cases where a login script checks for TTY before
In another instance (mentioned by TomOnTime above), I actually have run into cases where all the TTY (ptys) are used up.
Control characters could be interpreted by the TTY layer (^S for ex.)
(2) You just want to minimize the pty or network connection activity.
When trying to reboot a machine that is out of ptys you don't want to encourage the system to try to allocate a pty!
escape will disconnect you if you have a pty (-t).