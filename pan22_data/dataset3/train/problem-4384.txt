You can send a letter to anyone, and if you don't put a return address on the envelope (or put the wrong one), they can hire all the junk mail filterers in the world and not filter your message out without opening (processing) it.
UDP and ICMP are easiest to fake, but TCP is also possible.
So challenge/response is an effective defense as long as you aren't also being Man in the Middled.
However, when a botnet sends many spoofed packets from many hosts on many ISPs, the target machine or network falls over.
However, if the sender wants a response, the return address better be correct, or there would have to be an application layer mechanism for getting the correct address.
DNSSEC makes this even worse, with UDP packets that can reach 4k in size.
If every user of my ISP faked one packet between 1:00 and 2:00, it would still be hardly a blip on the radar.
DNS anti-spoofing focuses mostly on the security side of preventing someone from submitting a false answer to a recursive resolver.
The flooding aspects of UDP are not DNS specific other than a single small query (say, for '.')
The financial reality is that unless you are the one attacked, spoofing costs nothing.
The preferred defence, but unfortunately not universally deployed, is egress filters.
I can set whatever source IP address I want in a datagram.
Sometimes it's the load balancing machines that alter sequence numbers and make them predictable.
It costs money to implement filtering near the customer, and the one spending the money realizes very little return other than knowing they are good network citizens.
My ISP damned well knows that I am on a specific address, or at least the subnet I'm on.
So I can make you think you're opening a letter from Nana, but even if I fool you with the letter's content, you're not going to send Nana a check made out to CASH to some address in Nigeria (unless Nana is Nigerian).
Whether my ISP would let such a packet out into the wild is another question.
There are many other UDP protocols out there that work, but DNS is in use everywhere, and it's easy to find machines to use to amplify attacks.
As others have pointed out, UDP is pretty trivial to forge, TCP not so much.
If I fake a few addresses here and there, it costs my ISP nothing.
For ISPs running DSL etc services, each virtual line should be configured with ip verify unicast reverse-path (or whatever the non-Cisco equivalent is) which blocks any packet whose source IP address isn't in the ranges known to be routed down that line.
It requires an insecure remote OS, which uses predictable sequence numbers to exploit.