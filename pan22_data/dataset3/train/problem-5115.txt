May I suggest that you buy the book Artificial Intelligence for Games by Ian Millington - it's excellent!
The source code is not beginner-level, but the concepts behind it should give you some good ideas.
It doesn't have any learning abilities or anything but with enough tweaking it can be pretty convincing, which it all that really matters
Adding this book to the list of starting points for learning AI programming.
Then, it's as simple as picking and executing a movement/action based on some combination of randomness and whatever difficulty level the player chose at the beginning of the game.
Of course, each type of game has its specific needs, and arcade/shooter games don't need complex architectures to support interesting gameplay.
Then, what I do is have the AI look at the play field and make a list of possible actions or movements that the AI could make based on those questions.
I rank and sort these moves with a "smartness factor".
Simple steering libs will do the job as the basis of that behavior, and then you add details for various types of enemies (some, shoot periodically, some shoot by predicting the player's movement, some turn in order to face the enemy, others may coordinate their attacks etc).
With its focus on observation and behavior implementation rather than algorithms of limited application, I believe it is well suited to the task.
Things you're going to need from it are steering and state machines.
Other posters suggested great books and I'm fond of AI4Games suggested by jacmoe, even though it's quite general in parts (like a lot of books, which is of course understandable).
You might want to look at OpenSteer, and the Steering Behaviors documentation that goes with it.
Of course, if you're not using C/C++, then this might be less relevant.
But really an awesome introduction to the world of Artificial stupidity/intelligence.
How to create AI is a tricky question, because it consists of many parts: