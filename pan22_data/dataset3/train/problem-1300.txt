Your bounding circles can be arbitrary also, since you are trying to avoid collisions.
If I know A is trying to move by vector M (that is to add vector M to the positional vector of A), and that A will collide with B after A moves, what math would be used to scale back the M's x and y components such that M will no longer collide, whilst still allowing M to make A slide along B should x or y be cut back?
Before each move, add M temporarily to A's position.
If that distance is less than the radius of A's bounding circle added to the radius of B's bounding circle, then you need to scale back M, by the difference plus some constant value (if you don't add this constant value, then the two objects will collide, but just barely touch).
Then calculate the distance between A's new position and B.
I have 2 objects, A and B, in a 2 dimensional space.
I would rather be able to comment, since you are missing a lot of information, but since I cannot I will post a possible solution.
if A is on the left of B, moves with vector (1f,1f), cant move 1 right, but can move 1 up and does so).
You can make them much larger than the objects themselves.