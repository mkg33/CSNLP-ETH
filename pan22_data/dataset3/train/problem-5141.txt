There is a bug in your program; it doesn't print the number 2.
This is horribly wasteful of time since you can simply add a factor of twice your prime to reach the next number that is a multiple of your prime.
So the immediate performance issue is that a sieve will be much faster than trial division.
The most glaring thing I see in this is that after you find a prime you're iterating through the list by 1 to cast out all of the multiples of that prime.
For comparison, RosettaCode's Trial Division task has a loop like your function.
See the examples at RosettaCode or Wikipedia for example.
You know what the prime is, so just generate the multiples and throw them out.
I see no advantage to using a linked list over an array.
This eliminates any need for a division or modulus operation.
Unless I'm misunderstanding what your iterators are doing.
The VALUE at the index can be used to indicate whether the index is prime.
Also, iterating through the list each time by 1 to find the multiples of a known prime is not efficient.
With an array you won't need to store the actual numbers since what you'll be checking for being prime is the INDEX, not the VALUE at the index.