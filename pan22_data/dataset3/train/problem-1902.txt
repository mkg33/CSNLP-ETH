However, it takes as an argument a regular expression.
It sounds like you are looking for "DirectoryMatch and FileMatch.
The < FilesMatch> directive limits the scope of the enclosed directives by filename, just as the < Files> directive does.
http://httpd.apache.org/docs/2.0/mod/core.html#filesmatch
http://httpd.apache.org/docs/2.0/mod/core.html#directorymatch
it would make more sense to do things in a more convenient, sensible fashion - sometimes the best answer is DDTT - "Don't Do That, Then".
the best rule of thumb, IMO, is to put the special-case exceptions first and then the general case rule, like so:
as with most things like this, the order of rules is crucial.
if the order were reversed from the above, then the file-match exception would never even be reached, so wouldn't have any effect.
why make your public file and directory names so annoyingly similar to your private names?
why not just put public files in one directory and private files in another?
why have private files like '_private.txt' in a directory called /public?
< DirectoryMatch> and < /DirectoryMatch> are used to enclose a group of directives which will apply only to the named directory and sub-directories of that directory, the same as .