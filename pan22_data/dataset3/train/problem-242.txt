Based on that information we can come up with the following equivalent method, which is significantly simpler:
hasLevel can be assumed false if hasLocation is false, I'm just telling the basic approach.
Wherever the decision matrix creates the same result for the same column in both cases, true and false, it means that the condition is irrelevant for the result.
We see that the result involving the locationLevel is only returned if the locationDescription is available and the locationDescription has a locationLevel.
The three conditions checked are, along with abbreviations to make it easier to read with the limited space here:
A good method to solve such issues is to come up with a decision matrix and then re-implement that decision matrix.
Disclaimer: This new method is only equivalent with the original if all methods that have names starting with get have no side-effects.
Another good method to solve such issues is to use a good IDE like IntelliJ IDEA, it will offer many of the required simplifications as intentions.
Here's the decision matrix based on the if-else-chain.
Now that we have identified all conditions, we will create the matrix input.
We see that when !hasSiteDetail it returns "N/A" regardless of the other checks.
Basically, there are 2^3 = 8 possible combinations.
I'm just showing the decision matrix because that's the generic appraoch.
Actually I got that result in a few steps with IntelliJ IDEA without involving the decision matrix.