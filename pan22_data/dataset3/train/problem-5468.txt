password generated from 1st letters of first sentence of this answer could be "Iyhtrp,uswkt.").
I have a very strong passphrase on the password safe, and all other passwords are auto-generated and never re-used accross websites.
And I would pick the first letters of each word, creating the following pretty good 16-char password:
To help prevent what happened to that web site administrator, and assuming you have access to a Unix shell or Cygwin, you can use
I consider this (given the strong safe password) to be the best trade-off and most secure approach to website passwords.
Using poetry is especially good, because it's easier to remember and when you are asked to change the password, you can just pick next few lines of a poem.
WTOUTPPAUTFLOEW -- add a zero or 3 (leetifying), vary the capslock a couple times and you've got something no dictionary will ever pick out but is still easy to remember.
I started using Password Safe, which was originally designed by Bruce Schneier, for storing any web-passwords.
and check that value against an MD5 database, like http://gdataonline.com/.
Pick a sentence, use nth letter from each word as password, keep the punctuation.
For example I could pick a few lines of great poem from William Henry Davies (76 chars):
We train our users to pick passphrases and use the first letter of each word.
You can make it stronger by change some to upper case, and adding some special chars.
The software also has features like expiring passwords and the like.
If you have trouble remembering passwords, use some well know text.
My solution for this problem has been to use passphrases as a mnemonic to the actual password.
Also, here's an example of a more, raw MD5 dictionary, that I got by simply googling for that hash value (warning: large file): https://secure.sensepost.com/sp-hash/jebwy
however-- just make sure you don't change their password to a passphrase based on the company slogan/vision statement etc.