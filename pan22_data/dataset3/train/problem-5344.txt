I build platforms and form support teams in a similar manner, plus you state you need 'very high availability (HA)', that's what I do too, so let's see how we get on :)
In that same company the number of users was pretty stable at around 60 to 80 active users, plus a whole bunch of sometimes-users, scattered around the country.
Due to proper setup and management those 15 were less trouble for me than the original 4.
If something plugged in anywhere it was generally considered to be my responsibility, whether it was a phone, printer, copier, fax machine, PC, server or a manager's second cousin's laptop.
Just pick whatever number makes your "financial model" look the best.
This is not based on the number of servers, but on human resources calculations:
High availability demands that - otherwise you can not guarantee to have someone on site all the time, and a 4 hour emergency no work done thing kills your high availability down pretty much.
The number of servers had absolutely no effect on my workload because my work is affected by what those servers do, rather than how many of them I had.
Now obviously this is quite a lot of staff, but then again you're asking us for how we'd do this and this is exactly how I'd do it - I'm utterly focussed on serving my business and understaffing/skilling a HA-requiring platform fails to achieve this goal.
The users ranged in expertise but on average they were pretty well educated and behaved, so they created little work for me.
In my previous role I was responsible for the Australian network for a multi-national company.
You need to break your skillsets down into groups, also you're covering a lot of bases here and HA requires good or great skills rather adequate or intermediate skills.
If something physical happens, one person may be overloaded.
Truth be told, it was really only a one and a half person job, so we had it pretty easy, although we never let management know that.
I know of others in a similar sort of role where 3 or 4 admins are working very hard, and not because they're not good at what they do.
Go to 5-7 people depending on the reliability you need.
There's no true number that you can drop in there that will reflect reality, without having a ton more information to back it up.
Oh and make sure that your 'service manager' is structured, clear in their communications, happy to listen to his team and capable of using the word 'no' - do NOT expect them to directly project manage new additions to your platform (minor changes yes but not large functional additions), get someone else to work project manage these by working with the SM.
And emergencies will happen when noone is there ;) Rule of nature.
From what information you've given us I believe you need;
If your systems are literally fit-and-forget and build themselves from PXE boot, then your ratios are going to be wildly different to an environment where every server is unique and you're building from DVDs.
You're going to need more people to initially raise these systems from bare metal.
We have far more people and systems than this in practice, but this is an accurate slice of one area where the people and systems can be partitioned off somewhat neatly.
Unless of course they can palm them off to a helpdesk.
No matter how much you may want at least an approximate answer to your question it's not possible to give one without knowing a lot about your infrastructure, users and usage.
I originally did all the work alone but as a result of taking on extra projects I later got a junior to help out.
If you're happy with anecdotal information, our current ratio is approximately:
Best would be to keep one person on site, another on call.
In most organisations the users, more than anything else, will determine an admin's workload.