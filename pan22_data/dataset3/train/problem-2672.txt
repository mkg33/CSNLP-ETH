You could access 1 terminal server, and any page on 1 domain (the intranet).
Needing an assembler but being unable to find one for those machines I set about to create one.
I did all of this without any curses calls (just lots of spoken curses).
There were special cases to handle multi-digit answers, e.g.
A company I worked at a quite a few years ago had restricted network access on all our computers.
It used $( read -n 1 ) to pull single keystrokes, and process them individually - including backspace, which I pulled from $( stty -a ).
I wrote a pair of applications (helpfully named f5 and f11) which use X libraries to emulate keyboard keypresses... to refresh and fullscreen a browser window on a computer in our office which was running a status board page.
(And if I found that anyone had done this on any of my networks, I would strongly be pushing for an official reprimand.
Well, if it makes you feel any better when they found out I was promptly fired, but I think that's when I decided to go to Uni and get a better education so that I could be in a position to ensure that other people don't have to go through that.
I also wrote a python app to continuously jiggle the mouse pointer at location 1441x901 (just out of sight), but only to run during office hours, so the rest of the time, it can run the screensaver.
This, infact, made it impossible for us to do our jobs and after months of complaining to management (I love beaurocracy) they finally gave us ONE computer with unrestricted access, that all 12 of us had to share on the "rare occasion" we needed to go off-domain (which was almost all the time).
Of course, as this is Server Fault everyone will be looking at this post, HORRIFIED that I could do such a thing.
So, I brought in a spare 24-port switch, plugged the network cable from that machine into the switch and then bought dozens of dual-port NICs, and silently cabled everyones machines onto the 2nd switch and set up custom routes on each machine so that people could still access the segregated network.
I was everyones hero for 6 months, they could finally have internet access just as long as the boss wasn't looking.
How do you compile an assembler when you don't already have one?
Parsers written in Awk, have done this many times, a friend even wrote a (simple) working C compiler in Awk.
Write a simple one in BASIC first, then translate it line by line into assembly once it's working and compile it with itself.
if there were 9 options, it would interpret 1-9 as each menu option, but if there were 11 options, after receiving a 1, it would wait to see if it became 10 or 11, or [return] for 1.
I wrote a bash script which displayed a numbered menu and asked the user to type the menu number.
Probably not the kind of thing you're looking for but back a little bit I had a couple of Commodore 264 series machines.
This was well before I started my work in IT and I was considered lower than low by the IT department.
I then hid all the cables and the switches so nobody would find out.
I've another friend that wrote a Freenet client (including the networking bits) in Bash.