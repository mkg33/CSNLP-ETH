You are now dependent on the internet connection between offices as well as the reliability of the servers, however.
However, banish the word "cluster" or even "failover" from their vocabulary if they want to keeps costs down.
Unless they're okay with the least expensive solution being a few ten thousand USD.
The complication involved is entirely dependent on the methods of creating the cluster.
The prices are steep, but that's just the cost of doing business in this realm.
Then, if and only if the POS software support it, allow access to the server via a terminal services / citrix connection.
As someone who has worked predominantly with non profits that rely on donations from the public at large with no government support, I know quite well how budgetary restrictions make for some tough decisions.
Pour the money into clustering a central server that houses the POS virtual terminals and the rest of business logic.
You might want to look at an application like Marathon or Double-Take (I won't link to them, but you can find them if you search for their name plus the word "cluster").
Those products can cluster the entire server at the OS level and perform seamless (in theory) failover in the case of one failing.
If your server mainboard or RAID card were to die--or more likely--you got malware, or a Windows update wrecked your server, you could be back up in a matter of minutes.
Also, be wary of clustering a server that runs Active Directory unless the clustering solution can guarantee that all atomic transactions are committed at both nodes.
It would be less expensive to get double ISP connections at the branch offices and bond them than it would be to cluster to each server in each office.
Oh and make sure you test your backups and disaster recovery plans regularly!
However, to cluster the OS underneath the application is usually more of an ordeal and as such the tools that are able to perform this are quite expensive.
Their mindset is already wrong and they are setting themselves up for failure.
This is dependent upon the applications that are being protected and what level of OS protection is desired.
I think StorageCraft has a hot-spare sort of feature, but I never got to use it.
As another halfway measure, I would implement a continuous, block-level backup program (I have used StorageCraft).