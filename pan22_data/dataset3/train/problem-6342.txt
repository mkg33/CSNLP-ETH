It's guaranteed to be buggy, often with security consequences.
The system I am coding for does not have snprintf, I know that would be far more elegant, however I cannot use it.
You use your horizontal and vertical whitespace very well, and it's clear what you're doing with each block of code.
You ought to use (preferred) or at least implement a string utility class.
This way all your string code will be much more concise, and entire classes of bugs eliminated.
One thing I would personally do would be to move the string concatenation into its own function since I see you have repeated the same 2 lines multiple times:
There's a bigger-picture issue here; this kind of manual string manipulation is a Bad Idea.
Maybe there's a more concise way to do it, but in terms of clarity and maintainability I think this code will suffice.
I am a still green when it comes C so I am unsure if I am doing this a very awkward way.
Yeah, without snprintf and sprintf it gets a bit tedious, but I think this code is actually quite clear.
I've had to make several functions to turn some structures into strings.
You have also controlled for any possible issues that might come up (null pointer, insufficient buffer length, etc).
Reduces the length of your function and makes it slightly cleaner, imho.