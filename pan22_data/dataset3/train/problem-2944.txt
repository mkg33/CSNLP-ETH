You typically cannot run a Windows binary on a Linux system and vice versa, the OS kernels are very different, the binary formats are different, they're effectively speaking different languages.
In the context of something like Flatpak, it is using the same namespaces and cgroups you see with container tools like docker.
This is very different from the container and application virtualization where you run native OS applications on a shared OS kernel.
Container virtualization with Linux is a combination of kernel features, namespaces and cgroups, used to run an application in a sandbox.
Emulation is a way to run programs designed for another OS.
Each application has it's own filesystem, network stack, pid namespace, etc, but runs on the same OS kernel as the host.
Application virtualization is very similar to container virtualization, and the lines are a bit fuzzy to me.
It is designed for managing server side applications.
From the host you can see the processes running, but from inside the sandbox, all you can see is your application.
The emulation layer provides a translation to run non-native programs on the local machine without creating an entire virtual machine and running a separate OS.
The key difference is they have designed the tool for desktop use cases, meaning tools that are designed to be accessed with a local GUI, rather than running remotely as something like a web server.