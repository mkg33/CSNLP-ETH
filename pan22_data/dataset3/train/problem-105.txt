Since you've mentioned wanting to build a Tower Defense game, why not use the map editor from other strategy game to script your idea?
Since Unity 3.5, they also have a built-in pathfinding solution, so you may want to have a look at that too.
We like having full control over the prototyping process, and the best way to do this is to write the entire prototype from scratch, while limiting the scope and focusing on what matters.
There's also an article comparing the prototype and the final game for Siege Breaker on our blog: http://www.previewlabs.com/siegebreaker-game-vs-prototype/
If you're using a genre-specific game development tool (such as a specialized game engine, or a map editor of an existing game), you need to know whether any innovations you may want to add can be implemented easily using this tool - and that's not easy, as you don't necessarily know up-front what you'll want to change after playing your prototype for the first time.
There are a number of advantages to using an already existing game editor instead of a bare-bones tool or engine:
Trabant is a rapid prototyping tool for nailing the game mechanics only.
This gives you the freedom to make any kind of change to your game's concept, without being limited by existing systems or code you didn't write.
Have you considered using a map editor of an existing game for building your prototype?
One example of a tower defense game we prototyped was for the game Siege Breaker (a free-to-play game on iPhone and iPad).
It sounds like a perfect fit for you, as it has ugly graphics, no animations, and it is very basic but also extremely powerful.
For this one we also used Unity3D, in combination with some pre-existing C# pathfinding code.
Here at PreviewLabs, a company specialized in game prototyping, we're using Unity3D as an all-round tool for game prototyping.
StarCraft II has, as far as I know, a very powerful editor that has already been used to create a lot of different mods (MOBA maps, tower defense maps and even a third person shooter of sorts).