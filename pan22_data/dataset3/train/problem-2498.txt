https://github.com/Bixi81/R-ml/blob/master/NLP_topic_modelling.R
The Description Field contains product technical name, dimensions, characteristics.
Unsupervised: Try topic modeling to find „similar“ products.
Supervised: If you have a good set of descriptions with a label (e.g.
I have the following scenario, to detect duplicate products based on the description fields.
But be aware: in real world applications, text classification can be very tricky, especially if you have many classes (products in your case) and not so many observations per class (descriptions in your case).
Therefore, I think that applying a normal fuzzy matching or other NLP text matching will not perform well in my case.
This is an example of this approach with accommodation descriptions: https://medium.com/@actsusanli/when-topic-modeling-is-part-of-the-text-pre-processing-294b58d35514
product 1, product 2, etc), you can use some NLP model to predict which text belongs to which product.
Here is an example on how to apply Neural Nets to text classification.
If you think fuzzy matching does not work, you basically have two options:
Not sure how much you know about it: You could start with a „Bag of Words“ and try things like Lasso, Boosting, or even Neural Nets on this.
An unsupervised approach seems to be a good option for you, judging from what you wrote about your problem.
My model needs to consider that different annotation and abbreviations might have been used for technical names, text errors in data entries,  similar/different dimensions or characteristics might still point to the same product.
The problem is that you will need to pre-define the number of products (groups, aka „topics“), which can be a problem.
I trying to approach this problem as a learning/supervised model, but still not sure how so any suggestion/idea is very appreciated.
Also topic modeling will only work well if there are sufficient differences in the descriptions.