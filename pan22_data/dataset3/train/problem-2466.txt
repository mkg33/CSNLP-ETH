The source, /home/j/ns/s, will actually be /home/j/mroot/s due to the first mount.
But this "directory" is not a directory at all, it's a symlink to /home/j/mroot/s/etc which is, due to the second mount, in fact /home/js/ns/etc/.
First we'll create a new subdirectory s/ (short names can be too short and thus become confusing too easily).
Alright... Let's attempt an answer to this question.
The "root" directory of the jail system is /home/j.
More specifically, when I am to issue the following commands:
These symlinks will now be broken as those directories do not exist.
It will keep the read-only directories such as bin/ and dev/.
It is my understanding that those would back you right out of the current directory and to elsewhere in the filesystem, whish is likely an invalid path?
This is not exactly what you asked for but it might make your life easier with ezjail.
My searching has not turned up anything, but I certainly suspect that I may be simply asking the wrong questions.
In here we will create a subdirectory for each jail to contain the writable content.
Everything has been going along smoothly, until I encountered the second to last step in setting up the master template.
Based on the links, how is the filesystem able to know that it should write to the www data directory within one jail and to the ftp data directory from another?
In short, I am having trouble understanding how symbolic links function when a given filesystem is mounted at multiple points.
When a jail accesses a file in /etc/ (which should be writable), it is actually accessing /home/j/<jail>/etc/ on the host.
Now the mroot/ directory contains the base system as you've done a make installword to it.
Also, why are the "../" pathing operators required from some of the links?
This destination contains the copy of the skeleton directory containing all writable files.
My confusion is how the operating system knows which service's data directory (/s directory, mounted read-write for each service) to use given that the master template only maintains one set of links?
http://www.freebsd.org/doc/en/books/handbook/jails-application.html
The skeleton directory (skel/) is copied to each of these subdirectories.
I have been following the FreeBSD Handbook in setting up application jails on my little home server.
Each will use the master template at /home/j/mroot (mounted read-only at /home/j/) and have their own data directories (found at /home/js/; mounted read-write at /home/j/).
Using nullfs mounts we'll now tie everything together.
As they are mounts, going into such a directory will bring you to /home/j/mroot/ instead, though your path won't change.
The setup of the mroot/ folder will now look a bit like this.
For reference, here is the link to the particular FreeBSD handbook page.
Ezjail auztomates the process of creating jails and and the templating of them.
I will reread my own answer once I've cleared my mind again because my head is still spinning from trying to figure this one out myself!
When creating a mount for /home/j/ns/s to point to /home/js/ns.
However, this is a mount to /home/j/mroot/etc/ due to the first mount.
Now the third folder (/home/j/js/) will come into play.
I am sure this may seem like a simple question, but I cannot seem to ask Google the correct question for the life of me.
These are nullfs (read-only) mounts to /home/j/mroot (step 1 of 15.5.2).
Each jail will have a writable /etc/ folder which seems to be /home/j/mail/etc/ but due to the above created mount, it will actually be /home/j/mroot/etc/.
However, remember from the very beginning that this folder doesn't exist anymore.
This symlink pointed to a not-yet-existing subfolder of /home/j/mroot/s/.
I know that the master template will be mounted as read-only so mounting one file set for multiple jails is no problem.
As of now, there is no /home/j/mroot/etc/ folder (since you moved it), so we'll create a symlink for it.