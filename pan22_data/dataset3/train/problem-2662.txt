But the big thing to note is that they all mean the same thing for marketing purposes.
The first name for the 64-bit extension to the x86 set was called x86-64.
It was later named to AMD64 (because AMD were the ones to come up with the 64-bit extension originally).
Technically x86 simply refers to a family of processors and the instruction set they all use.
Blame the Pentium and it's offspring for changing the way in which processors were named and marketed, although all newer processors using Intel's x86 instruction set are still referred to as x86, i386, or i686 compatible (which means they all use extensions of the original 8086 instruction set).
Here's what a few different major Operating System distributions call each 64 bit flavor:
Intel later licensed it, but even still the name for the 64 bit x86 instruction set is typically AMD64.
It used to be written as 80x86 to reflect the changing value in the middle of the chip model numbers, but somewhere along the line the 80 in the front was dropped, leaving just x86.
The first 64 bit edition of Windows was given the title Windows XP x64.
AMD's original 64 bit extension on the x86 set was called AMD64.
x86 started out as a 16-bit instruction set for 16-bit processors (the 8086 and 8088 processors), then was extended to a 32-bit instruction set for 32-bit processors (80386 and 80486), and now has been extended to a 64-bit instruction set for 64-bit processors.
Probably because the x86 line became synonymous with 32 bit processors for quite some time, while x64 was specifically a designation for 64 bit as applications and operating systems were transitioned over, and now there are software applications that require the 64 bit designation in order to run (like some VM software).
The x86 moniker comes from the 32bit instruction set.
So all x86 processors (without a leading 80) run the same 32 bit instruction set (and hence are all compatible).
It doesn't actually say anything specific about data sizes.
Intel licensed the 64-bit instruction set and named their version EM64T.
In subtlety they do mean different things (well, amd64 means something different from x86_64 (the former being a vendor specific architecture, and the latter the subset of two vendors architectures), but x86_64 === x64), but for anyone except programmers writing in assembly or machine code it really doesn't make a different...
Well, x64 never really came from an instruction set or chip manufacturer.
So basically, it seems that Linux prefers x86_64, BSD prefers amd64 and the others x64...
The term x86 refers to a family of instruction set architectures based on the Intel 8086 CPU.
In other words, it's more marketing than technology for the reason.
Both instruction sets and the processors that use them are all still considered x86.
So x86 has become a defacto name for that set (and hence 32 bit).