I was wondering how it can be done, because I read that you can't make a compiled program portable.
Installing a game usually just copies the game files and libraries to a specific directory.
The installer pretty much never compiles the source on the fly before installing, although some programs (usually for Linux) are distributed as souce that the user must compile himself before installing.
Because of system architecture, windows version... You need to compile for every machine.
This allows a compiled for x86_64 and Windws to run on any 64 bit windows machine and a program compiled for x86 windows to run on basically any windows machine.
This is assuming all the proper dlls are in place, of course.
The same is true for Linux, since all version of Linux should be compatible.
Also, all the versions of windows after and including XP are mostly compatible, since they are all based on the same kernel.
And if someone can explain me what is happening when installing a game ( what is the program doing, if there is some compilation or only copying files, set paths and checking for dependencies)
Recently I made a simple game using Unity 3d and found that it works on every windows machine, just copying the files and executables.
Also I was wondering if there is something like this for Linux machines.
You are right, a program must be compiled for each specific architecture and operating system.
Compiled programs are not portable between architectures or OSs.
Fortunaly, almost every computer is either a 32 bit x86 architecture or a 64 bit  x86_64 architecture (which is compatible with x86).
Sometimes it sets some variables needed for the game to run as well.