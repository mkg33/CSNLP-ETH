Of course the big problem with this is that the Script-Fu command file-glob only allows you to cycle through one folder, and you have to use a very ugly batch call for it to work :
So I checked out ImageMagick, it wasn't really for me, so I ended up using TheGimp's Script-Fu to first off write a batch procedure to convert all files in a folder to the nearest (bigger) power of two, and optionally scale the image down afterwards if it is too big.
I'm currently porting a game to a new platform, the problem being that the old platform accepted non power of two textures and this new platform doesn't.
I use Sprite Sheet Packer to put multiple textures into a single power-of-two-texture.
To add to the headache, the new platform has much less memory so we want to use the tools provided by the vendor to compress them; which of course only takes power of two textures.
I guess that maybe ImageMagick would have been a better solution, it's just a shame that TheGimp proposes a batching process that really isn't powerful enough.
So the next problem was to iterate through the folders to call the gimp script on all of them, after a bit of testing, I found this PowerShell script :
This is a simplified version (I can give anyone the batch if needed).
You might check out this ImageMagick forum post where someone goes into detail on power of two rescaling via some extended features of ImageMagick.
I had some errors when running Jonathan's script so here's my modified version:
The current workflow is to convert the non power of tho textures to dds with 'texconv', then use the vendors compression tools in a batch.
This also generates either a text file or an xml file with information on the source rectangle of all the sprites in this power-of-two-texture.
So, does anyone know of a tool to convert textures to their nearest 'power of two' counterparts?