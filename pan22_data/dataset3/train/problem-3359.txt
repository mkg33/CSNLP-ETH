With the above, you can load the site via www.mydomain.com, or the direct internal and public IP addresses, but if you try to load it any other way you get redirected.
Here is my current config (truncated for simplicity):
I haven't been able to find a question that matches my particular scenario so, hopefully this isn't a duplicate, if so I apologize.
Perhaps because the "listen 80 default" has been deprecated in favor of "listen 80 default_server".
We don't know why they do this but Google starts crawling their site as if it was a different site entirely and it causes trouble.
I need to allow the server's IP addresses through because we use that for internal server chatter via a custom API, to get around the load balancer.
It could also possibly be that the load balancer is messing it up?
Either way, it seems to be working right now with this definition!
Actual: Nothing gets redirected at all, I'm assuming because NGINX is just matching the IP address regardless of domain to the first rule.
The only solutions I've been able to find either redirect everything INCLUDING the IP addresses to www.mydomain.com, or they end up redirecting nothing.
Expected: Requests to the correct domain, or either IP address, match the first rule.
I am using a Rackspace cloud load balancer, if that helps.
Sameer was close but I'm not sure he understood my exact question.
I want only www.mydomain.com, 123.123.123.123 (my server's public IP address) and 456.456.456.456 (my server's internal network IP address) to work, anything else should redirect to www.mydomain.com.
All other requests match second rule and get redirected.
Or perhaps I confused things will testing across all 4 nodes.
Why: I need to send everything to www.mydomain.com because we have had people setting up other domains (www.otherdomain.com) pointing to our IP address, so it acts like a mirror of our site.
I don't know why it didn't work then and it working now.