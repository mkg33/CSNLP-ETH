As stated by Ikraav, this is a job for network namespaces.
The other solution would be using a proxy NAT, but it seems to me much more complicated than just running Linux virtualized inside a VM, like Xen.
If you prefer to have an interface that is the default exit one for programs not run inside a network namespace, just leave it assigned to the network namespace and do not prefix any command concerning it with ip netns exec net-*
I found two jails equivalents for Linux that do network isolation, it seems they'll do trick:
Using this technology appears to be relatively new as of this writing and I'm finding quite difficult to find concise HOWTOs that would also explain what's actually happening with each command.
- @Darth Android At best, 'misconfigured' is infortunate to describe the situation: you're correct that this scenario generates a conflict in the routing table, but I'm trying to find a solution for that having two routes isolated from each other.
Googling "ip netns" (with and without quotes) would probably get you best started putting pieces together.
- @RedGrittyBrick I'm not trying to bridge two separate networks, I'm trying to access two seperate netowrks that use the same IP block.
If both the network address and subnet masks for the two separate networks are identical, your network is misconfigured in a way that defeats the basic intent of IP-routing.
Let's call the interfaces to which your two NICs are connected eth-a and eth-b.
Your question sounds like it's a job for network namespaces (url is related, not official).