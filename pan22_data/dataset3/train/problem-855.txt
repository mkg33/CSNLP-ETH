Perhaps even better if you could run the .sql file in your installation, that way your application doesn't have any delay when the users first run it.
But for production deployment, the creation of the database must be automated, either by the installer or by a start-up functionality of the application: Starting out from a fresh Windows 7 or Windows 10 installation (the PC will not be availlable to us beforehand), running the installer and then starting the application (e. g. by our service personnel) must be enough.
We're developing a small(ish) application that collects and stores data.
It will not, you will have to attach the database to your server afterwards.
It's low-throughput, low-volume, but needs to be able to archive and retrieve data from (almost) arbitrarily earlier times, hence the decision to store the data in a MS SQL Server Express database.
If it's big you could go for the first option, if not i'd use the second option.
Question: How do I make the database, err ... appear ... on the target PC?
At this point, we can create the database using MS SQL Management Studio or Visual Studio.
I also think it depends on the size of the database files.
Also, the application should not depend on which user is logged onto the PC.
You could add a sql script that will attach the files to your server though.