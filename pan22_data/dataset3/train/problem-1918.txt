Another option is Azure Key Vault which securely stores your secrets and allows you to permission access to them programmatically, easily rotate your passwords, etc.
That would require credentials for the network share, the main password, and the physical USB drive with the key file.
There are additional security features such as needing a key file along with the main password to access the passwords.
 - use my.cnf in root home dir for passwords to the database
 - use ldap everywhere possible (ssh, bmc, switches, redmine, ....)
SPB Wallet is a good one we used to use PW safe by ghost but SPB wallet lets you sync to a network share and also sync to your iphone if you get the app.
No nice UI for it, but if you're fine with command-line access this is good.
However, there are few situations where we are not able to use this approach (such as root password).
The PC app auto locks out once there is no activity for a defined period of time.
Our best practice is to share as little as possible amount of passwords.
You can also copy the password while the password is still asterisked out so if someone is looking you can copy it and paste it without anyone seeing the password.
For example, you can run the app and the key file off of a USB drive, but store the database on your network somewhere.
Then we use keepass on our shared storage, but we keep as little as 10 passwords there needed.
It also has a built in password generator and you can generate them from simple passwords to extremely complex passwords.
It's a great little program that stores all of your passwords in an encrypted database file.
This allows for multiple layers of security (separate the key file and the database), all the while keeping it convenient for everyone to work with all of the different passwords.
 - use ssh keys to login to servers and have one root password that is allowed only via console (so you must have physical/bmc access to the server)