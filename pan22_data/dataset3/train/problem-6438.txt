That's usually long enough for the "early adopters" to find any major bugs.
I don't hold to do this if I know there's an active exploit in the wild.
In the example you've given of Office 2007 SP2, it's been well tested prior to public release.
Microsoft also tend to make updates publicly available for download (for those who haven't had a chance to test the pre-release versions) prior to pushing anything out over Windows Update.
Waiting another week won't make any difference, if you're going to have problems you'll have problems.
For non-security updates, I typically want to give it a bit more time.
If you're talking about Microsoft updates, I'd tend to install these immediately.
If there are no issues you could then roll out the updates gradually.
If you're using WSUS, you can create a different group and approve the patches/updates earlier than for the other systems.
That's just common sense, once you're certain of compatibility then there's no real reason to hold off on updating.
If you've got an MSDN or Technet subscription you'll be aware that all service packs go through a lengthy beta and RC cycle so they're pretty stable.
Make sure you pick users who are going to actually put the system through its paces and who can provide good feedback as to what they did and what they saw if a problem is found.
In your case, it is probably safe to pick a handful of test systems.
Once you're sure you've worked out the bugs, then schedule the mass deployment.
Whatever it is you're talking about, the main thing is to install and test before deploying to ensure that it doesn't break any of your other applications (especially internal custom applications).
I would install on one machine for testing for a week or so.