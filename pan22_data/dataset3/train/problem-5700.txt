That said, there are other reasons why one would tune the amount of HZ when compiling a kernel.
If I understand your question right, you are basically asking this:
Which is all we need to know to answer your question, I think.
Since the CFS is completely fair and designed with that sole purpose in mind, adjusting the amount of HZ when compiling your own kernel can never make the CFS any more or less 'fair'.
This equal amount has to be measured somehow - and I am not able to explain in detail how this works - but apparently the CFS "does not not rely on any jiffies or other HZ detail" for it.
If that is your question, I would say - but forgive if I'm wrong about this - you are making this way too complicated.
So, all together, my answer would be: no, with regard to the CFS it probably does not make sense for (i.e.
The CFS algorithm was designed to give all application an equal (fair) amount of runtime on the CPU.
affect the performance of) the CFS, but yes it does make sense for a host of other possible reasons.
Power management is one reason that comes to mind, fixing time keeping in some brands of virtual machines is another, but I'm sure there are many more.
Otoh, a tickless kernel might mitigate all this again and I'm not sure about in how far the moment kernels were able to be tickless coincided with the moment the CFS was introduced.
Hence, I would say that changing the amount of HZ when compiling your kernel to any arbitrary amount will not affect the performance of the CFS.