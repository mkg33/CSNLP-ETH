GLPI is another web application which is an asset management/tracking tool with an integrated helpdesk feature.
I recommend using Powershell for this because you're more flexible with Powershell and you can, for example, use an xml file or a simple text file as source for target names.
I can provide you with samples for that if you're interested (I have to write them first ;)).
http://www.microsoft.com/en-us/windows/windowsintune/try.aspx
This will automatically populate the appropriate fields and provide a much nicer interface for managing this data.
Of course you can schedule a powershell script and let it, for example, write its results to a file or send an email.
And whether it shows it to me via GUI or through a report, either would be helpful for me to see that all machines are running the same java patches, ect.
It also has a gateway interface with OCS-NG to import the data collected by the agents.
I like to use Spiceworks, Ninite, and WSUS together to manage things.
I'm looking for a program that can remotely show me (From a server counsel) all the patch info and programs of the computers on my network.
OCS-NG is a client/server application that uses agents, installable on Windows and Linux, to collect information about the hardware and software installed on the system, including Microsoft patches, Java patches, product keys, and more.
These are really nice when your budget is minimal.
If you are looking for open-source solutions, a really good combination is OCS-NG and GLPI.
The agent then forwards the data to a central server to be viewed.
Spiceworks can give you the information you want while Ninite and WSUS can manage the updates.
(Sadly, I haven't found a solution yet, to display the target name using wmic like I did in Powershell with select __server..., but I will edit this as soon as I have a solution.)
When you've got the budget for it the System Center Suite from Microsoft is what I prefer.
OCS also had the opportunity to distribute packages of software back out to the clients, allowing you to automatically apply a new Java update on each client machine without visiting it.
GLPI also allows you to create connections between devices; I used it to model our network infrastructure here, so that I know the entire chain of connections from the PC to the switch:
You can query installed software and their version using Powershell (which isn't preinstalled on server 2008 by default, but is very handy) or the wmic command (available on all windows machines).