It can't be clock compared to complex x86 cores containing SIMD instructions.
Now this is pure guessing, but I don't see you going much far from what you've got with Raspberry pi hardware due to these limitations.
A on-fly 256bit-AES encryption/decryption speed limitation should be expected, in fact much lower than the bandwidth you have.
ARM core, specially the one present in R-Pi's CPU is extremely simple.
Even though both factors are limiters, you won't ever have 100% of the cpu utilization in this scenario, first due to the low ethernet bus, and then by the fact that network traffic flows in packets, so while buffers are being filled, cpu is poorly used.
Well, you've listed one and Gotschi have listed the other.
The other is the poor performance of the ethernet interface, which is behind USB bus and I personally find it somehow limited.
You should try a board with a real ethernet controller (looks like Cubieboard have one), and a cpu that contains instructions favouring aes en/decryption.