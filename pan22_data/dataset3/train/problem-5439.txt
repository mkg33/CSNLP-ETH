For detailed descriptions you should read the MySQL documentation.
ISAM is brilliant if you have a LOT of records (like, 20 million), and the records are mostly stand-alone (i.e.
MyIsam is generally a bit faster, so if you don't need transactions that is generally your best bet.
Table A references a field in Table B, which references Table C and D. InnoDB can fetch these records using all sorts of nice joining methods (hash joins, etc), whereas an ISAM database would have to run multiple sub-queries for every single row and match the records manually.
you don't need to do lots of links to retrieve associated data).
The most fundamental is that InnoDB is transactional.
Generally, the rule of thumb is, if you want speed, use MyISAM and if you want stability, use InnoDB.
It's a very old technology - but don't let that put you off using it.
MyISAM can appear to be relational through another layer added on top that maintains your links, logic and referential integrity.
ISAM = Indexed Sequential Access Method and is essentially a flat file (for those DBAs who can remember, think Btrieve, or B-Tree).
InnoDB is great for if you have a lot of relational links.
Something to do with atomicity if I remember correctly.
InnoDB is the full RDBMS like you are most likely familiar with.
You will really have to do a course in databases if you want much more detail than that!
Case in point: We had a Btrieve ISAM table with 20M+ records and to do a retrieve and filter data based on an accurate index was almost instant.
It relies VERY heavilly on indexes and if you don't have the right index, be prepared for very very long query times.
Because it's a flat file (more on that later), it is not relational, and thus is not an RDBMS, and thus is more appropriate in some situations.