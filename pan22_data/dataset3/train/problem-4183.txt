SDL is "dimension agnostic", it's just an abstraction layer that makes working with given operating system easier.
The extremely well put together tutorials videos over at http://fixbyproximity.com create a basic 2D shooter from scratch.
Then you can create .obj files with Blender or any 3D modeling software and then parse that file to import vertexes and edges in OpenGL without drawing it yourself (which is almost impossible).
OpenGL isn't some sort of a magical 3D fairy land API, you can easily create 2D games with it.
SDL has a built in 2D drawing API, and there is a newer SDL_gfx module for more modern 2D rendering needs.
I started learning something about 3D (using 3Ds Max and then Blender) and then 3D game developing using OpenGL.
This is probably going to get closed so i'll just throw something in.
Also I'd like to use resources that can be used over Mac OS, Windows and Linux as well.
The triangles and textures and such you draw with OpenGL can just as easily be flat shapes in an orthographic projection view.
SDL (SFML is better if you're using C++) uses OpenGL to do 2D rendering.
It allows you to draw triangles on the screen, that's it, that's what graphics cards are so good at.
Which brings me to an important point, OpenGL is just a way to ease access to your graphics card functionality.
Sprites are just basic 2D drawings - do a Google search for 'sprite sheets' and you'll see a bunch of them.
Could you please explain to me how to get started?
For example, I know that for 3D you can use SDL for keyboard, mouse and OpenGL (I don't like Direct X) for animation and 3d models.
If you make those triangles seem like they're 2D or 3D on a flat screen, that's up to you.
The owner of the site, Mike Geig, has recorded hours of himself using the Allegro engine and Visual Studio 2010 to build it completely from scratch.
The Allegro engine is a complete wrapper for 2D game development and makes everything pretty simple to work with.
I don't like easy things, such as pre made frameworks or game engines.
Every 2D game I've ever written has been in OpenGL and C++, and I've used SDL for a few of them.
Any graphics software can create 2D sprites - so really, an IDE and Allegro and some sprite sheets are all you'd likely need to start putting together some demos.
Any portable 2D library you use is just going to be wrapping OpenGL with a handful of simple helper functions, so of you're already comfortable with OpenGL, just use it (and write your own helpers as needed).
While with 3D i found it very easy to get started, I don't have a clue on where to start for 2D game developing.
I'd like to use c++ and I'd like to use Open sources softwares and API over owned ones (Like Direct X is for Windows).
I'm a bit confused about this but I'd like someday to export my game into all OS.
There's an optional shorter set of videos at the end where he refactors the entire thing into C++ code (it's initially in a C-style coding).
I'm pretty newbie in this things and I've never really had particular experience in game developing.