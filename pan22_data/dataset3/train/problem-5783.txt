For every vertex, you can determine its position on the screen by creating a float4, with the first 3 parameters being the vertex position, and the last being 1.
If any value is out of those bounds, the vertex is not on screen.
With this float4, and knowing the game's resolution, you can determine the exact pixel location of the vertex (I'm going to leave that up to you because it's quite a simple division of the resolution and the x and y coordinates, and I believe you can do that.)
When you have this float4, multiply it by the world, view and projection matrices.
I'm assuming you do, so if you don't, either read up on it or let me know.
If you're writing shaders, you should know a bit about the world, view, and projection matrices.
When you have the x,y coordinate of the vertex on screen, you can just draw a circle at that point (use a sprite and you can draw whatever you want there, little stars, pacmen, anything)
Divide this one by its own w value, and you'll get a float4 with the following:
The x value will be between -1 (left edge of the screen) and 1 (right edge of the screen), the y value will be between -1 (top edge of the screen) and 1 (bottom edge of the screen), and the z value will be between -1 (camera's far plane) and 1 (camera's near plane).