There are different Viewport-types, with different solutions to this:
There might be other Viewport types with different solutions for this, but i guess those are the most important types.
And as you allready said, you can convert pixels to worldunits and vice versa, by using viewport.project and  viewport.unproject.
Most PCs nowadays have a 16/9 aspect ratio, while mobile devices might have different aspect ratios.
- FitViewport keeps aspect ratio, by showing black borders on the sides or on top and bottom, if aspect ratio is different.
This is used for touchinputs for example, as they are given in screen coordinates.
So when creating a Viewport, all you have to think about is, how many units i want to see on screen at one time.
If you, for example, have a human-like character (about 2m tall), and you want him to use 1/10 of the screen-height, the your virtual screen height would be 20 (character-height/screen-height = 1/10).
- StretchViewport stretches the frame to use up the whole screen, no black borders will be shown.
If you take a look at the different Viewporttypes, there are some, which support virtual screen sizes.
That means, that you can say how big your Viewport is and Libgdx will "scale" it up to the Game-Window (or to the screen, if fullscreen).
You are allready on the right path, Viewport and Camera are what you are looking for.
The Camera instead is used to show different parts of the world, you can simply move it arround using world units.