Quite common misconceptions I would say, so let's sort them out.
There are no critical faults, just some misconceptions.
To be honest, the way this form is reporting errors is more like a torture, letting a user to fix only one error at a time.
On a side note, the if(!empty($data) || $data !== null) is a collection of misplaced and repeated operators alone.
That's just for sake of demonstration though as you won't likely be using this function at all, as we will see a bit later
Instead of your current approach, better collect all errors into array, and then verify whether this array is empty or not.
Honestly, how do you think, what a site user is supposed to do when given an error message like "Error : prepare,select"?
First off, this is a quite good a code for someone "relatively new to coding".
You can check my article on the PHP error reporting basics.
In reality, there is no such thing as "bad characters", let alone your routine has very little to do with them, rather spoiling the input data.
How do you suppose to get informed of this error (in order to be able to fix it)?
so in the end you can safely just use trim() instead of test_input()
As a result you will have a pretty neat piece of code (as a bonus you will get rid of this disgusting "right shift" when your code eventually moves off screen due to all these conditions) like this:
As you may noticed, it is quite laborious yet extremely repetitive.
Why not to verify all inputs at once and then give a user all error messages at once as well?
Every time you see a repetition, think of creating a function.
Well, actually you repeat the code to report an error not twice but a dozen times.
I have such a function of my own, a mysqli helper function.
That's a completely different kind of errors that has nothing to do with a site user but belongs to a programmer only.
And thus have to be dealt with using a completely different approach.
YCS didn't leave too many stones unturned, so I'll just mention some regex refinements as garnish to his great review:
Why not to encapsulate all the repeated code into a function again?
If yes, then store it in a session and do your redirect.
In a nutshell, you don't check every operation's result manually but make PHP to raise errors by itself.
The whole test_input function is a cargo cult code snippet that bad tutorials copy from each other.
The idea is to write only the meaningful code, encapsulating all the reprtitions into a function.