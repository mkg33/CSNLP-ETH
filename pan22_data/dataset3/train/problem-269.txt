In order to achieve the proxy behaviour, use forward client action to forward the inbound request to the backend service.
Once the service is invoked it will forward the request to the proxy server.
Turn your main program into an HTTP service first.
jmeter -H my.proxy.server -P 8000 -u username -a password -N localhost
You can invoke this passthrough service from Jmeter (Give the URL of this service in Jmeter).
Rather than having a client with the main function, you can have a service for that.
You can find proxy configuration for JMeter on "Advanced" tab of the HTTP Request sampler where you can specify host, port and credentials
In here you have a listener endpoint which binds to the passthrough service.
Answers provided by both ldclakmal and Dmithri T implies the same and solved my problem.
If you have > 1 HTTP Request sampler you can set proxy for them all in one place using HTTP Request Defaults configuration element, this way you can set up default configuration for all HTTP Request samplers in HTTP Requests Defaults scope so the configuration will be applied to all samplers where the relevant fields are empty.
Please refer this for more information on JMeter configuration.
Then you can perform the load test by invoking the the resource via JMeter request.
Additionally, you can run proxy_server.bal which you are referring as 2 and configure the JMeter in order to send requests via Proxy Server as follows.