But it's just a copy so it won't hurt to experiment.
I have a folder with a lot of files and folders inside it.
ROBOCOPY will allow you to specify the /FAT flag for the destination which will use 8.3 file names.
This will put all the short filenames in the temp, but inside of one or more other folders.
To run it, drag the copied folder onto it, and all the files and folders in it will be renamed.
The former is because handling it correctly would make the batch file take at least twice as long to complete, and the latter is because it can't be done in pure BATCH.
), so when I say about transforming all filenames to 8.3 I would like to say about transforming them to a 8.X format (i.e., to do not change extensions).
If you don't have any short filenames, you'll have to generate them yourself instead.
PS: Well, some files have extensions with more than 3 characters (e.x.
You can always try using the for command with the parameter modifiers.
Simply keep opening folders until you get to the input folder, rename it to whatever you want to call it, and move it where you want it.
If the files have a short filename at all, the following command should work when typed in the Run dialog box or on the command line:
Replace input with your real folder name, of course.
I would like to copy that to another location so the result is a folder with the same file and folder structure, but with all files in 8.3 format.
It also is limited to only 9999 files with the same beginning letters, and does not bother with changing the filenames to uppercase.
Using your preferred method, copy all your file from the input folder to the destination.
I'm not sure how it will act with longer extensions.
I think these limitation will still work with your use case.
Note, this isn't 100% complete, in that filenames that are already short will still be renamed, and the equals sign (=) will not be replaced with _ as it would be in DOS.