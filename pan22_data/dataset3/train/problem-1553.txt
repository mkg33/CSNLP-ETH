This doesn't require you to take a current machine off-line to add more RAM or alike and is seamless.
A Spike in load can be handled by simply adding a few machines to the pool to serve the extra load you are expecting and be removed afterwards once they have been drained.
So look up the service level agreement (SLA) and plan you maintenance according to the terms in your contracts.
The way this works (simply put) is you have a pool of servers which are identical and serve the application you are offering.
Another common approach is  having a multiple servers each with an instance of the application and reserved for a specific subset of your users i.e.
Test the planned changes, data migrations and fallback scenario in your test environment first and only when you have nailed it then proceed to the production systems.
As soon as the machine is added to the load-balancing pool it'll recieve connections and begin serving additional clients.
in a "logical" fasion you have infront of these machines a load-balancer (made redundant so preferrably 2 load balancers in a cluster as well).
A common approach for web application is a load balancing cluster, with multiple identically configured servers, each running the same version of the web application and a load balancer that  distributes requests evenly over those servers.
How does this allow for seamless expansion to handle higher loads ?
A common first step in a scale-out scenario is a dedicated database server and running the application itself separate server.
Since this is not my call and department, how best should a solution to these issues be passed to the management.
I hope I am asking this question at the right stackexchange site.
You can "just" plug an extra server into your load-balancing pool.
Currently we are handling like 15% of the organisations and I believe that in the next 5 - 10 years the organisations being handled will increase to 50 - 80%.
It was discovered last time we had downtime that the server had issues handling about 8000 request per second.
Well, this allows you to seamlessly remove a client machine from the load-balancer pool so it'll go un-used (depending on load-balancer and software you serve you might also be able to "drain" a server to different machines as to pro-actively empty one of the servers which needs to go down for maintenance or alike.
I wouldn't know the policy guiding the purchase of servers in this organisation because I am new here.
The actual contents of your question is more like:
Typically dealing with more clients, more users and larger datasets it comes down to two options
The first question I would ask is can this application you serve work in a cluster set-up ?
Customer A & B on server 1, Customer C & D on server 2 etc.
Using this in combination with a "clever" load-balancing mechanism will also take care of any spikes in load you might come across (for instance when serving web application like a ticket platform.
The solution to this was to revert to backup server and immediately add more RAM to the server and the server was restarted.
To me, we can't continue adding RAM, restarting server and buying high end server.
These parameters can range from: Individual load on the machines, and then attempt to do keep the load on all servers the same, or this could be a "dumb" way of doing load-balancing the round-robin style.
Usually there's a stipulated maintenance window in the contracts like:
What need to be done to these servers and their applications in order to avoid such downtimes and also to anticipate for heavier loads in the future?
To answer your question How to plan Plan Server downtime, that is mostly a service level agreement issue.
This load-balancer will then, when a client wishes to connect to the application, tell the client which individual server to connect to , based on certain parameters.
If so, expanding for the future and trying to cover a machines downtime could be resolved by setting up a load-balanced cluster environment.
I work in this new place that host applications that should serve a specific type of organisation in the country.