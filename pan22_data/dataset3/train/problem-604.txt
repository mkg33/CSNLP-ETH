That does not mean you have no more memory left, it simply means you allocated at least one chunk from each and every slab.
To simplify the explanation, assume you have a memcache with 3MB of ram with 3 Slabs:
so now you are using 2 out of 100 allocated chunks in slab 1, "wasted" statistics dropped, and used statistics increased.
This is because memcached allocated a single chunk from "slab class 1" and 99% of the memory for that slab is "wasted" and 1% is "used" This does not mean that slab and the memory allocated for that slab is gone.
There is nothing wrong for used% + wasted% being equal to 100%.
You probably have a very large number of very small objects.
You could even turn persistence on to fix "old cache" issues on restart.
I know this might not be possible but you could try it as an option and keep an eye on the memory fragmentation.
To see this issue a "set" with 100k size and another one with 1000k size
Typically, the smallest slab holds 104-byte entries.
It has been a year since this question and I don't know if you found your answer but I'm going to say your perception of "wasted" is wrong.
You'll see in your statistics(roughly) that you have:
If you have a lot of entries that just map one integer to another, you can get waste as high as 85%.
You can find information on how to tune around this in the article Memcached for small objects.
Wasted memory is allocated in memory so it can not be used by another application, but it still is available for memcached.
I had this issue and moved from memcached to redis (without disk based saving).