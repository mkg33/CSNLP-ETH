The bullet travels some distance, let's call that A, each update.
Instead, I would check if the bullet's path has intersected the player object during the last frame.
There may be transcription errors also - x instead of y or something like that.
To check if the bullet is currently inside a player, you can test the distance between the player and the bullet.
Since a bullet could just clip a little sliver at the edge of a player, this is possible even with fairly slow-moving bullets and players.
It calculates the little segment of the player's circle that crosses the bullet's path, then checks whether the bullet has touched that segment during the time since the previous update.
If they are closer together than the radius of the player circle, then the bullet is inside the player.
The process is pretty straightforward, though it's a bunch of code.
Caveat: I wrote this up here on the site, so it probably contains syntax errors.
This is the bullet I create when a player clicks to attack
It's more complicated, but it is a fairly optimal process that shouldn't be noticeably slower than the less accurate method.
Then for the players I just have a usual player X and Y and I can't figure out how to check if the bullet is within the area of the player, if you need any more code just ask/If you want to see how the game is working here.
If A is larger than the width of the target player at the point where the bullet's path crosses it, then the bullet could "tunnel" through the player between frames.