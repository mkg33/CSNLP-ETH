By its very nature, it should be able to detect and fix corruption.
If you do, put an echo statement in there to tell you where it is.
Instead I'd build up a big one-liner to do the job.
Tested, but I expect the rsync options could be tweaked.
You have to setup SSH to login to your host with key authorization to run it without interaction.
Have you tried using the --partial option, which will let it continue if it gets interrupted, and re-running the command repeatedly until it no longer transfers any data?
The -P option display progress stats and will help you understand where/when your file transfer breaks.
You could always bittorrent it between the hosts, but I'm not sure how to automate it offhand.
I don't do this kind of thing often so I wouldn't script it.
If not, then you're not actually using rsync to transfer the file, it's just using whatever underlying transport method you're using, so you won't have the error detection.
Rsync works by dividing a file into chunks and only transferring the chunks if they're different.
Are you using an rsync server on the remote end of the connection?
The -h makes it "human readable" and the -z compresses.
So technically this isn't one command, but it's all on one line.