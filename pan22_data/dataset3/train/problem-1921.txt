I've sometimes done things like this, expecting the command to run for a long time, but something goes wrong and it terminates immediately; the sleep lets me kill the command before the system shuts down.
Where as this method does work on older and new versions sudo:
In that way I can easily use mine variable instead of sudo,
I mainly make use of these for personal computers of others, that I have to maintain.
What CarlF said sounds better, but if one command fails, the computer will still be running with superuser privileges.
What John T. said sounds good though, except there still is the risk of finding the password in shell history.
Unless you know what you are doing, don't do that.
You could also configure sudo with visudo to allow you user to use make as sudo without password.
I might also add a sleep 60 before the halt command.
Personally I  do quite the same as John T answered on Nov 9 '09 at 2:47, I've also improved mine according to guidance of his answer, thanks.
I've had it happen at my local A+ Training program with my experimental computer one too many times... -_-
Note the use of double quotes to allow $USER to be expanded by the (non-root) shell.
Note, I've found that method doesn't work on an older version of sudo, specifically "Sudo version 1.6.7p5":
Difference is that I tend make use of variables, something like:
Setting up sudo like that is dangerous if someone happened to see the fact that sudo requires no password on your account.
Several of the other solutions have the disadvantage that they unnecessarily run ./configure and make as root.