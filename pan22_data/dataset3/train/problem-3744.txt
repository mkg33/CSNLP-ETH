If your greenhouse is nearby you can run everything over your WLAN; if not, then remote options are available - I use an intermittently available public wifi so use a service like weaved.com so I can tunnel to the Pi when I don't know what its public IP will be.
What might make things easier is to consider using other sensors and switches, for example the sonoff th range of wifi switches and sensors are very cost effective.
Both remote Pis report home periodically to another Pi that acts as a web server:
These $10 switches have built in wlan network connectivity, an esp8266 chip which can be reflashed with custom firmware and have built in temp and humidity sensors.
The flashed switches and sensors are supported by freely available open source home automation systems such as FHEM and domoticz which will run on the rpi and provide the automation you require - sensor reading, switching based on temp, humidity etc and provide you with a customisable gui frontend.
As you point out without any programming skills its going to be a steep learning curve to create the gui frontend to your project from scratch.
Having said that, what you are trying to achieve is actually relatively simple.
I have a couple of monitoring systems, one on a boat and one in my shed, that use a BMP180 temperature/pressure sensor and a webcam for a couple of quid each.
This sounds like a great project, perfect for the rpi.
The shed Pi is powered by a solar panel and the boat pi from a wind generator, so that's something else you can add into your mix.
I am doing exactly this with an rpi and flashed sonoff th 16 with temperature sensor which monitors the temperature of our garden swimming pool water!
Using rsync means that if the network is down or congested the data will be transmitted whenever the connections available.
All the Pis are MKI versions, but are plenty powerful enough to do what's asked of them.