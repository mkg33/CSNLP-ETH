You can see that images are displayed (with warnings in the console) but insecure scripts are blocked.
Chrome and Chromium have (or at least, have had, at times in their history) some relevant command-line flags for this:
A malicious man-in-the-middle could still track a user in this way.
which explained that I probably downloaded external images into an email... which triggers the warning, and because Gmail is a single page app, and doesn't normally reload, the yellow padlock never goes away.
I get no pop-ups or dialogues asking if I want to display the insecure content.
With respect to Gmail specifically, I found this life hacker article on gmail security icons.
In Chrome I've noticed that I occasionally get mixed-content warnings in the url bar, eg:
Checking the javascript log (instructions)shows that the insecure content was due to a logo of my employer downloaded via an insecure connection.
I'm using Gmail*, so it's not just the little sites, but I've seen it on other websites.
I'm using Chrome 30.0.1599.101 on OSX, but I've seen this previously in older versions.
The reasoning being - this tells me nicely, after the bad thing has happened.
I'd rather the bad thing was blocked - after which, by all means warn me.
*Strictly speaking I'm using google apps for domains, ie, my current employer use gmail for their domain's email.
Firefox 23+ also has this feature (verified by me on the test page above in Firefox 24) in that it blocks the javascript (which firefox call "active content", but not the images "passive content").
Can I configure Chrome to block mixed content, not just warn about it (or, if I have accidentally dismissed a warning before - reset the default).
I'd still like the option to block all of the insecure content.
Getting them to fix that would also help of course - but that's outside the scope of this question.
Clicking on the padlock to get the details shows the following message, which implies that the insecure resources were displayed and not blocked:
Chrome blocks some insecure high-risk content (javascript) and allows other lower risk content (images)
Visit this strange ie mixed content test page, and look at the javascript console.