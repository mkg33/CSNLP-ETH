Secondly, sqlcmd.exe can fail on large files too, complaining about available memory.
In an advanced screen you can select that your target is SQL Server, not SQL Azure.
For SQL migrations, use the free and open source SQL Database Migration Wizard.
This works for SQL Server to SQL Server as well, for example if you'd like to migrate a SQL 2012 database to 2008 R2.
Have a look at xSQL Schema Compare and xSQL Data Compare.
Then I came across a wonderful tool for migrating SQL Server to SQL Azure databases.
First of all, the generated script was not always working correct.
osql.exe works, but just takes ages (and has the same command line arguments).
There is a GUI and command-line (Batch) version available and it's open source.
They have a tool that will script the database and script the data also.
You can first synchronize the schema with schema compare and then copy the data.
I had a 5GB database with couple ~10 million records and tried the route via Generate Script and than ran it with sqlcmd.exe.