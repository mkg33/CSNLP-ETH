So for a group of units, I need to group them into subgroups which can all share the same optimal path.
Keep in mind these algorithms are typically designed for processing highly-dimensional data, not unit positions in 2D/3D, so be sure not over-engineer your solution based on this.
Are there any existing algorithms for grouping units into subgroups?
However, a naive implementation would fail if, for example, the units were ordered from two distinct locations- two optimal paths would have to be computed.
If you are looking for an academic solution have a look at cluster analysis, possibly combined with this other Wikipedia page: Determining the number of clusters in a data set.
At the moment, what I'm thinking is to pick an arbitrary unit in the group, and then pick all units in a certain, relatively small radius.
Then for every unit in that radius, I increase the radius.
I figure that I intend to generate, for group orders, one optimal path, and then use a flocking algorithm to "glue" the units together as they all follow this one optimal path.