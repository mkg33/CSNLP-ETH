In regular request/response between client and server, first a client initiates a request to server, then server responses.
Once the TCP connection is established either end can send data to the other end whenever it wants.
Assume that the server always knows the IP address of its clients (note that clients have dynamic IP address).
By "initiate the request first" I mean server must be able to send data to clients whenever wants.
IF they get no reply to their test/keepalive message then they need to tear down the TCP connection and try establishing a new one.
About what you said of persistent connections (keep-alive) it's an HTTP method to receive multiple HTTP requests and responses, so it's not what you are looking for.
Remember though, that to connect to a host, it has to be expecting a connection (the other host has to be listening in a specific port, so it would kinda act like a server too).
Assuming you are talking about TCP/UDP, if you know both connection endpoints (IP and Port), you can do whatever you want with the nodes.
Anyways, this is a layer 4 protocol and I think it shouldn't be discussed here.
Is it possible for server to initiate the request first?
In practice however your clients are likely to be behind firewalls or nats and that adds some complications.
To establish a TCP connection one end (the "server") listens and the other end (the "client") connects to it.
The result is that if you are deploying clients on arbitary networks and you need the server (which we assume has an IP on the public internet) to be able to send messsages to them the clients need to establish a permanent TCP connection to the server and they need to periodically send a test/keepalive message to the server.