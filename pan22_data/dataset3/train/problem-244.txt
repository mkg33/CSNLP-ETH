Are there any standard approaches to solving this?
The easiest approach is to check for collisions more often.
I have tried limiting their maximum velocity to be less than 16px but it does not look right.
A small optimization to this technique is to draw a  second bounding box from the start position to the end position of the bounding box and check if anything intersects with this.
The problem is that they clip through the first layer of tiles before collisions being detected.
If you have an object with a bounding box with a height of 50 and it moves 300 pixels in height that frame then you can move it 6 times 50 pixels and check each time if there is a collision.
I am making a simple grid-tile-based platformer with basic physics.
If not you can skip the movement subdivision test and just move it once.
I have 16px tiles, and after playing with gravity it seems that to get a nice quick Mario-like jump feel, the player ends up moving faster than 16px per second at the ground.
Then when I move the player to the top of the colliding tile, they move to the bottom-most tile.