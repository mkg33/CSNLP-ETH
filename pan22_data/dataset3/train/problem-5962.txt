No branch merges necessary, every commit is potentially ready for delivery/deployment once the CI execution is successfully completed.
Every branch you mention is nothing but a silo and merging it into the master branch can invalidate both the results obtained in the silo as well as those obtained so far in the master branch.
The right approach would be to not pull such branches, instead every commit should be done on the master branch.
Never a known, quantifiable effort since you can't know right away which of the branch commit(s) is/are responsible.
From the agile prospective you'd be constantly creating technical debt - the need to merge the silo branches into master, re-validating the merged result, identifying and fixing any problems that would appear after such merges.
You'd only have one Jenkins setup - on this master branch, executing verifications after every commit.
It should be noted that this doesn't mean Continuous Integration, but rather just waterfall masquerading as CI, also known as CI Theatre.