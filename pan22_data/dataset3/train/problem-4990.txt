 <div class="indicator" id="degreesIndicator"></div>
 <p class="centertext">JAVASCRIPT DYNAMIC BOX SHADOW</p>
What are your suggestions in order to improve the quality of this JS code (please ignore the HTML&CSS)?
 console.log("Circle center position is " + topOffset + "px from top, " + leftOffset + "px from left.
Also, as a moderately new developer, I'm sure I'm not structuring my code properly.
 indicator = document.getElementById("indicator"),
 hypotenuseIndicator = document.getElementById("hypotenuseIndicator"),
It's supposed to do what it does: it follows your mouse and rotates the items in the center depending on the position of your mouse.
   circles[i].style.boxShadow= "-" + Math.abs(hypotenuse / 50) + "px 0px " + Math.abs(hypotenuse / 20) + "px rgba(0,0,0,0)";
http://brainlessdeveloper.com/demos/javascriptdynamicshadow.html
  circles[i].style.boxShadow= "-" + Math.abs(hypotenuse / 50) + "px 0px " + Math.abs(hypotenuse / 20) + "px rgba(0,0,0,0.2)";
Here's a live demo to what my code does, it works pretty well:
 circlesdown = document.getElementsByClassName("circledown"),
 <div class="indicator" id="hypotenuseIndicator"></div>
 // DISTANCE BETWEEN THE MOUSE AND THE CIRCLE CENTER
And I'm sure there's a couple of mistakes/inefficiencies in the logic of my code.
   circlesdown[i].style.boxShadow= "inset -" + Math.abs(hypotenuse / 30) + "px 0px " + Math.abs(hypotenuse / 10) + "px rgba(0,0,0,0)";
var circles = document.getElementsByClassName("circle"),
<body onmousemove="getCoords(event); getAngle();">
  circlesdown[i].style.transform="rotate(" + degrees * (-1) + "deg)";
  circlesdown[i].style.boxShadow= "inset -" + Math.abs(hypotenuse / 30) + "px 0px " + Math.abs(hypotenuse / 10) + "px rgba(0,0,0,0.2)";
The following JS calculates at which angle relative to the horizontal (passing through the element's center) your mouse is and rotates the circles so that the box-shadows are in the opposite direction (or in the same direction if the shadow is inset).
 // X-AXIS DISTANCE OF THE MOUSE WITH RESPECT TO THE CIRCLE CENTER
 // REMOVING SHADOWS IF THE USER IS CLOSE TO THE CENTER OF THE CIRCLE
 hypotenuse = Math.sqrt(Math.pow(leftOffset - x, 2) + Math.pow(topOffset - y, 2));
  circles[i].style.transform="rotate(" + degrees * (-1) + "deg)";
 console.log("Circle diameter is " + circleDiameter + "px.