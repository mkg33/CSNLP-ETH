However, whenever you make mistakes, your time remaining is reduced (the more time you have left, the more you're losing).
If you want time pressure, you need to add an aspect of a countdown or time limit.
From a broader perspective, you can look at time as a resource the player must manage.
You can watch the in-game tutorial for the hacking system.
One idea that springs to mind is that the player must maintain the integrity of their connection to the system.
Also, as there were only a handful of node-types to overcome and only 4 specific actions you could take at any given time.
Less risky hacking targets would simply kick you out of the network, but more dangerous targets could actually trace your physical location and then send goons after you.
This adds an interesting tension to the game: You'll want to solve it fast.
You could also add an aspect of timing to the user's actions.
Consequences were usually just having to wait for the system to reset, but occasionally an alarm would sound and guards with guns would come try to kill you.
If you spent enough points on upgrades, most systems became trivially easy to hack, while the hard ones remained very difficult to complete fully.
It should fit the whole timed approach and the actual theme as well, without having to explain anything special: If there's some intruder, if he's doin mistakes, he might be a lot easier to spot.
The hacking was a mini-game that you could undertake to open doors, safes etc.
Riffing on Phillip's ideas, you could simulate the resources of the attacker's machine.
That would certainly ratchet up the pressure to be fast!
I think you are heading in the right direction as well.
When you trip an alert, a network trace starts from server nodes and if it reaches your terminal before you complete the graph or voluntarily disconnect, then you fail and face the consequences.
Think of Grand Theft Auto or Thief or Assassin's Creed, where doing suspicious or illegal things raises the attention of the guards.
This makes the game non linear and more life like in my opinion and makes the player feel more freedom rather than following a defined course.
without having to search for the key or wait for the story to advance to the point of making the key available.
Make it so certain actions can only be taken or completed at certain times.
I think that most of the ideas here are a great inspiration, I think it would help you more to try and pull yourself out of the game and stop thinking of it as "a mechanic to a game".
You could try limiting the number of actions the player can take (the actions themselves become a resource) or the rate at which they can be taken (having to wait for some focus or brainpower resource to recharge between actions).
Meaning the player would need to start going back and covering their steps.
By default, you've got 15 minutes to solve a puzzle, which is plenty of time.
You could adapt this mechanic for an anti-intrusion system without much of a stretch.
I would personally make the game react more to possible real life events.
You end up with a number of solutions from this, some could be as simple as allowing the player to purchase new scripts that detects another user has logged onto the same machine, starting to view logs etc (started to investigate).
Adding more mechanics of time pressure could end up being too similar.
You can take your time, think 5 minutes about the problem, and then start solving it.
A hacking attempt starts out with the system unaware of your presence.
Adding other resource pressures can increase the intensity of the time resource.
Launching one kind of hack takes up x% CPU and yMB RAM for z seconds, or running a trace evasion program takes up a chunk of resources continuously.
Good luck and it sounds like you're onto a fun game!
There were various upgrades you could buy with your hard-earned experience points to improve your hacking abilities, as well as some single-use items you could find that would help with difficult hacks.
The better the players timing, the more likely their action is to succeed, or the better the outcome of the action.
Depending on your game, I could imagine that some similar mechanic would fit rather well into it.
The mini-game was fairly interesting to learn and a vast improvement over 'hacking' in the first two games of the series, but it became tedious by the end of the story line.
As I recall (haven't played it in a long time) the old school Shadowrun game on Genesis had a twist on your network trace mechanic for more dangerous targets.
If the integrity reaches zero, the signal is lost and your hacking attempt ends.
If you didn't spend your points on hacking upgrades, hard systems remained nigh impossible to take down without blowing through stacks of the worm software items.
But if you actively do something to deflect their attention (hide in a shadow, duck down an alley way, blend into a crowd, etc.
Each action you take has a time to complete and a risk of alerting the system.
The goal is to subvert nodes along the graph to reach all of the server nodes on the graph.
You could later alert the player that there's news on TV of a breach and police are investigating.
Or make it so you have to click, hold and release buttons at specific intervals to finesse your actions.
It's essentially a Nonogram game: You're supposed to find the right tiles in a grid identified by numbers (similar to how Minesweeper works, but with different mechanics).
When I read your question I immediately had to think of the GameBoy game Mario's Picross.
Deus Ex: Human Revolution has a similar concept to your ideas about a network trace.
(Like sports games frequently do: click & hold for a power level and click at the right moment for timing.
The trace was essentially a countdown timer, which made each hacking node suspenseful on its own and made the entire thing a race against the clock once started.
Taking some actions decreases this integrity, taking other actions might hold it steady or even bolster it.
If you make a mistake, you won't be faster or better compared to the slower approach, but you've still got the option to do so.
In particular, if you added more ways to prepare for and react to the network trace, you could make your game much more enjoyable than Deus Ex's version.
You can only take additional actions when your machine has the CPU and memory available for it.
Here's is a field-goal kicking game that implements this mechanic.)
If you keep being bad, the guard will attack or pursue you.
Every hacking attempt would devolve into either throwing all your items at it or just attacking every node as quickly as possible to get to the end.
Finally, if you want to reduce the starkness of the network trace - where either you're getting counted down or not - you could implement a heat or suspicion activity.
Say if a player takes on a simple hacking mission at the start, does it and moves on but forgets to remove the logs.
You are 'jacked into' the terminal node of a network diagram.
Think of what pressures would occur in real world situation.