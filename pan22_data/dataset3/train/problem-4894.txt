Physics works differently for 2D and 3D, so 2D colliders will only interact with other 2D colliders, and by default will only respond to 2D physics events.
This includes physically preventing a player from walking through walls and other game objects.
Trigger is an another variable that makes the collider component penetrable.
For organisational sake, it is probably best to simply add the collider to the object the collider represents.
First and foremost, since you are creating a 3D scene, you should not be using any Collider 2D component.
There is also a good Unity tutorial on colliders that will show you the basics.
Then it will work as collider which will keep your character just in the stadium plane.
In the case where you have a collider spanning multiple game objects, these game objects should likely be grouped under a parent game object, with the parent game object holding the collider.
In a 3D game, this detail is unlikely to be noticed, apart from your game potentially stalling to calculate collision due to the far more complex collider.
If you ever want to have any other reaction to collision, such as having the player take damage or triggering a door to open, you will want the collider to be on the same game object as the script in charge of its reaction.
To stop your player from being able to walk through objects in the scene, you
To get everything working, there are a few tiny details you need to ensure.
Of the remaining options, there are five particular colliders that stand out:
This is because colliders automatically call a number of MonoBehaviour functions, such as OnCollisionEnter(Collision) and OnCollisionStay(Collision), which greatly help you perform your collision logic.
There are many possible collider types to choose from, so which one should you choose?
Select the object you wish to add the collider to from your hierarchy, and on the inspector, select Add Component.
In the real world, you could feel the detail on the bricks, and in indent of the mortar between each brick.
The same goes for 3D colliders and 3D physics events.
For the purpose of simply preventing the player from moving into objects, its important to note that it really does not matter what game object you place the collider on.
Add 3D cubes in the scene near the floor of the stadium, it will have a default 3D box collider in it.
If you are more experienced with the programming side of Unity, you might also want to read through the API entries, including Collider which acts as a parent class for all 3D colliders.
Choosing between them depends on the object you are placing the collider on, how detailed you want your collision to be, and how efficient you want your collider to be.
In this case, a simple box would suffice, as the player would still react to the basic shape in practically the same way.
You do not need to set any of this up for simple 'prevent the player from walking through this' collision.
Colliders are components that allow us to define a shape or area for processing collision events.
From here, you can select the type of collider you wish to add, or type "collider" to view all of the collider components presently available to you.