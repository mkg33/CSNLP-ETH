If this is not acceptable, what would be the best way to keep all clients updated with the latest .exe?
We have an executable that is used by 50+ client machines on a network and upgraded regularly.
Deploying a single exe is pretty simple, but I would hesitate to do it through a login script.
This assumes, of course, that the .exe is reasonably sized.
It was how things were done in the early Netware days.
Relying on end users to do the right thing is not something that you can count on.
Personally, I'd prefer to see it run from the client machine.
ClickOnce is a deployment technology that enables you to create self-updating Windows-based applications that can be installed and run with minimal user interaction.
+1 to the idea of a boot or login script that checks for an updated version.
Loading the app is not really something that's needed across the network, if it's not essential.
If you were to lose that drive or if some user were to delete the exe, the app would be gone for all users and I'm guessing since 50+ users are running it daily, its a business necessity.
It sounds like this is an EXE that is built in house?
That way when we upgrade the .exe we can simply replace the one file with a new one and all clients will be accessing the new one.
A startup script or using a tool like SCCM or SMS or Altiris is better.
Is it acceptable to put the executable on a network share and have the client machines run it from there via a shortcut on their desktop?
If so, and you are using Visual Studio 2005 or better, it might be worth looking into the ClickOnce Deployment options.
Also, when you go to upgrade it, if you want to pilot a new version you will have to deploy it or somehow redirect a certain number of users to the new file on the share.
ClickOnce deployment overcomes three major issues in deployment:
The controlled deployment of an application to end workstations is always preferred.
If your network is unreliable, I'd recommend fixing it, instead of doing some workarround to make the .exe file access work.