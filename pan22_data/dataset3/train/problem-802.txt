From my own personal experience, I chose to save into %UserProfile% because the user always had read/write/modify access to it without having to change any of the permissions.
Game developers have not traditionally been great at respecting the conventions established by an operating system.
It's silly and usually wrong, but it is what it is.
Games will sometimes store their settings and save files in the documents folder because it makes them visible, so less technical users will see them and be reassured that they do exist, or will be more likely to correctly back them up if their backup method is a crude, "copy the stuff in my user folder to another drive."
I never understood why put savegames in hidden folder or even in my documents on system drive ?
The difference between them, for the purposes of this question, is primarily that %AppData% is where stuff the user should not need to see or interact with goes, and the documents folder is for the user's documents: stuff they'd want to see and interact with.
Personally for this reason I like having it in my documents, although I'm sure someone will tell me to just get a proper backup system instead of doing it manually.
I don't care to recall the number of games I've had to start over after a backup/restore or similar thing because I moved all my important files from my documents, but totally forgot about user application data such as save files because it's often in with the program files or other weird places (like in a hidden folder such as appdata).
Why not use /"game installation folder"/savegame/  as did older games ?
The %AppData% and documents folders are for saving per-user data.
A little consistency would be nice, and even nicer would be for services like Steam to keep copies of save files on a network somewhere.
In the old days you always knew where savegames were.
Particularly when using Restricted user accounts, you often don't have write access to files created by other accounts inside %APPDATA%.
Games will also sometimes store files there because they haven't changed the behavior of the relevant code from older OS versions, as you suspect, or simply because they don't care to think about the problem that much.
Although to be fair, lots of regular application developers don't either.
I imagine the AAA titles made the choice for the same reason as us; we didn't want the headache.