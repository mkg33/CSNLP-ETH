This is reasonably common solution, you might think it seems quite slow (but it's not too bad) try it out and see how it works in your case.
If you've got a position for each particle all you need do is going through all the vertices and add them to the particle position.
If you are pushing a lot of particles and find you need things to be faster then it's probably best looking at doing the entire particle effect as a shader, that way you reduce the communication between the gpu and cpu.
Are your vertices something like topleft position:-1,-1, bottomright position +1,+1?
If you drew this it would create a particle centered around the origin of your scene, how big it appears would depend on your projection matrix.
Lets say the particle is 2x2 and the center is 0,0.
Do that for all your particles each time they change position.
To use vertex arrays and give each particle individual positions you need to do the transformation on the CPU.
And you're moving them around with the worldview matrix?
For each particle you have a set of vertices 4 if you're doing a quad, 6 if it's made from two triangles.