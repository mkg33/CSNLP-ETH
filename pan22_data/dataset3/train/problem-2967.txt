You can then allow ports on the VPN zone that you don't allow on the NET zone.
If you don't want any traffic to be sent unsecured, I would suggest setting up your routing table without a default route, and only a specific route to the VPN server.
When the VPN is down they will attempt to go directly out eth0 on the original port number, which the iptables rules should block.
For example, assuming that 192.168.0.0/24 is your local network, and your VPN server is at 1.2.3.4:
The Shorewall documentation is extensive and includes how to modify your configuration when adding a VPN.
I am using the default Network Manager application that came with Ubuntu.
While the VPN is up those packets will go out the VPN interface (e.g.
I am using the latest Ubuntu distribution... and I have a rather spotty VPN connection.
Look at a tool like Shorewall to build your iptables rules.
This means that when your VPN connection goes down and removes the route over the VPN, there won't be any matching route for the traffic and it won't go out.
Start with the example 1 interface configuration and add in the VPN.
Configure your VPN and the Internet into different zones.
Even better yet would be to reconnect to the VPN while halting traffic.
I am having trouble maintaining a connection to my VPN, and that being a separate issue, I'm looking for something to make me a little bit more secure.
Anyone know of an application that does this for Linux / how I can configure IPTables to block the ports?
If you need finer granularity on a port level, you could add iptables rules which block traffic going out eth0 on those port numbers.
tun0), and will be encapsulated and go out eth0 on the VPN port number.
For example, to prevent HTTP traffic going out unsecured:
I would like an automated way to shut down either specific ports when the PPTP VPN drops connection, or to kill an application at that time...