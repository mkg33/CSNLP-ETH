Each will have its own associated monitor process.
As another poster mentioned, beware any glib answer that throws around "killall", since it has a radically different purpose on AIX and Solaris (at least) than it does on Linux.
Outside of the above pkill and killall answers, you can do the following, assuming you want to kill process "foo"
The script gives a way to kill the main processes, but not the monitor processes.
How can I kill these (with the exception of the grep command itself)?
I run a script called "delayed_job" for a Ruby on Rails application.
If you are running a linux machine, the killall command seems to be what you are looking for.
When the main proc dies, the monitor will spawn a new one.
I want to kill all of them, or at least the monitors.
One of the options is to run this proc with a separate monitor proc.
http://www.tech-recipes.com/rx/742/kill-the-undesired-unix-processes-in-one-go/ has a nice write up of the usual answer for generic unix: pipe ps to grep, then to awk, then to xargs.
Running killall as root on Solaris is a "resume generating event".
The grep [f]oo means that grep will not match the grep command itself, so it will just kill processes named "foo".
Both has extended documentation in their respective man-pages.