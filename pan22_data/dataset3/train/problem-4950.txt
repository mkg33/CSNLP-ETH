Their entities are essentially represented by three parts: a box for the body, a box for the footprint and a box representing the attack area.
You shouldn't treat your objects as boxes with the same height the entity have.
You can think of the body box as representing the width and height of the entity and the footprint as representing the depth.
In Box2D terms an entity could be represented by a Body with three Fixtures for the body, footprint and attack.
Each Fixture would be a sensor so you get begin/end callbacks for collision detection but the Fixtures don't actually physically collide.
Your objects should have a collidable fixture only on the FOOT, and the head+limb+legs should be a sensor fixture, where you only use it to detect if a player has fell on top of another, etc.
In other words, just use Box2D for collision detection not physics simulation.
I'll give an overview of the post but you should check it out as it does a thorough job of explaining the solution (with pictures too!)
The footprint is used to determine z-order for drawing and whether or not entities are capable of colliding with one another.
So, when the player is just moving (not attacking) only the footprint is used to determine whether it's colliding with another entity.
This blog post covers pseudo 3D collisions and discusses an interesting solution to your problem.