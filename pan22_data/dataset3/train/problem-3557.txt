Ideally, I would use a private chroot in the environment which maps to all the needed directories to the places I need.
How can I modify my environment to work in the same way without recompiling?
But chroot is not available for non-root users of course.
This case can be solved with PYTHONPATH of course, but there are other binaries taking the default path from the compilation stage - like zsh modules.
I tend to copy some useful programs to every server I login to.
For example with a normal deployment, I would need to recompile python to make /home/yyy/priv_env/python/lib the main library path, but on all other hosts I need /home/xxx/....
Unfortunately now I can't use my standard login at some hosts.
Also with long login sessions, it might be affected by tmp autocleaners.
This has worked just fine, while I had the same login on all hosts.
I also thought about setting up a link in /tmp/${random_preselected_string} to ${HOME}/priv_env and setting all the paths to point at the /tmp/... link.
Is there any way to solve this without taking care of many shell variables?
I have a script that just checks them out, links all binaries to ~/bin if they're newer than the system-wide versions, and does all the needed setup - I've got the setup I need on any kind of host/distro.
I have loads of configuration files, a statically compiled zsh (in case I need a new version), vim, python, version control binary, etc.
This will work as long as noone creates a file with the same name there.