A vector font has to go through a rasterization process in order to be displayed.
Apple fonts used to have, for a given typeface, bitmap (rasterized) fonts in specific sizes to make them look best on screen for the common sizes, and a vector font for all other sizes.
being viewed at their "native" size), will render faster.
Finetuning the bitmap used to make a bit more sense when everyone had the same display and the same printer resolution.
The main benefit is that you can tweak the bitmaps very carefully for specific, often used sizes.
Not sure how useful it is now in the age of the Retina Display.
So you'd look at the font package, see 10pt, 12pt, and a TrueType font package for the typeface.
At larger point sizes, say at 72pt, the curves are nice and round at a distance.
So rasterized fonts, especially ones that don't have to be scaled (i.e.
With a rasterized font, it's been drawn already (rasterized fonts are just collections of bitmaps), so it just needs to be copied (and scaled) to its final destination.
This involves "drawing" the font on a bitmap within a section of memory (memory directly connected to the screen or other intermediate memory buffer) which takes time.
But once you get down to smaller sizes, say 8 pt, you get really bad aliasing and you'd want to tune more specific type things like x height and kerning and so on.