I guess my solution will be similar, but without caring about the distance between the objects.
I took the same formula as stated in gamasutra but I don't use centerdiff as the collision normal.
This will lead to the collision normal [1/0/0] or [-1/0/0] respectively for the other aabb.
I am currently working on a basic physics engine which does not consider rotations.
Also let's say they will hit each other on their sides.
At the moment I work on collision resolving between aabbs and spheres.
Does anybody have an idea or any experience with collision resolving between aabb-sphere and aabb-aabb?
Also, when the sphere has a certain force, it will not bounce off the aabb but push it in front of itself.
Also I guess that the collision resolving of aabb-aabb will be the same as sphere-aabb.
When a sphere hits a falling aabb from a diagonal direction from above will the aabb be pushed to the sides according to the flight direction of the sphere or only accelerated further downwards?
http://www.gamasutra.com/view/feature/131424/pool_hall_lessons_fast_accurate_.php?page=3
I haven't found a way to prove that this is correct though.
Instead I take the corresonding normal of the surfaces which collide.
At the moment I have the sphere-sphere collision implemented, which is described here:
Unfortunately I have no idea what a collision between a dynamic aabb and a dynamic sphere looks like.
For example: Let's assume an aabb1 with velocity [1/1/0] and an aabb2 with velocity [-1/1/0].