Where you generate the keys doesn't matter, where you store them does.
It should be run on the system to which you will be connecting.
If you want to SSH from one machine to another, then the private key needs to be in the .ssh folder in the account you are SSHing from as id_rsa, and the public key must be in the .ssh/authorized_keys file in the account you are SSHing to.
Something else to bear in mind is the version of SSH you are using, as I understand it, for SSH2 the keys should be in .ssh/authorized_keys2.
If any of these are world writable ssh keys won't be trusted.
May be you are trying to login to remote4 system as sodium, but you installed key for natrium.
Finally, to really see what's going on, best to follow Lexsys's instructions and ssh in verbose mode with the -v flag.
ssh-copy-id will copy ids from the target machine to the machine on which you wish to use the key.
Run ssh-keygen as the user for whom you need the key.
So the accounts you install them into make a very big difference.
Check permissions from ~sodium/.ssh/authorized_keys all the way to /.
There is a tool that could be installed in your dist (ubuntu/debian has it) called: ssh-copy-id which will do this for you:
If that doesn't work try ssh with option "-v" to see more verbose messages.