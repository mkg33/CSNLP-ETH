And the changes you are making will be enforced at the next reboot or firewall reload.
(I could make my own back-up and set up a cron job to restore it, then connect again and delete the cron job, but maybe something like this already exists?)
So, if the new rule would cause any harm, it'll only be for those couple of minutes.
What you can do is reload the firewall, then test a new connection to the SSH port.
Is there a way to test that a firewall rule change won't prevent me from re-connecting before the change is applied?
If that fails, reset ufw via the persistent connection still open.
If a change to the firewall rules prevents me from re-connecting to the machines via SSH that would be very difficult to fix (go to the data centre in a hurry, type in complicated root passwords one by one, edit firewall config manually).
I have an implementation of this boringly called ansible-role-ufw.
Alternatively, is there a way to automatically restore firewall rules if they are applied and I am locked out?
Apply the rules manually, without saving them, but before you do, schedule a reboot or a reset of the current rules after a couple of minutes.
You still need remote console access for when SSH is broken.
I want to manage UFW firewall rules on a number of remote Ubuntu 18.04 machines using Ansible.
Note in particular the use of wait_for, as wait_for_connection will use the persistent connection and not detect the failure.