(Ah, but the good-old-days of having to live in a few thousand bytes are gone..., and for all too many developers, so has the practice of dealing with memory management.)
However, what happens when you don't have the pagefile in use may be reason enough to enable it: hard crashes.
Furthermore, the more apps you have that come close to that limit, the more likely you are to see system-wide instability.
Now, perhaps you don't use any apps or do work in your apps that would push 6GiB, but I can think of a few situations where you might get close: video editing, photography editing, audio mixing and production, etc.
Right now my laptop with 8GB RAM has problems preventing the creation/usage of the page file.
Most apps expect to receive the memory they request.
You're right that you may not need a page file if you have 6GB RAM, but you may need a page file for certain items, I remember that a few games require a page file and also it can be useful if there is one.
A page file isn't just for crash dumps to be stored, it isn't essentially made for that.
These remnants are not part of the installation manifest and can hinder an uninstall procedure and also degrade disk access speed.
A pagefile will never increase performance, but it doesn't necessarily degrade it either (with proper memory management).
There's no harm in creating a 500MB Page File just to avoid problems if a certain process needs it.
With a page file, your unused web browser data would be sent to the page file, and the precious physical RAM will be used to store the data for several locations resulting in much faster location load.
That isn't to say it won't see any use at all; IIRC MS Windows is a bit crazy when it comes to paging things out even when there is plenty of memory available.
It's is extremely fast, only accessible by the CPU internals, and the most affected by heat in an overclocked CPU.
The first step is to understand what a Cache is, or rather, what the different caches are used for.
A page file is indeed a cache, in that it stores data which may or may not be present in memory.
Suppose you play some game which loads the location data when you change location.
On a dual core I believe a tyical installation would have 6mb of lvl2 cache.
The more "free" physical RAM you have the bigger cache it can hold.
I constantly get "Low Memory" prompts, apps crash, etc.
When that data exceeds your memory capabilities, chances will be good that your app will just go "poof".
Running without a pagefile, however, will only tend to increase your system's instability with respect to applications requesting memory that is not available for use.
The trouble with this scenario is that many programs do not behave well when it comes to garbage collection, and you are left with spurious .temp files being left on your disk.
Using data from the physical RAM cache is very fast.
One example may be an Arcade Video Game that runs on the windows platform, these are typically installed with only the drivers needed for the devices present and are not likely to suffer from driver contention.
When a pagefile does not exist, it is up to the third party application to provide this functionality internally.
Then things went nuts: apps would crash, menu items would only partially appear (or not at all), buttons would do nothing, etc.
I switched back to the page file, even though performance was worse with it -- overall stability was simply better and more important.
Though you may notice a low to moderate decrease in performance in the shortterm of adding a pagefile, longterm the performance should remain consistent.
Unless your OS is particularly bad at memory management, a pagefile with 6GiB of memory should see little use.
For the most part though, most applications do not take care of all the potential issues that could arise and especially those that include impact from other third party applications and driver contention.
Using 3 programs that eat 1-1.5 GB each (say, web browser, Visual studio with special plugins, etc.)
The page file exists so it can store data that RAM doesn't need to hold, it's like a cache for items that don't need to exist in memory thus providing more RAM for other things.
With most apps, you'll have a fantastic failure on your hands.
The CPU has a small internal cache which allows it to store OP results, flag states, and calculated addresses.
On a dual core I believe that internal cache is about 1mb.
-- essentially anything where you are dealing with a lot of data (either working with, or streaming).
My opinion is that a swap file is normally a good thing to have.
Indeed, if your system is highly populated with Ram and it is dedicated to 1 specific task, and that application takes care of all these things then a swap file may not be needed.
An O/S can use the paging file for various tasks, one of which is to save the current state of a data file that has not yet been committed to disk.
Without a page file, every time you change location, the data will be slowly loaded from the HDD.
Not having a pagefile may seem faster in the beginning, but over time performance will degrade considerably.
The level 2 cache acts as a high speed buffer for CPU to Memory transactions and also holds code threads collected by prefetch.
It is very fast, though slower that internal cache memory, is accessible only to the memory controller and CPU, and resides on a dedicated line on the bus.
You also have web browser running which leaves, say 2GB to the game, which is enough for a single location.
The more dormant data the OS can move from physical RAM to the page file, the more physical RAM is freed for caches of frequently accessed data.