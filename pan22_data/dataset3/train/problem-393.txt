What I'm doing is, basically, whenever a player does an action, it sends a message to the server saying "hey, I just did this thing."
The server then sends a message to all other clients telling them that that guy did that thing.
I've never done anything with networking before, so learning how to integrate Lidgren into my game was fun and awesome.
The server and the client are both running the same simulation.
I was making everything single-player then I realized "oh crap I should probably add multiplayer, huh."
The thing is, I pretty much know the way I'm doing things is wrong, because it's not robust enough for mainstream games to use, as far as I know, but what's wrong with it?
So when you right-click somewhere to move there, that player's client just starts moving his guy there, and then sends a message to the server telling it about it.
I've been skimming through stuff to see how big games do multiplayer, and it's kind of confusing for someone who's just starting to dabble in this stuff, but it looks like the Source engine sends a packet containing all of the changes to everything in the world every tick?
Sorry if this is a bit rambly, but basically, I was wondering why my simpler system isn't the right way to go, because if it was, other games would use it, right?
Again, totally new to this stuff, but can you really push that much data that frequently?
For the most part, except in a few cases, when a player does a thing, the client assumes it's cool and goes ahead with it on its own.