But, using spaces in your column names is not recommended because it can lead to all sorts of complications (particularly with quoting portions of SQL commands and preventing injection attacks, etc.)
I recommend switching over to underscores and updating your code accordingly as well.
fname:[User First Name] ), conforming all nicely, short, one word.
Do any of your other tables have spaces in their column names?
I have not had a chance to move that far yet but my plan is to set the identity property to "NO" and then after successfully splitting the database, set the property back to "YES".
It is also updated to reflect the latest version of SQL Server.
It turned out that I had a field that was set to auto increment as a identity field.
It is much more flexible and much smarter about what it can do.
hopefully someone will chime in with the real technical limitation your running into, but when I run into this stuff, I find it's best to get to really basic structures and work my way up to what I want to do - small steps, one change at a time - your right to question the accuracy of the error messages - I've gotten such misleading messages from sql, and access specifically - not just vague, but plainly misleadingly, wrong that either the error message and problem are so common and specific that the answer is all over the first 5 pages of google results OR it's so bad, I just get back to bare bones basics and iterate to the complex thing I'm actually after
Otherwise, it's quite good with flagging problems and identifying exactly what needs to be changed.
The table structure was brought over to SQL Server but no data was imported.
and problems, and especially where more developers are involved.
The one thing I've found that it can't do is properly interpret certain kinds of field-level validation rules.
With it, you can preview what the upsizing operation will do and correct problems if there are any.
If not, then you could try renaming the columns by changing the spaces to something like underscores ("_") and then use "ALTER TABLE" SQL commands on the MS-SQL server console to change the columns back (if it's supported).
The proper tool for upsizing is the SQL Server Migration Assistant for Access.
You'll then have a duplicate table and you can mess with data type updates and so on as you modify the table and try and upsize it
for grins (should be quick to try for trouble-shooting/sanity-checking) run a make-table query containing all the fields but with very short names in the output fields (i.e.
The upsizing wizard that comes with Access is always behind the curve, as it can only deal with older versions of SQL Server.