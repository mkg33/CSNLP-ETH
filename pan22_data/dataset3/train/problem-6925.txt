What is the best way to streamline access to frequently used directories.
And recent bash or even better zsh may permit you things like
The ** is doing the equivalent of a find so can be slow.
The author of CDPATH recommends to export CDPATH to the environment.
Set the CDPATH variable: it contains additional directories to be searched when you run cd.
What is the best way or just provide the search terms I could use to read about it online.
Later you can use j foo to jump to a directory that contains foo in its name.
It is like cd command but with the ability to learn.
Normally when I start a terminal it defaults to my home directory but sometimes I ike to open several terminal windows, the problem is I'm typing the cd /.../directory in each one multiple times and I need a way to not have to do this.
Having some problems googling this one because I'm not sure what the search term is.
Assuming you have only one deeply nested my-project/ directory in all your tree hierarchy.
Note that sourced shell scripts will still pick up CDPATH in this case.
Please keep in mind that there is a strong chance that this will subtly break shell scripts that expect directories to be in one specific place.
And you could define a bash function in your $HOME/.bashrc like
autojump is certainly a much safer alternative and more convenient to use than CDPATH.
It maintains a database of directories you visit and assign weight to each entry.
If more than few directories have foo, it will show you a list of matches from where you can select your desired directory.
A remedy is to put CDPATH into ~/.bashrc and not export it.