I suspect that that it is unlikely that I can use the MySQL connector to write to the Kodi's SQLite database (I am reluctant to experiment because I do not want to bork up the database).
I then found out that SQLite (and not MySQL) is the Kodi RDBMS.
Issue the folling commands to create a new database and user
I was hoping I could recreate the small table on Kodi's database and write with the MySQL connector.
Use your favorite search engine to find out how to create a table and insert some test data.
I will need to write to a database and read them back.
With mysql you can also have as many databases as you want.
Now you'll be able to use python mysql on you own mysql test database without worrying about borking kodi.
You can create a separate user and your own database so you don't need to worry about messing up kodi or osmc.
If you have successfully performed either please indicate this in your response along with any lesson learned \ pitfalls to avoid?
* to 'myname'@'localhost' identified by 'mypassword';
A python app has been successfully configured with the MySQL connector to write records to a small table to demonstrate a concept (very low volume of writes).
Also you wouldn't want to test with kodi's sqlite database.
You can create a new sqlite database by issuing the command "sqlite mydatabase.db", then create a table, and add some test data.
If you want to work with a sqlite database you'd use a python sqlite library.
If it's not installed, you can install it by following the "installing Mysql" link you provided.
With sqlite you can create as many databases as you want, you're not limited to just one.