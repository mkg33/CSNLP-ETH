This means that yes, unfortunately your user has to fill in the form again (since you have to "rebuild" the post data you have lost somehow).
I would provide a code snippet for you, but unfortunately im on my mobile phone on vacation, so I'm afraid that might be a bit difficult to do, I'm sorry :(
After successful authentication, when you redirect to the original url, there is no way of knowing what post-data to send with the POST request.
One way I can think of is keeping track of the last used GET-request url, store that in the session and use that one in your "after login redirect" and thus returning to the page before submitting the POST request.
You could do this by adding a use handler early in the app which stores tbe url in the session object if the request is of type GET.
What I am doing now is, I am storing POST parameters in the global variables first and then I am calling ensuredAuthentication function.
The problem here is that when executing the original POST request, it (probably) has a body with the post-data.
After ensuredAuthentication function it redirects to original Url as a GET request but since I have the post parameters stored in global variable, I can continue my operations.
The ensureAuthenticated check redirects to the login page, and thus losing said post-data!