Your design assumes that every student will have exactly 1 mother and exactly 1 father.
For the majority of students, this won't be an issue, but for more than you might think, it will.
This will also simplify having siblings: you can have the same mother, father, etc.
Identify whether that person is a father or mother (or non-parental guardian).
Some students may have gay or lesbian parents, and thus two fathers or two mothers.
Some students may have neither, and instead may have a legal guardian who is neither their father nor mother.
The ID in SubjectGrade is useless, it's never used/referenced, the logical key is IDGrade,IDSubject.
All tables use automatically assigned sequences as keys, this is not proper data modelling.
Students with divorced parents may have two mothers and two fathers, all of whom will want to have their contact info listed.
One thing which immediately jumped out to me is this:
Many people do that and forget about the actual/business/real world Primary Keys.
You don't want to allow multiple users/areas/subjects with the same name, thus you must add Unique Constraints on User.username, Area.name, Subject.name, Subject.Abbreviation, etc.
Similar for ScoreRecord: IDSubject, IDStudent instead of ID
Do those families and your management a favor by making it easy to handle various family scenarios!
One solution to this would be to have a table for a "person", and link people to each student.