I then have an automated rsync script that runs over night to sync my data to a remote location.
So far this seems to suit my needs, but I suspect there are better ways to go about this.
I do a full backup every quarter and incrementals nightly.
I wrote a shell script that I run from a cron job to mount the disk, run rsnapshot, then umount the disk, so it is not mounted all the time.
Although I suppose I could automate my current rsync backup, this would mean leaving the USB drive on all the time.
Dirvish is basically just a perl script that calls rsync with many options:
I have several scripts built to mount the active drive, I have 3,  to the correct point in the filesystem and then run the backups.
And here is /usr/local/sbin/dobackup.sh, which is the real workhorse:
Modify the BACKUP_DEV and BACKUP_DIR variables to suit.
The solution I use it to find a friend who doesn't mind hosting a small fanless server at their house.
I currently back up my Fedora Linux server using rsync and a local USB drive.
I use rsnapshot which uses rsync and does incremental/full backups really well.
Long ago I used to use tape, but tape backup of size to back up my server is now priced way out of my price range.
The first is /usr/local/sbin/backup.sh, which basically is a wrapper around the script that does the real work, captures its output and exit status, and then emails the results to root: