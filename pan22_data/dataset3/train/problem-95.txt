Once the main app is launched, the loader will terminate.
Clients launch the tiny app and it then directs them to the proper full app.
Have a tiny assistance app that points to the full sized app.
Then have subfolders for past revisions/versions as necessary like z:\Apps\ApplicationX\revisions.
My current solution is to put the current version into a directory called "z:\Apps\ApplicationX\Current", and put a shortcut on their desktop to the exe there.
I agree with DanBig that in your simple situation unless you want to revamp it a lot (like Ruscal suggests, which is a good idea) just schedule an "outage" where you kick the file lock(s) and replace the .exe file (maybe overnight or on a weekend).
My current solution is to have a batch file which has the start command in it pointing to the current version, and a shortcut to that batch file.
Bonus points if you have your launcher check hash fingerprints or signatures on the full sized apps to ensure no one gets creative and tries to link to another app from the launcher.
On Linux (Unix) renaming or deleting a file is allowed and processes that have the files opened will be able to use the old version until the file descriptor is closed.
Make a shortcut to the launcher, it checks a config setting (encrypted gibberish, xml, plain text, hard-coded directly into the launcher, whatever) for the path of the executable to launch then launches it.
The problem is that when they are running the application, I can't update the application because the file is locked.
It also means that there are multiple copies of the application on the network, which I'm not a fan of.
I tried changing the shortcut to point to a batch file which copies the file locally and then runs it from there, but we're all on Windows 7, and UAC is causing issues copying the file to the C: drive where I would expect it to be installed.
We have an internal desktop application which we have deployed to a network share.
Your best bet is going to be to not over complicate it, and just schedule downtime for updates.
I also thought that I might be able to have a shortcut to a shortcut and I would just update the shortcut, but that doesn't work either.
In that directory are subdirectories for each version, ie,
As far as getting them on the desktop, why not have your shortcut point to z:\Apps\ApplicationX\ and place the current EXE there.
When you need to update the application, just rename the "current" folder and create a new one with the name "current".
This way the client shortcut never changes, and during updates you simply move the existing exe into a rev# folder and place the new/updated .exe into the z:\Apps\ApplicationX\ folder.
Whenever you get a new version, you update the config file of the launcher and future program launches will then open the new version.
I suppose I could copy the executable to the users home drive and run it from there, but I don't like the idea of having an executable in the users home drive.
I would like to put a shortcut on the user desktops which point to the newest version of the application.