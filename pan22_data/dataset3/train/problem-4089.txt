I don't use MS SQL but as a principle, one DB per customer.
It might be an idea to use a single database now, but think about how you could partition the data if you did end up with very many clients.
It will make moving the data between servers easier (if you want to split them over multiple database servers once load grows to the point of being an issue, for instance, or if a client wants to pay to take the app in-house), it can make backups and subsequent restores more convenient (dependant, or course, on the backup method(s) you use), and it reduces the risk of code bugs allowing clients (accidentally or through intentional hacking around) to see each others data.
Basically, it's much cleaner or more correct: if the rows in a table have absolutely nothing to do with each other, they shouldn't be in a table together.
Unless there is pressing need to keep the data in one place, I suggest separating them.
One database per client sounds like it might be making things harder for yourself in the long run.
There's really no good reason not to use separate DBs, IMO.
In addition, it will be much easier to manage backups/restores of client data if they have their own DBs.
If this is going to make more work for you, why take that option now if it could be changed later?
Any maintenance procedures can be scripted for multiple databases as easily as one.
I would make separate databases, because otherwise, if each client is using a similar schema,  you're going to either have to combine tables or use lots of prefixes, or have link tables containing client identifying information.
Plus, if one database gets screwed, and it does happen, it won't affect your other customers.