L_{n,m} = \mathrm{vec}(G_n)^\dagger\,\Lambda\,\mathrm{vec}(G_m),
In the sample case, in which the master equation has no time dependent terms on the RHS, the solution can be directly verified by representing $\Lambda$ in matrix form and exponentiating it to get $\phi(t)=\exp(\Lambda t)$.
Given that I must solve the master equation numerically by integration, and the result of each integration at time $t$ is not sufficient information to figure out these errors, and I need to do some work to recover the superoperator matrix that has operated on a vectorised density matrix.
It is convenient to give these in terms of the Pauli matrices in the case of two qubits, but for a qutrit one would employ the Gell-Mann matrices.
I need to check that this works in the case of time dependence.
In the sample case I considered, $L$ is does not contain time varying terms, so it may be exponentiated to get a new matrix $F$, which is related to the solution of the master equation $\phi$
I'm quite happy with the Pauli operators so I'll stick with those for this next equation,
At this point, a basis needs to be chosen for the future Krauss operators.
I'd like to be able to do the operator sum in the form of tensor products of spin matrices on each channel if possible.
As you can see, $S$ is a matrix of weights for a sum of superoperators in a useful basis that I can select.
which allows L to be derived in a single matrix equation, but that's getting a little off topic.
I have provided an answer myself below that fills in the details.
The catch: The quantum system is driven by an external (classical) field modelled with a sinusoidal function, and the damping rates are low, so I can't make a rotating wave approximation to eliminate this time dependence.
Sticking with Hermitian operators keeps things neat as well, since some daggers can be neglected.
Final note: I awarded the acceptance to Pinja, as I used the paper Pinja suggested.
$F$ can be used to get a Choi matrix $S$, which is exactly what I need.
The question: Given this superoperator $\mathbf{M}$ that does $\mathbf{M}\,\mathrm{vec}(\rho_0)=\mathrm{vec}(\rho_\tau)$, how can I get Krauss operators for the operator-sum equivalent of $\mathbf{M}$ that are in a useful form?
Defining $\sigma_i = \mathbf{1},\sigma_x,\sigma_y,\sigma_z$ for each qubit, this system has a basis built up of the tensor products of these with a factor of $1/2$ for normalisation, yielding 16 operators $G_i$ e.g.
I'm more of a quantum optics guy than a quantum info guy, and deal mainly in master equations.
I'm interested in operator-sum form, and I'd like to derive the errors in this form for a small quantum system that I'm simulating.
A special matrix is now composed called $L$, which is related to the master equation.
I feed the master equation a vectorised density matrix with a single entry of 1 and the rest zero, and build the matrix like that for a particular time $\tau$.
If we are dealing with the master equation as a matrix acting on a vectorised density operator as discussed in the question, then this can be expressed as
\rho_t=\phi_{n,m}(\rho_0,t) = S_{n,m}(t)G_n\rho_0 G_m^\dagger
S_{a,b} = \sum_{n,m}F_{m,n}\mathrm{Tr}[G_nG_aG_sG_b].
As an example problem, I picked two qubits with an exchange interaction to check this which is a minimal version of what I'm considering.
More explicitly, if $\mathrm{vec}(\rho_{ij,t=\tau})$ is the vectorised (so it's a column vector) form of a density matrix with a single entry of 1 in position $i,j$, at $t=0$ that has been evolved to time $\tau$, then a matrix to take the vector form of the density matrix from $t=0$ to $t=\tau$ is given as $\mathbf{M}=\sum_{i,j}\mathrm{vec}(\rho_{ij,t=0})\mathrm{vec}(\rho_{ij,t=\tau})^\dagger$.
This works in the time independent case for quits and qutrits as expected.
The paper goes into a great deal of detail, and I finally sat down today to take a proper look at it.
This has been referred to as the process matrix (arXiv)(DOI) which is unique to a process in a given basis.
The method requires that basis operators of the system are chosen.
the system in question is a qubit or a qutrit and another qubit or qutrit.