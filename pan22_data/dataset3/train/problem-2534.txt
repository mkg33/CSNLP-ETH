Here's my shell script I have been using for most of my unwrapping:
I think that exactly what you want is performed by a simple:
I just came across this post while looking for way to do this with sed.
As a useful side effect, if the next line starts with whitespace, the first word (as separated by whitespace) is the empty string, so indented paragraphs are never merged onto the line above them.
Use the unix command line tool 'fmt', as suggested by Raúl Salinas-Monteagudo.
Piping the output to 'fmt -w 1111' (for paragraphs less than 1111 characters in length) takes care of the problem:
if it would be too long if it also included the first word from the next line).
Change the line length (-w ##) to a useful number.
I found this question because I wanted to "unwrap" output from the fortune program, which annoyingly isn't even standardized — some fortune cookies are wrapped at 78 character, others at 77, 76, or even 75.
My script tries to determine if a newline has been inserted on purpose or because of the length limit by determining if the line would violate the length limit if it hadn't been broken at this exact length (i.e.
This file from the weather office (https://forecast.weather.gov/product.php?site=NWS&issuedby=AT&product=TWO&format=txt&version=1&glossary=0) contains hard line feed embedded within the body of a paragraph.
I had the same problem -- emailing plain text files containing hard line feeds within the body of a paragraph at 80 characters ... and those files look terrible on devices that are (a) doing their own line wrap, and (b) wrapping at a width less than 80 ... that is, the 80-charater splits are clearly visible where the text ends in the middle of line.