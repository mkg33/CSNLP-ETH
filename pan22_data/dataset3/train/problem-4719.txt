// This will be Elen ^ 2 = Slen ^ 2 + SHlen ^ 2 - 2(Elen)(SHlen)cos(C)
Use the max angle of E to calculate the vector to H from E
THis code loops through all the grips (points) and for each one checks if it is reachable, given the constraints of the arm.
// Early Out: If(SH > Slen + Elen), then point is beyond the reach of the arm
//Early Out: If (SE < minDistanceToE), then the point is too close for the arm to reach.
Add the length of SE to the x of the vector towards the end effector to find the position of H
// Final Out: If(combinedAngle > maxSAngle or < minSAngle), where the max and min angle is measured from rotation axis (0,-1) then arm can't reach the point.
Get the max angle that E can turn (whichever way) in Radians = maxEAng
The min distance from S to H is the magnitude of the position of H, given that S is at 0,0
I've built this in Unity, and used the same variables as Gale did.
Building on Gale's answer, I made the formula/math a little simpler, and I added my working C# code.
// Use law of cosines to find angle between SE and SH c ^ 2 = a ^ 2 + b ^ 2 âˆ’ 2ab cos(C)
// Create a vector representing the direction of SE respective to SH
// What are the angles for the direction of SE respective to SH + SH respective to the (0,-1) rotation limit axis
// Which solves to C = ACOS((Slen ^ 2 + SHlen ^ 2 - Elen ^ 2) / (2(Slen)(SHlen))