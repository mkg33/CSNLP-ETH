Often this can be done at a coarser granularity than just a single pixel eg.
An example: Let's say you're making a driving game.
You could render to it whatever you wanted like any other framebuffer.
Why using this word which seems to have some meaning in graphic design ?
Now that render pipelines are much more flexible and programmable, stencil buffers are used as just a generic 1-bit framebuffer that you can do whatever you want with.
You want to have a little rear-view mirror onscreen that shows you what's behind the car.
Seeing the picture in black and white on wikipedia, I'm still having problem with it.
Due to the position of the stencil test in the graphics pipeline (which is before pixel shading), stencil testing can be used to kill pixels that do heavy shading work when they're not needed.
You'll need to render a view pointing behind the car, but you only want to render that within the little rounded rectangle of the rear-view mirror.
Then, later, you could use the contents of that buffer to "stencil" or mask out when drawing to your regular buffer.
In addition to the functional usage of stencil buffers that people have already discussed, stencil buffers can also be used for optimization.
Why do we use a stencil or a stencil buffer, and what is the difference with a Z-buffer ?
a tile of pixels, so work can often be culled during the coarse rasterization stages too.
The stencil will then mask it out so that you only draw into the shape of the mirror.
In its original incarnation, a stencil buffer was a one-bit-per-pixel (i.e.
I read the stencil word a lot, and I don't have a clue what is its real purpose in computer graphics.