Ideally you'll have time to beta test with release candidates, so most work except emergency bug fixes and tuning stops at week 50.
"What else could he be doing" is the hidden cost to any decision.
So that's really only 46 weeks of work before you start getting the game ready to ship.
Full features should be in place long before beta so maybe anything not in by week 46 so you can do internal testing to make everything solid before polishing in beta.
The key thought is to decide whether having your hot engineer working on a system is worth the trade of that engineer not already working on your next title.
Keeping in mind that a 12 month cycle doesn't mean that you stop coding at week 52 and shove it out the door, I side with the answers already given that game play must come first and to only add neat features if they help the game play.
BTW, simulated fluid volumes, procedural destruction, dynamic sky boxes, etc... have all been done in commercial games and the reason you don't hear about them so much is that the game itself was always more important.