Points with a low density in every cluster are likely to be outliers.
If your Data points are dense and noise points are away from the dense region, you can try DBSCAN algorithm.
So using PFCM you could find which points are identified as outliers and at the same time have a very robust fuzzy clustering of your data.
It will still be up to you to pick off what distance means an outlier.
The burden of solving what "distance" means will already have to be solved for you to run a clustering algorithm.
This algorithm is particularly good at detecting outliers and avoiding them to influence the clusterization.
In this paper Bezdek proposes Possibilistic-Fuzzy-C-Means which is an improvement of the different variations of fuzzy posibilistic clustering.
Randomly generating 100 data points from three gaussians, clustering them with k-means, and marking the 10 'furthest from a center' data points gave the following graph:
A very robust clustering algorithm against outliers is PFCM from Bezdek http://www.comp.ita.br/~forster/CC-222/material/fuzzyclust/fuzzy01492404.pdf.
Perhaps you could cluster the items, then those items with the furthest distance from the midpoint of any cluster would be candidates for outliers.
Gaussian mixture modeling can - if your data is nicely gaussian-like - be used for outlier detection.
In this example, I just picked the N most distant data point, though you'll probably want to pick any number of data points over a certain number of standard deviations from a center.