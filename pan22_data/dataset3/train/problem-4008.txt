The Adobe documentation says it's "Threads currently running".
I would advise a tool such as FusionReactor or SeeFusion for debugging ColdFusion stability problems.
The last thing is knowing the memory, not only the total, but the different tipes, limits of architecture and so on...
It will stay there until an active thread frees up or until it reach the timeout value set in the configuration.
Some metrics with the CPU, pages/s and similar, from the resource monitor on windows, often helps.
So what are the other 97 threads doing if they are neither busy nor delayed?
If I'm reading it correctly, I have 100 total threads, and 3 busy ones.
Last thing i recomend u, is that jrun4 has "cluster" hability, if u detect a bottle neck, u can always put a front IIS and 2 or 3 Jrun4 in the backend.
Didnt know about this book "Adobe Coldfusion Anthology" but, the administration documentation of Jrun (avaliable on the CD or web) was quite clear in the metrics.
The thread busy/total/delayed is the number of thread currently being handled by Jrun.
It also depends on what your application is doing and how many concurrent threads you have ColdFusion set to run.
The book I've been reading (Adobe Coldfusion Anthology, Apress) suggests the "busy" number is the free memory in MB.
I am trying to understand where the problems are coming from and have modified the jrun.xml file to enable metrics logging.
We runed jrun4 about 5 years, and got a huge quantity of problems, mainly in the develop area than in the system, nodaways, sometimes was our fault.
I recomend u that include JDBC counters too, they are quite useful.
Delayed is a thread that as been swapped out on the thread queue and is currently waiting to execute (typically cause there were no active thread available).
The tools mentioned above will give you a lot more visual insight into the server in real time so you can chase down the problems.
In my experience, crashes are related to memory allocation issues (not enough, too much, garbage collector settings, etc.).