One how much RAM mysql had to work with for that thread/query.
If you turn on profiling, you can see that the greatest amount of time was spent in 'sending data'.
my idea is to diagnose the entire database with some deeper-monitoring tool - I'm using nms express (free).
Imagine a query with 20 inner joins and another 20 where clauses your result set would be limited but the amount of work to pair down those result sets would definitely be significant even if the result set is relatively small.
http://dev.mysql.com/doc/refman/5.0/en/query-cache-status-and-maintenance.html
No one in my group can explain it besides a guess about packet loss.
I found this (closed) bug and one reason given for the long behavior was an improperly configured query cache.
I'd say this really depends on the query itself, while you're only scanning 739 rows in your table and returning all 739, it depends on a few things.
I would see queries in my slow-log that I ran directly on the server and they would return immediately.
After scratching my head for a while, I tried logging in remotely to the server and running a query that would return data.
Is there a common cause or set of causes for result like the above?