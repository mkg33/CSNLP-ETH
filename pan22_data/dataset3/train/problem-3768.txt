2.0 u to 3.5 are IIRC, but that is more a "lucky side".
So the question is: if I've got .NET 3.5, is there any reason to also have previous versions installed?
I'm fairly certain that .NET 4.0 follows the same model as 2.0 - 3.5 (2.0 base with additional feature dlls).
.NET 3.0 and 3.5 are super sets of the 2.0 framework, using the .NET 2.0 base framework, with additional dll's to provide additional features (3.0 included things like WCF and WWF, 3.5 had things like LINQ).
I verified that I can run the .NET cleanup tool to get rid of all the .NET installations on a client, and I can then push out .NET 3.5 via WSUS.
.NET 1.0, 1.1, and 2.0 are their own frameworks that have no compatibility between each other.
So installing .NET 3.5 will cover you for .NET 2.0 - 3.5 applications.
The concet is th have al frameworks installed that are needed, and an application targets the framework it was compiled against - this allows MS to clean up new versions and introduce non-compatible changes.
Now it seems that on many machines these installations have hosed eachother, and certain .NET security updates are failing.
This seems to have solved the problems I'm having on the machine I tried it on.
You'll need to install .NET 1.1 if you run any 1.1 apps (same for 1.0 apps).
Over the years various versions of .NET have been deployed to my client machines via WSUS.