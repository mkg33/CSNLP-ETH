Therefore, if I'm not mistaken, someone snooping on our LAN could read our traffic, but someone outside our LAN (our ISP) cannot (for the machines that use the proxy).
I think I need to either have one machine setup as a gateway that the other machines would use, or maybe connect another router that would act as both a gateway and a VPN client, that one could choose to connect to in order to go through the VPN tunnel?
You could purchase one Netgate m1n1wall and configure it to create a persistent OpenVPN tunnel with your AWS EC2 VPS and you could configure an IPsec mobile connection for your iPads and other client systems.
(I'm a little confused, sorry if the above is unclear).
On a NAS (Netgear NV+) I setup dynamic port forwarding using the command
There must already be tutorials describing what I want to do, but I can't seem to find any after numerous Google searches...
If this device is also your default gateway, the clients don't need to have any further configuration applied -- they'll use the default gateway for everything, and the gateway will need to be told what destinations get routed via the VPN.
As I understand it, traffic from the LAN to the proxy isn't encrypted, but it doesn't matter since the proxy is also on the LAN; traffic between the proxy and the endpoint is encrypted.
The network has a consumer grade wifi router (Netgear DG834G), several PCs/Macs, some iPads connected via Wifi, and a couple of file servers (also consumer-grade Netgear ReadyNAS boxes)
I have setup a VPN between one PC (WinXP) on our network and a distant VPS box (AWS EC2), with openVPN; I use the VPN connection in order to have a US-based IP address (since I'm not in the US).
I manage a small-office network but have very little actual networking knowledge / understanding.
We recently replaced our Cisco RV082 VPN routers with Netgate m1n1wall VPN routers.
Yes, you need to setup a device which will act as the router for all of the connections that go via the VPN.
So tinyproxy receives requests from machines on the LAN and uses dynamic port forwarding to transfer those requests to the Internet.
I don't know how secure this kind of setup is, though.
Tinyproxy as such can't work with SOCKS, but it can with tsocks that wraps the connections from tinyproxy and sends them through the dynamic port forwarding.
Here's what I would like to do: I would like to be able to use the VPN from the other machines on the network, including the Wifi connected ones (iPads), without setting up a VPN client on each machine.
Otherwise, you can tell your client machines to route VPN traffic via any machine that has the VPN running, but that gets a lot more complicated for everyone.
Here's what I did for now, following an idea found in gravyface's answer (part 2).