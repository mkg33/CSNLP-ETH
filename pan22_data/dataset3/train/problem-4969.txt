Especially the default rotation caused some trouble.
The basic idea is to make your model a child of an empty GameObject which you instantiate yourself.
This is just a basic example but you get the idea.
I struggled a lot to handle models because of the issue you mentioned.
You're probably best off using a script to wrap externally created meshes.
The above rotation Quaternion.Euler (-90f, 180f, 0f) works with Blender so you don't have to create your models upside down and stuff like that.
This way you can let your script handle everything automatically.
So you don't drag & drop models in your scene but use a Prefab object with the following script instead:
Note: Just make sure to store your models somewhere in Assets/Resources/, otherwise Resources.Load () won't find your data.
You can easily extend the logic to handle stuff like changing the model at runtime or initializing materials properly instead of using the imported ones with something like:
Having a script take care of this gives you a lot of control.