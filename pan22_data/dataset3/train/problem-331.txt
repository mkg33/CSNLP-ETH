You can even write a small bash shell script (or any other shell script) to achieve this.
ssh as the user in your system, and run their programs.
If your unsure run it though a VM, but in most cases you will know what is being run
Then you have full access to the source code, Look though it - its doubtful they will be able to pass off anything malicious in the code without you noticing.
If the programs are simple, involving only pure algorithms and basic I/O tasks, this should be a practical solution that you could consider.
Make a single user account with limited privileges (which means access to only a limited set of library routines, possiby even a stripped down shell access).
Some malicious programs may include directives like #include </dev/random> which could cause the compiler to hang for a long time, or some recursive macros causing the compiler to eat up lots of memory.
What I did was to use ptrace to limit the system calls (see code here), and optionally change user id or chroot.
BTW, it is worth mentioning that you should also limit compiler time/memory usage.
I have worked on a similar system a few years ago.