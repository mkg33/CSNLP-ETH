For example you found benchmark results for chipsets X and Y for Intel processor 2GHz.
Now, I know a lot of people are going to find faults in that association,
from various other results that may not correlate together.
Please note, I am not saying it is the same problem -- just somewhat similar.
derive a benchmark figure (number of piano tuners)
In any case you will also have to approximate some results because you will not be able to find tests for any configuration available on the market.
If we will run benchmark test for an Access database, we will see that results depend on HDD performance much more then on processor's and so on.
If 2.33Ghz is faster then 2.0Ghz say in 10% on chipset Z, could you expect that it will be faster in 10% on chipsets X and Y, so you can multiply you previous benchmarks on 1.1 ???
however, a number of parameters (subjective to each configuration in question)
and like to dictate a lot of things on the test conditions.
Theoretical benchmarks are at some point become useless for end users, because what end users want to know is on what PC Vista will start faster or FireFox will open web site faster and it where it will take less time to save huge 20Mb Office document... End users rarely care about numbers of floating point operations.
You will have to collect benchmark results from different PC magazines and sites and update your database frequently in order to be able to benchmark different configurations.
Also please take into account that there is no benchmark that suite all users and each benchmark can depend more on some computer components and less on another.
For example if we want to measure floating point operations, we will have better results on more powerful processor.
How much accuracy for a benchmark do you expect and what type of benchmark do you want to estimate?
will cause your computed benchmark figure to deviate arbitrarily from the actual values.
If 5-10% accuracy will suite you, then you can try.
Also you have benchmarks for 2.0Ghz and 2.33Ghz processors but for chipset Z.
You could approximate some derivation rules to arrive at a benchmark,
This question reminds me of the popular 'how many piano tuners in a city' problem.
This is reasonable, but this will be only an approximate result.
The existing benchmarking tools themselves have a hard time reproducing the results