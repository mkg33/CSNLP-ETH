The if statements are where I would use like the edge of the frame or screen but you have to remember if the map of tiles is big enough you could be accessing a tree tile across the map.
There's some implementation details and nice little examples for tile based games here.
Could you add some more details like what language you are in?
What's the best algorithm to use to find the nearest tile of a certain type given a location (x,y)?
Except you don't have a known goal location, so you can't direct the search in any one direction So you search all directions at once!
I mean I guess there could be a general algorithm.
It would have to "see" the tile, so you could give it a tile radius and say if anything within X amount of squares of the NPC is this ID type of tile, then move to its x and y location.
If you've heard of A*, this is sort of the basis for that algorithm.
Again I don't know EXACTLY what numbers to add and whether you have a move() function, but basically I would use the x and y position of the two tiles (if you can access each tree tile in the array).
I currently have an array of tiles which makes up the tilemap (stored as an int array) and I want an NPC to be able to move itself to the nearest tile of type X (ie find the nearest tree and chop it down).
If you have these different tiles in classes per se, you could add a move function in your NPC class or method.