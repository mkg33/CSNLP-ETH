Create your own program in Visual Basic, i would not go for SNMP.
Instead of looking at snmp indexes you really want to use the snmptable program.
Hey all,  I need to figure out how to reliably get various pieces of information for network interfaces via SNMP, such as the network card's IP address, Gateway, DNS Search Server list, and if DHCP is enabled on the interface.
(Moving this from SuperUser, I realized it's more appropriate here)
Otherwise, if the ifIndex can be found in the IP Forward MIB ipForwardTable
So can anyone proof/complete my gateway algo above, or tell me about DNS/DHCP?
I would then know what OIDs to put in my MRTG config file.
As for DHCP that is either ipNetToMediaType or ipNetToPhysicalType with a value: INTEGER: dynamic(3).
So far I have the IP address, and I think I have figured out how to glean the gateway, though I'd appreciate if someone could proof my "algorithm" for doing so as I am also uncertain about how to do it for IPv6.
This is the "algorithm" I have come up with to obtain a gateway:
Otherwise, if the ifIndex can be found in the RFC 1213 MIB ipRouteTable
Different manufacturers stick info in different places.
/usr/bin/snmptable -v2c -c public $HOST NETAPP-MIB::netifTable
Also just FYI, Unix/Linux shell script alternatives won't cut it -- for one I know how to do it that way already, and also I need to interrogate non-*nix devices like Cisco switches & routers, and network printers.
If you don't have their MIB definitions then this was the best method I could find for reverse engineering OIDs.
Unfortunately I am finding that this information is scattered to the four corners of the (SNMP) globe, and I'm having a heck of a time tracking all of it down.
Otherwise, if the ifIndex can be found in the IP Forward MIB ipCidrRouteTable
I like using http://tools.cisco.com/Support/SNMP/do/BrowseOID.do to see if an OID is current or deprecated.
What I used to do was use snmpwalk to enumerate the whole tree below a certain point and save the results in a file, you can then search for a value (e.g the IP-address of a DNS server) and find the OIDs associated with it.
There is no standard MIB that contains the name servers.