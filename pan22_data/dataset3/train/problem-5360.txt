It's done at a GPU level, no serial stuff involved.
If you can find documentation for the display you're trying to connect it would save time and frustration.
The only thing is that the Pi may not be able to deliver the timings needed for controlling the device so you may need a microcontroller in between.
Or KindleBerry Pi - http://ponnuki.net/2012/09/kindleberry-pi/
There are at least two people out there who have worked out how to drive these screens.
So it comes down to finding a display with enough information.
Just jailbreak it, get root, set up a daemon, or hijack the existing one that handles the screensavers, have the pi put up the picture and maybe set up a poller to look for a dif.
Given how long this information has been available, I'm fairly surprised we haven't seen modules for sale for this already.
The best you can hope for is to send signals from a Pi to a whole Kindle, per the existing projects you mention in your question.
Once you're sure of the logic levels some of it could be explored or confirmed by touching wires to places to see what happens.
https://www.circuitvalley.com/2017/03/kindle-e-ink-eink-driver-microcontroller-project-msp430-low-power-display-epaper.html
If one is detected on the image file, then execute the display refresh routine.
Then again, can you tell if you're seeing a 2^4 or a 2^5 colorwise?
https://www.raspberrypi.org/documentation/hardware/raspberrypi/dpi/README.md
The Pi  can do 24 bit color over DPI it seems but that's a lot of wires to guess at.
Without access to detailed information, parts specifications and Pi-appropriate driver software from Amazon (none of which exists in the public domain) there's no way you're going to be able to interface a Pi with the Kindle screen.
If you want an expensive alarm, try using 640x384, 7.5inch E-Ink display HAT for Raspberry Pi https://www.waveshare.com/7.5inch-e-paper-hat.htm
There is this page at Raspberry Pi, evidently they've thought of doing it.
This is effectively identical to the many questions that pop up on reusing screens from phones, tablets and anything else with pixels.