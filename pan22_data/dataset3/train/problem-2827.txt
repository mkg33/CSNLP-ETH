For laughs, I tried to create an InnoDB table and a MyISAM table with a primary key using HASH in MySQL 5.5.12
Again, it's (obsolete version of) PostgreSQL-specific, but it should hint that the "natural" index type won't necessarily yield optimal performance.
The CREATE INDEX syntax MySQL Page states that only MEMORY and NDB storage engines can accommodate the HASH INDEX.
According to the book MySQL 5.0 Certification Study Guide, Page 433, Section 29.5.1
http://www.postgresql.org/docs/8.1/static/indexes-types.html
On a related note, you might find the discussion on index types from the PostgreSQL docs interesting.
The MEMORY engine uses HASH by default indexing algorithm.
Some people suggested following the idea in Pages 102-105 of the book "High Performance MySQL : Optimizations, Backups, Replication and More" to emulate the hash algorithm.
It's no longer present in recent versions of the docs (due to subsequent optimizations, I take it), but the takeaway might be similar for MySQL (and the reason why hash indexes are only used for heap tables):
Page 105 features this quick-and-dirty algorithm that I like:
Make a column for this in any table and index this value.