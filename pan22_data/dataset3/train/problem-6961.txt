Let's start with the easier case of words of length $n$.
Then $rank$ preserves the shortlex (or radix) order, which is the order $\leqslant$ on $A^*$ defined by $u \leqslant v$ if and only if $|u| < |v|$ or $|u| = |v|$ and $u \leqslant_{lex} v$.
E. Allender,Danilo Bruschi and Giovanni Pighizzini, The complexity of computing maximal word functions, Computational Complexity 3, 1993, pp.
That is, words are first ordered by length and words of equal length are ordered according to the lexicographic order.
A. Goldberg and M. Sipser, Compression and ranking.
$$ C'(a_1\cdots a_n) = \sum_{i=1}^n \sum_{b < a_i} N(a_1\cdots a_{i-1} b,n-i).
Define $N(m) = N(\epsilon,m)$ for short (this is the number of words of length $m$).
We define the code $C'(w)$ of a word $w \in L$ as follows:
If you want more references regarding the complexity of ranking different classes of sets, here are some places to look:
Now, if $L$ is regular, $rank$ is easy to compute and is of course one-to-one on $L$.
This encoding deviates from your specification by ordering first according to length and only then lexicographically, but as dkuper mentions this is unavoidable if you want your range to be $\omega$ rather than a more exotic linear order.
Using linear algebra, given a prefix $w$, we can compute efficiently $N(w,m) = |\{ x \in \Sigma^m : wx \in L\}|$.
I assume that we are given some DFA for the language $L$ over an ordered alphabet $\Sigma$.
Then each word on $A^*$ can be viewed as a number in base $k + 1$ (note that $0$ is never used on purpose).
L. Hemachandra and S. Rudich, On the complexity of ranking.
This is another classical example of inductive enumeration.
In order to code words of arbitrary length, we simply use the formula
It is straightforward to compute the inverse of this encoding.
There are also a few minor results in a chapter in my thesis on ranking, available as the bottom-most publication on the list here: http://www.cs.rutgers.edu/~allender/publications/complete_list.html
There could be a "trick" which allows using simpler formulas in this particular case, but this is the basic idea.