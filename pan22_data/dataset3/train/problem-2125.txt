This may require additional machines (for an internal test), or multiple external environments (to effectively simulate an external threat).
You should schedule and announce your test window so users are aware of the possibility of an outage.
"ab is a tool for benchmarking your Apache Hypertext Transfer Protocol (HTTP) server.
It's not difficult to find a free/fee-for-all botnets that you can use with certain 'off-hacker-sites' applications, but would/should you really trust these to not do more damage than you expect?
The last thing you want is being in a hacker's radar, and/or associated with a vulnerable site.
It is designed to give you an impression of how your current Apache installation performs.
This is especially true for external / full stack tests that will be going through your provider's network.
Next pick (or write)tools that can be used to simulate that type of attack (HTTP Load Testing programs are often used, but there are dedicated tools out there as well.
Under NO Circumstances should you run a DoS simulation/test attack against your environment without first notifying your hosting provider.
IMHO, a good DDoS will always win... specially if you don't have the good disaster recovery/business continuation plan.
A DoS attack is one thing, in order to simulate a real Distributed denial of service attack you need a real test-bed of botnet(s) which I'm sure you don't own (<<).
A 'strong' DDoS attack is highly relative to your environment, and would be near impossible to replicate by yourself if we're talking about a public website and not within a controlled environment.
https://httpd.apache.org/docs/2.0/programs/ab.html
I'm not going to list them - you can Google as well as I can.)
There are various services that can simulate a high load DOS attack though.
First you need to define what kind of attack you're trying to simulate.
Another solution would be to use beeswithmachineguns.
They use Amazon Web Services to get a whole bunch of IPs to simulate a DDOS.
This especially shows you how many requests per second your Apache installation is capable of serving."
Finally, run the attacks against your environment.
blocking ranges of IPs) won't work against a real DDOS botnet of compromised IPs across the globe.
It's a utility for arming (creating) many bees (micro EC2 instances) to attack (load test) targets (web applications).
This is coming from someone who's lived through a DDoS (DNS amplification attack), it's no picnic and even though it's highly exciting, it's nothing you want happened to your network/website/host.
Considering that most DDOS attacks use large amounts of compromised servers across various geographic areas, it would be very difficult to "simulate" a DDOS attack without being in possession of an entire global bot-net.
Again, none of these instances will truly replicate a "real" DDOS attack because certain tactics you may use (i.e.