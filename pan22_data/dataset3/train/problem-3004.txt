Now, instead of implementing our own solution, let's take a look at the standard library for an answer.
Only looking at the output on the console there is no difference for the user ofc but if you want to manipulate the rotated array at another places in your code it's not possible.
Given an array of  integers and a number, , perform  left rotations on the array.
A left rotation operation on an array of size  shifts each of the array's elements  unit to the left.
Then print the updated array as a single line of space-separated integers.
You aren't really solving the problem as you are not rotating the array per se, you are printing it with a small shift.
No method exists in the Arrays utility class... but let's dig a bit more : you can rotate a List so let's do that :
As people have already pointed out you have to actually rotate the array.To do that  a really cool way would be using the mod(%) operator so even if the Rotation_Number variable that you are using is greater than the array length your code will run fine.
You can use the current logic in your for loop to fill the res variable so the logic behind your code is fine ;)
A variable or field in java follows the camelCase convention (so it'd be rotationNumber instead of Rotation_Number).
Here you should use < size instead of <= size - 1.
Java problem to left rotate an array upto n times.
For example, if left rotations are performed on array , then the array would become .
So you want to store the rotated array somewhere instead of printing it, let's call this int[] res = new int[size];
On a sidenote, Array_Size and Rotation_Number aren't variable name that matches Java standards.