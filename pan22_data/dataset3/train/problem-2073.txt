Additionally, every update is a change, and change brings risk.
As pointed out in the comment by Class Stack, a rolling release is a terrible idea for security.
In security-oriented patching, the goals are pretty obvious: security.
These combine to make it much more difficult to know what software is installed on your systems, whether there are any security vulnerabilities in known installed software, and how to push out updates across the fleet.
This can increase the performance of the system or fix such bugs which make the system stable from attack.
While a little bit of downtime on your VPS is fine, at a company a bad update can cost millions of dollars.
Let's add onto that another layer: the security fixes only go into a version of the software that you can't run because some other business-critical software doesn't support the new version.
I suggest you read up more on https://www.debian.org as the scope of this question could keep growing.
Thus, every update has to first be tested to ensure that things all still work.
I would therefore highly recommend you go with the Debian Stable branch (I'm presuming you're using some distro based on Testing/Sid).
Do not try to mix thing up or roll back or anything like that.
https://en.wikipedia.org/wiki/Patch_%28computing%29
Patching a Software or a OS (Operating System) is exactly an update or a fix for vulnerabilities or a bug.
I just got to learn to manage a server, and got my first VPS running.
You have third-party software installed on some of these systems that isn't available through the repos, and you might also be compiling your own software that similarly isn't available in repos.
Regarding your current distro, if you decide to change to Stable (which you should), you will have to reinstall your system.
The developer fixes his software's vulnerabilities, the new version enters the software ecosystem where:
I keep hearing about "security patching" and a lot of talks about how it's difficult that some people are not doing it, favoring other aspects over security.
Keeping a personal system up-to-date is relatively easy: as you say, usually doing a regular full upgrade of the system through the package manager is sufficient.
Bleeding edge is better kept for non-critical use (ie your home gaming PC, not your company server).
As you may think, it's a "personal" training server, not running for any company.
To limit the scope of this question, I'm specifically asking about the concept and practice of "security patching", not the more broad "hardening of systems".
A Debian install is fairly quick and painless, even from the net installer CD.
In a corporate world, you may be managing hundreds of computers, rather than just one or two.
This can be something as trivial as changing a few lines in a script to replacing entire software components.
As for performing updates, I recommend the following:
The real problems come about in a large production setup.
Patching itself is simply modifying a system for a specific purpose (ie a gaming patch to increase or decrease difficulty).
while harranging a vendor to update their software (which they'll probably do in 10 years), assuming they're still around and not bankrupt by now.
Hopefully this very overly-simplified overview helps you with a basic understanding.
In short, multiplying the scale and penalties makes it much more of an issue.
Now you've got to try and backport a security fix in software you don't really know (dangerous!)
Debian's branches work like this (over-simplified):
If not, then please explain the concept of "security patching", goals that we want to accomplish through patching, some methods of patching as examples, and some difficulties faced by sysadmins as examples.
I know how ignorant I sound now, but is that not "patching"?
I can't help but to think I'm doing something wrong by just activating a firewall and blocking all ports but the ones I'm using, and just initiating "apt-get update && apt-get upgrade -y && apt-get dist-upgrade -y" every now and then.
With regards to security patching, this is normally done at a software level.
Some poorly designed patched can sometime introduce new problems.
(Note: I have a "rolling release GNU/Linux distro")