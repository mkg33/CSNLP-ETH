The namespace and class have nothing to do with the task at hand.
Doing it this way means you have to visually scan for correctness.
I am given two strings and return the position if in the larger string the smaller string is found.
I'd rather have a programmer on my team that knows how to name things than someone who can write an efficient string search algorithm.
On the other hand, IsFound would be a pretty good name if the method returned a bool.
It doesn't however, and your parameter names don't make it clear which string is being searched, and which one is being searched for.
Your IsFound method is making an assumption that stringTwo is longer than stringOne.
Don't test from the console, write and use unit tests.
I don't mean to be harsh, but I would rule out any submissions that were testing code manually from a console program like this.
I would expect a professional to use that instead of rolling their own.
I'm assuming that they've explicitly said to reinvent the wheel, because this function is already part of the .Net framework: String.IndexOf(string).
I mention it because you might want to mention it to them whether or not they explicitly said to reinvent the wheel.
You're also more likely to consider edge cases when writing proper unit tests too.
Don't get so caught up in the algorithm that you neglect the basics.
This way length will never be negative and the for loop will always execute.