These attacks are known as "preloading attacks" and are common to all operating systems that support dynamically loading and/or shared libraries and binaries.
When an application loads a dynamic link library or executeable without specifying a fully qualified path, Windows tries to locate the binary by searching a well-defined set of directories.
If an attacker gains control of one of the directories, like on a website path in IIS, they can force the application to load a malicious copy of the file instead of that it was expecting.
When the application pool is being run as Administrator, this could lead to a local elevation of privilege.
This includes the local path, active path and the PATH variable (speaking of applications respecting that, like CMD).
More on this: Secure loading of libraries to prevent preloading attacks
The effect of such attacks could be that an attacker can execute code in the context of the user (process) who is running the application.
This is why a lot of system processes do not use or no longer use the PATH contents to search for their binaries.