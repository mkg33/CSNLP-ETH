You can group machines into groups, in order to execute commands on just a subset of machines.
If you can write Perl, the module Net::OpenSSH::Parallel allows to write scripts that perform actions in parallel on remote hosts via SSH quite easyly.
There are also commercial (highly expensive) tools for identity management out there, two I've seen/used in the past are Oracle Identity Manager and the Novel equivalent.
Eventually I hope to get Puppet to manage out infrastructure, but deploying to the entire enterprise's UNIX servers for a root password change right now isn't that feasible of an option.
It does quite a bit more than running just those commands, but those above are what work the magic.
I've used the Perl module Authen::PAM on Solaris with great success.
First and foremost, this is a really annoying task to automate, especially across many different environments.
I don't know about "best", and whether it's possible for all of the non-Linux *nix machines in your mix, but have you looked at puppet or cfengine for this kind of activity?
The most correct answer to this question is probably @tomi's: use Puppet.
As it seems that you have an heterogeneous environment you would like to group the hosts by type and use a different dialogue handling sub for every one.
It contains a sample script for changing passwords that you can use as a base.
I couldn't find any simple way to non-iteratively change the password on Solaris - so we resorted to modifying /etc/shadow on the fly.
Run deck is a server which allows you to execute commands on hundreds of machines simultaneously.
After reading many manpages and lots of Google-fu, I managed to come up with a script that loops through a list of target servers, opens an SSH connection, and runs one of the following:
After continuing to research this, I've learned a few things...