Plus, there is no more surreal moment than the first time you have to use 'whoami' to figure out who you are actually logged in as and where.
Note that this installation procedure may or may not do anything else useful for you.
But I can edit my display setup files via CLI in an instant.
Your issue is that you're trying to install a package that is not part of the built-in package manager.
This is probably the reason there's no GUI for it - because it's hard to do this right.
Realize that there are many flavours of linux, with very different package management systems.
Ubuntu uses dpkg, and provides a GUI to manage packages created for this package management system.
A script that runs flawlessly on Ubuntu, for example, would probably crash and burn on Fedora or Slackware.
Finding a convenient point-and-click package installer under Ubuntu for such packages is simple.
Because whoever wrote the package you downloaded didn't make such a convenient install script file in the first place.
Because there are simply too many flavors of Linux.
A command line flow is bringing it down to the barest basics where there is the least chances of a screw-up.
Until such time as all open source developers can agree on a standard installation process for all software, this is probably the best you're gonna get.
It is difficult, if not impossible, to safely and intelligently handle all the variations that may be present in a .tar.gz file that contains installation directions.
This explosion in the options available isn't easily handled in a GUI.
It is simply that a Linux distribution is composed of literally thousands of small components, each of which can be configured in hundreds of ways.
You will very possibly end up with no uninstaller, nothing showing up as 'installed' in your package manager of choice, and not even have the appropriate desktop icons/application entries/file associations in your window manager of choice.
This is one reason why you have to drop to the command-line every so often on a Linux system.
Many can be installed using the common "./configure && make && make install" procedure, but not all of them.
Most of these components typically have alternatives that come with their own set of options.
Ubuntu is designed around Debian-style (.deb) packages.
.tar.gz package scripts usually do little more than compile the package for you and throw it in an appropriate /bin directory (or wherever).
Thus, distro-specific installers are usually left to the distro managers themselves, or volunteers willing to do the grunt work.
I think the best use of the command line is the actual setup and maintaining of a *nix install itself.
This would require reading the installation instructions for each package to ensure a proper install.
Either stick with distro-supported packages, or deal with a command line.
Distro-specific packages usually try to account for these omissions.
The command line is probably the lowest common denominator for linux users.
When writing a package, throwing in the extra scripting to ensure that it installs 'properly' on all linux distributions is non-trivial, especially with new forks and distros being developed regularly.
Such human intervention makes automating the process difficult if not impossible.