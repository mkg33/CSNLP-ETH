This means that it's possible to build theorem provers which can decide what to prove next based on an analysis of the theorem they are instructed to prove.
So the Pythagorean theorem in particular is not talked about much because it's not especially hard.
First-order logic without induction has a very useful property called the subformula property: true formulas $A$ have proofs involving only the subterms of $A$.
This is quite hard for a computer to do, because the appropriate strengthening can require both significant domain-specific information, and an understanding of why you're proving a particular theorem.
Without this information, truly relevant generalizations can get lost in a forest of irrelevant ones.
A second question I would like to ask is the following: Why are we able to formalize many proofs, while it is currently impossible for a computer to prove a theorem on its own?
In general, the thing that makes theorem proving hard is induction.
When we run into this in a paper proof, we say we have to "strengthen the induction hypothesis".
In 1949 Tarski proved that almost everything in The Elements lies within a decidable fragment of logic, when he showed the decidability of the first-order theory of real closed fields.
While there are plans to formalize Fermat's Last Theorem (see this presentation), I have never read or heard that a computer can prove even a "simple" theorem like Pythagoras'.
The only proof of a true formula $A$ may require doing a proof $B$ which is not syntactically a subformula of $A$.
However, the addition of the induction schema to the axioms breaks this property.
I am not a computer science major (and I'm not a mathematics major yet, either), so please excuse me if you think that the following questions display some major erroneous assumptions.
(Quantifier instantiation can make the right notion of subformula a bit more subtle, but we have reasonable techniques to cope with this.)
What is (/are) the main difficulty(/ies) behind establishing a fully autonomous proof by a computer, aided only by some "built-in axioms"?