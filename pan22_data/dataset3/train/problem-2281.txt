When I did a conversion of my game with a help of MonoGame, the conversion itself (+tests) helped to find places to improve the speed and eliminate some wasteful cycles.
You can expect the final size of your app to be 3-4 times bigger than with XNA.
Even better, get into MonoGame source yourself, fix whatever problems you find and submit a pull request.
For any other platform, if you run into performance problems using MonoGame, profile your game and try to find a workaround for the part that is causing slowdowns.
I am currently thinking about porting a XNA game to other platforms using MonoGame.
If your game is fast with XNA it will be as fast with MonoGame.
Most of the performance issues I have encountered while using MonoGame are related to unnecessary garbage generation.
A lot of these are fixed from time to time but I wouldn't rely on MonoGame to be more performant than XNA as of yet.
Do I understand this correctly that I can expect the game to render faster even under Windows 7 due to the use of SharpDX?
If you are talking just strictly Windows, there's a few benchmarks you could run by but from personal experience I can tell you that MonoGame has some issues on certain features that will cause slow downs - but overall performance is good.
It is still valid that if you are targeting any of the platforms that XNA supports and do not require the use of DX11 features, you SHOULD stick to XNA.
It's impossible to tell what performs better - as they are both different implementations of a given API set on all different platforms.