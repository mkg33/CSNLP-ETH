We can do that by passing something else than a TextView.
IIUC I should decouple UI logic from the model and controller in my project.
Let your view-classes know about your model, but do not pass the view-classes to your model.
So, let's say that you would use it, let's say that your code needs to append some text to this TextView.
I have similar to the above in several classes, passing on an android activity and/or a textview into model and controller objects.
Will this be a problem and is it possible to solve?
I didn't succeed and had to resort to TextView etc in my game logic:
I also took a look at your code for the Player class, and you are not using it there either!
As I don't know what you're planning to use it for, I'm gonna call it MessageCallback
I took a look at your code for the AdventureWorld class, and there you are not using it at all.
public Adventure(MessageCallback t, AdventureActivity target, PlaceView placeView) {
Now you can pass a MessageCallback instead of a TextView, making the constructor something like:
Use callback interfaces and pass to your view to decouple your view from your model.
Find out why you need to pass them and instead pass a callback interface.
Using this approach with all your view classes, you should be able to build a pure console application game as your "view" as well as an Android application.
Ask yourself the question: "Why do I need to pass this TextView?"
Note however that you should do the same thing with your AdventureActivity and your PlaceView as well.