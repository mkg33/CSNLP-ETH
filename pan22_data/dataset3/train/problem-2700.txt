I'd like to hide the running processes from those normal users, so that for example top only shows their own processes, and not anything started by anyone else.
A quick and easy way for top, but not bullet-proof, is to give them an alias in their ~/.bashrc (or the shell-specific appropriate startup/alias file) that just runs top looking at their own username:
With SeLinux or GrSecurity you can "hide"(in fact, you don't give it access) processes between users.
It's a little bit complicated, but not impossible.
I'm running a Debian server and giving out shell access for a handful of friends.
I've seen it in action on many shared hosting services that offer shell accounts, but haven't come across a way to do it myself.
This doesn't do anything for ps or course, but aside from putting users in a chroot or jail environment, or selinux as Sacx mentioned, there's not a lot that you can do to hide the system from them.
If you aren't interested in SELinux, you could possibly get some traction with this problem by getting creative with permissions on the PID subdirectories in /proc/, but some massive testing would have to be done.