Do it because you like that style, not because it might possibly one-day help people learn Perl.
I prefer parenthesis for "real" methods, doing something.
I appreciate code that is more explicit, and having those
Because either is technically acceptable, you are right that it is a style issue and simply a case of choosing a coding convention.
A boolean value or an integer is strictly speaking not a real-world object, but it's more like an object than an action.
This point would sway me in favour of always using them and, indeed, I always do so out of habit because I use other languages a lot and it just comes naturally.
That being said, go ahead and standardize on one style or the other.
So people wanting to learn Perl, will eventually need to know that they are equivalent.
The only reasonably possible confusion that I can come up with is that someone might think that methods and subroutine calls are parsed the same.
For properties with at most small getter/setter and simple checks I use the shorter version.
about Perl, and any hints that help me to understand the
Again, send and write_book are functions/methods, but since those are actions (as designated by verbs), we write parens behind them.
Those examples may very well have both styles in them.
efficient, but are terse and often obscure; their use can
There really are very few things that can follow ->, that I don't think of it as much of an issue.
Adding the extra notation will help beginners, and
Most beginners start by looking at example code they find on the internet.
Again, a function/method, but a property of a document object, not an action, so no parens.
I prefer to make a distinction on semantic level: there are no functions or methods, but instead there are properties and actions.
However, I think that you have hit a very important point.
Even though author is probably a function/method, an author is an object and a noun, so it's a property and thus no parens here.
You know by the name it's an object, since it's a noun.
meaning of the letters, numbers, and symbols in a program are
So few other languages that use parentheses for functions allow a parameterless function call without parentheses that it can be very surprising for developers unfamiliar to perl.
Every property is an object (in real-world sense) and an action is something done on an object.