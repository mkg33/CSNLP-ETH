I have an old laptop keyboard like the one shown below:
There's a lot of technical skill required to do this, it's not for the faint of heart.
An ohm meter was used to figure out the key matrix and Teensyduino code was written to scan the matrix and send the key codes over USB.
Because there are many keyboards and they have different combinations best way is to make a small program that asks you to press a specific button and record which wire-wire combination is associated with that button.
The Teensy is first loaded with a routine that reports which pins are connected when a key is pressed.
I need to look on laptop boards what ic are used as the controller to see if we can use it, is it programmable etc.
I have few laptop keyboards and I really want to use them...
Anyway, it is possible and probably not that hard but of course normal people would just buy a USB keyboard.
The Teensy can convert it to USB to plug into the Pi.
Sorry to reply to such an old thread, but you can achieve this with an old USB keyboard controller.
Pushing a key will connect one column and one row together.
I have checked the number of available combinations https://www.hackmath.net/en/calculator/combinations-and-permutations?n=24&k=2&order=0&repeat=0 look's like we have 276 possible combinations.
It has a 24-wire flat cable coming out of the back.
From what I have seen there are two sheets of foil with paths and connection/button points divided with one foil as a separator.
One thing you might try is getting a Teensy arduino and programming it with the usb keyboard firmware.
To make it easier for people to re-use a laptop keyboard, I wrote an Instructable that describes the step by step process to build a keyboard controller using a Teensy LC or 3.2.
I haven't tried it yet, but I believe this should be possible.
Would it be possible to use this as a keyboard for the Pi (I assume with some microcontroller in between)?
I used a Teensy ++2.0 as a keyboard controller for a Sony Vaio that I converted to a Raspberry Pi Laptop.
You will need to send my Eagle board file to OSH Park to have the circuit board fabricated.
You'll have to figure out how all of the keys are wired up though.
Some keyboards might have a controller of some sort.
This project is definitely more advanced than your basic plug and play Arduino project but it's worth the effort if you want to re-purpose an old laptop with a Pi and keep the original keyboard and touchpad.
Using an ohm meter to figure out which signals on the keyboard cable are connected is very time consuming and prone to error (you need 3 hands, good eyes, and a lot of time).
From this, you can build a key matrix table that can be added to a new Teensy routine that acts as a keyboard USB controller.
Each wire is allocated to few buttons on one sheet and connects to the second sheet and other wire.
The board provides pads to solder a keyboard connector that is routed to a Teensy microcontroller.
Since Rpi has only 17GPIO as Vassilis mentioned it will be hard to do it because you need something in between, but there is Arduino (Mega = 54 IO)and it can help at least to decode button/wire pair combination.
Simply line up the connectors on the ribbon cable with those of the keyboard controller and hold it in place with the cap (make sure it has the same amount of connectors, it usually does).
Most controllers will scan through the columns and look to see what rows go high to find which keys are pressed.
The Teensy also controls the touchpad over PS/2 and sends the results over the same USB cable.
I have torn down one broken keyboard to see how it is made.
So what I can see those with 24 wires are keyboards without numeric pad while keyboards with numeric pads have 26 wires.
I have converted over a dozen laptop keyboards to USB using this method.
If they don't have a controller, then all of the keys are wired up in a key matrix.