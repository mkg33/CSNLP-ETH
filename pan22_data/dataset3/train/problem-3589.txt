If you were to use Amazon's web services, you'd set up two identical EC2 instances.
Take care to choose good hosting companies geographically distant one from another and using diferrent ISPs (they should have links from more ISPs though).
In front of those two servers, you'd have an Amazon ELB (Elastic Load Balancer).
If this service is really, really important to your company then there is no choice but to bring it in house.
I understand that hosting companies can't guarantee 100% uptime, so I was thinking if there is any fail-safe system for web hosting.
Your current host should already offer some kind of load balancing setup.
You can improve availability of your DNS by using your own DNS servers hosted in multiple hosting companies (at least 2 different).
I tried figuring it out, but it seems we always have a single point of failure.
If one of your nameservers fail, DNS resolvers will use another one automatically.
Obviously the network needs to be built so there is no single point of failure within the LAN.
Load balancing will allow you to have multiple web servers for redundancy in case one of the servers goes down.
As far as if possible the servers should be put together (as is common these days anyway) so that the least reliable components (the power supply & hard disks) are doubled up.
I work maintaining a SaaS software we have developed in-house, and it really can't be offline.
While there is no way to ensure 100% uptime, you might want to look into some king of load balancing solution such as keepalive.
We are hosting with a good hosting company - Media Temple, but recently we've had some down time due to their DNS server being down, and we really can't take this risk.
ELBs can detect if a server goes offline and take it out of rotation, and Amazon's scripts monitor your ELB and replace it if it starts going wonky.
Of course if the service is not really important then leave it with a third party that you will never be able to control and who will always have a good excuse that you can pass on to your customers (who will not understand why you are using a server that you have never seen).
There's still always single points of failure, but you can make those points of failure ones less likely to fail.
It'll help, certainly, probably giving you another nine or two of reliability, but as I said in my comment, even parts of Facebook, Google, and Amazon go down at times.
If you do that then you should have it hosted on at least two servers, on separate sites, each of which should have links to two ISPs, along with power feeds preferably from different suppliers.
Being offline will upset most of our clients and most probably will result in some contracts being lost.
Addresses of these name servers would be published in NS records on TLD nameservers which we can deem always available (this is true for at least huge TLDs like com.
You'd have the databases connected via master-master replication, so each server has the same data, and you'd ensure that the same code is on both.
External links (power & data) need to enter the buildings via separate routes.