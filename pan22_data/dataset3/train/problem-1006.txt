While not recommended, you can also have more than one user with the same UID, so anyone in /etc/passwd with a UID of 0 is effectively root as well, even if the account names are different.
In most of these OSes, it's named root by convention.
However, while the kernel doesn't care if you rename the root account to toor or even luser, you can generally expect things to break if you don't have your first superuser account named root with a real ID of 0.
a user with elevated system privileges), but there can be any number of superusers on a Linux or Unix system.
"superuser" was used to qualify a person that has privileges on a system.
The root user is the system's default superuser, but the choice of name is a convention rather than a hardcoded requirement.
This file is readable and writable by the root user, as well as anyone in the root group.
Now, these terms are frequently used interchangeably and harmlessly.
Sudo defaults to the root user, but can use other users and groups as well (see the -u flag, for example).
Think of it as a de facto portability standard, for all practical purposes.
For me, superuser would represent a group name, while root would be the account belonging to a superuser group (by default).
root on most Linux distros, wheel on most BSD derivatives) can contain other users too, which then have access to things with the relevant read, write, execute permissions set in the group bits of the mode.
Various utilities like sudo or SGID binaries can provide other users with an  effective UID (EUID) or effective GID (EGID) that allows them to perform privileged operations.
On BSD-based systems like macOS, the default superuser group is generally wheel instead of root.
That means that the superuser has the ability to perform privileged operations such as creating/deleting user accounts.
So, while superuser and root can be used interchangeably in most Unix-like OSes, they don't hold the same meaning.
Superuser is the generic term to refer to the user account used for system administration.
root just happens to be the expected name of the user with a real ID of 0.
Don't change it, though, unless you are a masochist.
This difference can crop up in cross-platform scripting, but isn't as likely to cause unpleasant surprises as a renamed root user.
"root" is the common logname of the superuser in *NIX systems.
Most Linux systems use root for the name of the default superuser group.
Apart from the fact the most of the systems call the superuser group "wheel".
When you run sudo, you're changing the effective user and/or group ID of a process call.
That user ID (UID) is hardcoded into the kernel and receives special permissions on *nix systems.
Please note that the actual name and implementation of the superuser account vary between operating systems.
), the superuser is the account whose UID (user identifier) is zero, no matter how it is named.
In Unix-like operating systems (macOS, GNU/Linux, BSD, etc.
That's generally a bad idea because many scripts and utilities expect the first account with UID 0 to actually be named root, and often use the account's name instead of its UID or GID to set permissions.
The group is usually assigned a group ID (GID) of 0, but this isn't enforced by the kernel.
Some BSDs have historically included a toor user with a real UID of 0, along with the standard root user.
For example, the following lines are usually equivalent:
You can even rename your root account to something else, if you like.