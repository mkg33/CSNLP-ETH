However, you'll have to be careful with the delta time and figure out where you need to apply it in your physics simulation.
Here's the main loop I use for almost all my games:
The physics simulation will still run at a fixed 30 frames per second, but each frame will "weigh" less overall.
Thus, to slow it down to 15 fps, you'd input a value of 0.5 into your physics simulation.
It seems to me that the major problem you have is that your physics cannot be interpolated linearly, as you'd except.
Are you updating a position with a velocity, but the acceleration of the velocity changes?
What I would do in your case is to run the physics simulation at a fixed framerate, for instance 30 frames per second, but run the rendering as fast as possible.
Because the air drag depends on the speed of the last interval, it has to be run at the same framerate constantly.
A good article on framerate is Fix Your Timestep!.
Update the acceleration with the delta time, but not the velocity.
A mistake I made in the past is to have delta time be something like 1/30.
The correct value is 1 for a simulation that runs at normal speed.