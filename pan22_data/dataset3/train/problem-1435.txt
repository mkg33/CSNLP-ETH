There are certainly game programming concepts which transcend the programming language level, but in order to be productive to the company, you need to be able to write those concepts in the language they want.
If you walk in off the street for your interview and show off something impressive, it doesn't mean it's yours.
I'd highly suggest listing the studios you're entertaining the idea of applying for and seeing what they ask for in their job listings.
As far as development knowledge, C/C++ is still the leading technology to know simply because it allows for total control of what's going on and so many of the popular engines are built in it.
However, if you knew the C++ language from some prior business app development but you have a good portfolio of XNA apps, I think any reasonable company would hire you.
If you settle on one or two that you find exciting and hone those you can expand your skills as you go.
Every interview I've ever had (games and otherwise) has involved straight C programming.
Sound, animation, scripting - depending on the project you may find positions dedicated specifically to those fields, especially if there's an engine in development or heavy modification of one.
If you do have strong skills in those fields, absolutely include a demo or a link to your website showing those skills/projects in action.
If you like working with people and your portfolio shows that you developed game design tools this can be a rewarding experience.
When you're dealing with a limited number of updates per second it pays to have complete control.
If you don't handle criticism well, it's not the role for you.
That being said, there are a lot of studios out there.
If you only know how to work in C# and a job opportunity arises, you don't want to miss out.
If you don't have strong 3D and graphics coding skills and you apply for one of those positions, expect it to be discarded.
Unlike 10 years ago where a bit of enthusiasm and just showing up with something cool could land you a job in-house, now roles are quite specialized.
I'm only just learning to code myself, but CVs passed through my hand for several years at a moderately sized (50+) company.
They require extensive and very solid C/C++ knowledge coupled with 3D math and prefer candidates experienced with the middleware engine they utilize.
In general, solid C skills are amazingly beneficial.
It seems unlikely to me that they would hire you for a C++ position if you didn't know C++ at all.
In order to apply for the job, you should probably have a decent understanding of the language, even if you made a conscious choice to do your game programming in a different language.
Research the studios that you want to work for and find out how they break down their coding tasks.
Having talked with employees of small game development shops around my area, they said they tend to favor those applicants that have some proof of the work they've done before.
Tools programmers work very closely with the designers and artists, and you get constant feedback on your work.
At that point, you can buff up whatever knowledge you so require.
You can expect 3 or more hours of problem solving or code refactoring to satisfy your interviewers.
XNA is useful, but you're at the whim of the framework for a number of things.
But you don't have to have leet 3D-fu skills to get picked up.
If you plan on working independently long term, learn whatever works for you.
Most, if not all, game programming positions should state the language you will be working in.
For example, making mods for an existing game or being behind a game engine that someone besides yourself has heard of.
Most CVs went into a storage box or archive directory, never to see the light of day again.