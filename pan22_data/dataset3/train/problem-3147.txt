Write a program to run in place of tty0 that executes a command, captures its output as text, and write that to the display.
This would probably be the best way to do it if the vt100 terminal protocol made any sense at all.
You'd read in a line of text, execute it as a command, capture the string output of running it, and then display that.
That leaves the third way, which wouldn't quite work perfectly, but would work "good enough" for very basic usage.
The first way would be to write a kernel driver for a frame-buffer device on the LCD display.
Something like the python subprocess command would do this.
The keyboard input would go into the application, but the display would come up on the screen.
Unfortunately, from when I looked into this it's miles and miles of spaghetti to me.
The second way I know would be to create a terminal emulator program (emulating vt100 for example) and then have this launch in place of tty0.
I would dearly love it if someone managed to hack vt100 so that that idea would work though...