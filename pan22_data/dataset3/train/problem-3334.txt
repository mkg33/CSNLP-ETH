But having said that I agree with the other A above that this is a training issue.
Especially when it is a simple task they have done repeatedly in the past and should already know what do to based on past experiences.
It's true there is little you can do when it comes to people not having the sense to look for a save button.
If you can get the dialog box to show up on top of the other windows, your end user might clue in, the next step they need to do is, "save"
I've found that for some strange reason certain programs in Win 7 x64 amazingly enough sometimes load the dialog window onto the screen UNDER other windows, and not on top as modal.
Although I do agree, you also need to train your tech support staff to train the end user how to perform the simple tasks, like looking for a save button for example.
I believe in order to fix the issue I updated the video drivers and rebooted the PC, afterwards the dialog box opened on top of the windows like it was supposed to.
I have seen a similar problem in the past whereby a dialog box was hidden under other windows.
:-( You know what is said about Engineers, that they don't solve problems but rather trade one problem for another.
(I'm not affiliated in any way with Pdf24 other than it meeting my recent needs)
But it's not a very good solution I don't think, because it might break other things.
The macro periodically checks for a windows type (i.e.
Since it's happening enough times, you might consider an automation solution.
Options include auto-open folder, auto-open file, auto-name with parts like date-time stamp, etc.
You can even customize the look of the program with company logo which is unique.
It was called "Push the Freakin' Button" and it was a rock-solid bit of freeware.
Not sure if this might be an option worth looking into, but I wanted something vaguely similar: Auto PDF printing without prompts or popups.
Hitting the users over the heads is unfair to them.
I have a program that prints stuff that I'm upgrading and for testing purposes I want to print to PDF, auto-name it and not have to think about that part of the process.
But perhaps I can offer some advice that might help.
After I discovered it, there was no end to the uses I had for automating all those little, annoying, 'are you sure' dialogs, of which Windows developers are apparently so fond.
Use something like autohotkey to put a macro in their autostart.
Once the end users are better trained, they will become more productive and less of a drain on your department.
When I print to that printer, through the setup, it automatically prints to a folder.
I use a free software call Foxit PDF, I will paste a link below.
Nothing like a System-modal error dialog to put a quick stop to file sharing on the network.
It will still take a little ingenuity to solve your problem, but I know that tool was a god-send for me when we had remote servers using a 3Com driver that occasionally assumed a user was present.
This may, or may not be, all the fault of the users.
You might get some mileage out of a product I used to use (before I had the opportunity and good sense to stop developing in a Windows environment.)
One if these that I use that does this is what prints pdf documents.
save as dialog specific to PDF printer) and issues a "bring to front" call to it.
Another option is to update or change your print to PDF software.
However, I can imagine a looping script in PowerShell which gets run as a background job, which regularly checks for certain tasks on certain workstations, and for how long they have been active and possibly idle, and kills any such process.
I just looked and it seems to still be available here.