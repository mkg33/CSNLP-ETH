This way both SMTP servers will accept mail for all users and forward the mail to the POP/IMAP-Server where the user's mailbox resides.
So i mean lets say i have user joe in town A and john in town B, and send an email from yahoo or gmail to both of them, and my mail will reach to them no matter which town they are in.
So, really, unless you have a very special case - you totally try to optimize the lease resource intensive protocol on your network.
On each SMTP server you add a per-user rule that forwards mail to the correct LMTP destination.
I guess the smarter variant is to do the following:
Use Microsoft Exchange or a similar high end system.
Joe and John can provide others with their canonical address joe@aaa.com and john@aaa.com.
So what should i do to achieve this setup in order to let all the users in both server to be able to send and receive email without any problem.
postfix, exim, whatever) with full knowledge of all users and set up two POP/IMAP servers that recieve mail via LMTP over TCP.
See, SMTP is not designed to work like this - so you can not do it on an SMTP level.
Note : I have a fully working email server with modoba.
Please note that all these setups can become complex to administer, and sometimes not bandwidth efficient (email for Town B is received in twa.aaa.com server because that is first MX record the sender received, and has to be relayed to twb.aaa.com for deliver) but that can certainly work.
Mail routing is performed using MX records, which are created on a domain basis, not user basis.
Of course, existing email products handle this multi-server, multi-mailbox with nice UI interfaces and simplified administration.
You will need a full list of users on both systems.
Internally, the mailbox for Joe is joe@twa.aaa.com and the same for John, john@twb.aaa.com.
I want to setup a mail server with domain aaa.com in town A and another mail server with same domain aaa.com in town B.
Output filters can rewrite their address, so any outgoing email they send will appear to the receiver as coming from canonical @aaa.com addresses.
An unrelated nostalgic note: Done something like that using the venerable (and awfully complex to maintain) sendmail rulesets back in the 90's, using UUCP to connect some remotes offices by phone.
And they can do so nicely, without all the config pain of a do it yourself solution, including moving mailboxes transparently.
On each system you configure the mailserver to accept mail for the domain and configure each user that relies on the other server as a forward (in postfix you can achieve this with virtual_alias_table).
As Andreas said, I think you can create such a setup without doing anything weird.
and then have a master list of canonical names, that is in sync in all locations, that route between servers.
However, there are many pitfalls and this is nothing you want to support in the long run.
Most of the time - unless you run enterprise grad users sending 150mb attachments in their emails - the question, though, is "why bother".
What you can do is use an enterprise level email system (because it is those that basically need it) that, while having front ends "somewhere" can handle distributing the mailboxes to separate servers (which can then be at different locations).
Plain and simple: SMTP was not designed to function like this.
Each mail server in each town has their users (unique user which mean it won't exists in both server, just one of them).
You make each server, at each location, have their own sub domain (twa.aaa.com for the server in Town A, twb.aaa.com for the one in Town B, etc.)
That said, you could have foo.example.com at one town and bar.example.com at another town, each with their own users.
You can get an idea of what I am proposing with this answer.