If you want custom behaviour, that sounds like you'll need a scripting language.
All you can do is look at what options are available and pick the ones that suit you most.
You can take a look at the sources at google code and also you can see screenshots about tests of the functions at picasa
That allows people, maybe designers, to write behaviour in the scripting language without needing to edit the main game engine.
But a scripting language at least allows you to execute external files as if they were code.
What is best for you will depend on the nature and amount of your data.
I used to practice with it because it contains a simple scripting language to design the whole game and you can find tools for free for designing the scenes or just make them yourself, there is a lot of information out there about it.
Arguably your designers are becoming programmers at that stage, but hopefully the scripting language is easier to use than C++, and less bug-prone, but a lot of that depends on your choice of language and how you implement it.
You can take a look at eathena project, a mmorpg server clone.
However it is often more effective for data to be handled in a separate tool that you make yourself, or via a standard tool such as Excel.
There's no magical tool (that I know of) which could translate a normal design document, even a well-written one, into usable game code that works in the language and engine of your choice.
There are no standard tools or processes here - every game is different and every team is different, so meeting their needs will vary from one to the next.
There may be other free sources of mmo servers but that's the one I know most :).
Scripting languages can also function as data documents too, so designers can combine the behaviour and data in one file.
When I was newbier I wrote a reader for some of those files such as .gat containing tile description and the like.