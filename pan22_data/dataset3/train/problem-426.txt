If you created an SQL-format dump, all you can use is psql.
You can selectively restore only some tables/schema, can choose whether to include only schema, only data, or both at restore time, etc.
Lots of the options you have to specify at pg_dump time with SQL-format dumps can be chosen at restore-time if you use a custom-format dump and pg_restore.
If it weren't for backward compatibility I'm sure the default for pg_dump would be -Fc (custom) format.
If you created a custom-format (pg_dump -Fc) or directory-format (pg_dump -Fd) dump, you can and must use pg_restore.
Which begs the question: am I missing anything by not using pg_restore which seems like a specialized restore tool (compared to the generic psql)?
Custom and directory format dumps offer a lot of advantages over plain SQL script dumps, and I use them exclusively.
I am dumping my Postgres database using pg_dump (in plain-text format) and then restore it simply by using psql (with the -f option).
You can't convert an SQL-format dump into custom-format or directory-format without restoring it to a PostgreSQL database and then dumping the restored DB.
I can control options like disabling of triggers and such by using pg_dump parameters.