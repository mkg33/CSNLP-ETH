Unless you do something very drastic like Software Restriction Policies in Disallowed mode (and strip the user's Administrator rights) you won't really get anywhere.
I can't stress enough that you're trying to solve a management problem with technical means.
Users can rename files or copy them with a byte of garbage appended at the end to throw off the cryptographic hash.
You can define various criteria to allow / disallow program execution.
In "Disallowed mode", where only explicitly allowed programs or paths are permitted to run, Software Restriction Policy really has teeth.
The Microsoft solution for what you're looking at is Software Restriction Policies.
You have a management problem, not a technical problem.
That's a recipe for wasting time, wasting effort, and creating more problems than you'll "solve".
If you must, this would be a good place to use Sysinternal's PsTools.
If you do go to such drastic measures you'll end up spending vastly more time and money than would be spent if management would just "man up" (or "woman up", as the case may be) and do their job.
While I understand that your "bosses" are asking you to solve their problem for them I'd argue that you need to let them know that there isn't a technical solution to this problem.
If management won't take care of this as they should, then tell them that yes, you can take care of it, but not in a half-assed way like restricting when they can play games.
If it's minesweeper or hearts or something like that, you should be done.
Running in its "allow everything, block exceptions" mode (called "Unrestricted mode" by Microsoft) won't help.
I would CYA by keeping documentation of what you're asked to do, by whom and when and the steps you take to implement it plus any other related communication or actions/reactions.
(With the caveat that if the users have "Administrator" rights then your attempts at stopping them will be toothless, no matter how you configure it.)
If it's a game they installed themselves, remind them sometime that they shouldn't install their own software on company computers.
With a non-Administrator user and some well-define paths in "Disallowed mode" (paths where the user can't write files) you can do a wonderful job of making Windows XP prevent unauthorized software from running.
I'll weigh in with an answer, but I'll echo what's been said in the comments, too.
Using taskkill doesn't stop users from starting the application again.
Use a GPO and implement a software restriction policy.
+1 to all the "it's a people problem, not a technical problem" comments.
Tip-toeing around the problem isn't gonna help in the long run.
You could use PsList to show running processes on the remote box, and PsKill to remotely kill the game process(es).
Obviously, being a "deny all, permit explicit" architecture means more work setting it up, but the "win" is that it really can keep almost all unwanted software from working on a computer (even software that "lives" in folders the user has rights to write to-- a trick that Google Chrome does, for example).