However when testing Microsofts Azure Active Directory Connect tool, it asked me for an administrator login for our Azure environment.
This is typically how that is handled for SSO to third party applications.
Below I've listed what I've been looking at, but basically I would like some advice on how to approach this problem.
So I thought that maybe we could sync from the on premise AD to our AD in Azure and then take it from there.
This is what ADFS as well as other federating identity platforms do (the federation part).
If you configure the application to support SAML authentication - than a customer could configure their ADFS (or other) to work with their AD.
Another problem in all this is that I'm a programmer and all the AD stuff is a little out of my comfort zone and I might be looking in the wrong places.
We have a web application running in Windows Azure where a variety of customers can log in.
This could also mean we would have to implement multiple or a lot of these solutions depending on customer preference.
Obviously we don't want to give our customers access to our Azure portal, so it looks like this isn't going to work as well.
You do need to provide a way to create the trust however, between identity providers (yours and theirs).
If you want an SDK - Ping Identity (PingFederate developers) offer one for multiple languages (Java, C#, etc).
Lately more and more of them have been asking for some sort of single sign on solution, or at least a synchronization of their local/domain users with the ones present in our application.
But there are others as well (both commercial and open source) like PingFederate and Shibboleth.
The way that works is you still manage identities and access to the application but customers are able to take that and tie it to their own "claim" that can contain AD usernames.
Identity is complex topic - the more you can offload that to a dedicated company or team the better off you will be (Azure B2C is in preview as stated in other answers but look at 3rd parties if you are looking to get going faster)
I've looked at several options but haven't really found one that looks feasible to me.
Most if not all of our customers will have an on premise Active Directory and it would be perfect if we could somehow use that with our application as well.
On your side you can create a custom identity provider, use a third party service, or deploy a federation server like ADFS.
Connecting our web app to an on premise AD isn't really an option because sys admins (understandably) won't give us access to it.
There are third party services that might be able to do this, but usually those require some or a lot of work both for us and our customers to implement.
I'm sure there are open source SDK's out there as well to help with it.
Does anyone have any experience with any of this, and can point me in the right direction?