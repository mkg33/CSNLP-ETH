ssh keys mean that as some user, say pixeline, when you are logged on to serverC, when you type
http://rcsg-gsir.imsb-dsgi.nrc-cnrc.gc.ca/documents/internet/node31.html
It will not work well without ssh public keys - this is a step by step how to:
NOTE: your home directory has to have protections 755 at least and the .ssh directory under home should be 700.
Now, it would be a bit unusual for a system to be configured to forbid scp, but allow sftp.
It works just like almost any other CLI FTP program.
Explaining all the things you can do with it is a bit large for a superuser answer, so just read its manpage.
Have fun... You MUST get that working, and if you want to do all the files at one time we can try tar.
If all the servers are linux or unix based you might be able to use rsync as it would be the fastest way to complete it.
This works because if these programs don't have a file specified, they default to stdin or stdout as appropriate.
Depending on your network conditions and file characteristics, you may want to invoke the sftp or ssh portions of these commands with -C to compress the traffic so it doesn't take as long.
If you find yourself in that boat, then you can leverage the fact that ssh lets you execute remote commands via any archive or copy program that will work with stdin and stdout.
So you create an archive or slurp a file and dump the result to stdout, and then you pipe that stdout to the stdin of ssh, which is running a program that will convert it back into the files you want.
If sftp is available on the remote server, the command to invoke it would be (drum-roll please):
Not that it can't be configured that way, but most admins who block one block the other.
It connects you directly with asking for a password.