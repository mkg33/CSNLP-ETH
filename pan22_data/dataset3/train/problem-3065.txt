(So, for example, software entities could be alive, whatever "alive" means.)
Then it copied the memory tape that it had itself.
Luc Steels wrote a book on this general subject in 1993: The Artificial Life Roots of Artificial Intelligence.
I would perhaps look at how large or complex the language is that the TM accepts.
von Neumann was an early believer in strong alife, it appears.
I think quantifying computer intelligence by something so unquantifiable as the creativity of its author might prove unfruitful.
The connection between the two goes back to the very beginning of the theory of applied computation.
However, von Neumann never published this, and it was not until 1966 that Burks fleshed out his notes into a proof, in Theory of Self-Reproducing Automata, that it became public.
There are a great many algorithms that try to produce descendents that are fitter (i.e., more able to solve problems that require some form of "intelligence" to solve), and different algorithms have different metrics of success.
It follows that if the TM's language is more complex, the machine is more "intelligent".
This paper was one of the precursors of the field of Artificial Life.
Broad brush, there are two philosophical positions in that field: "strong alife," and "weak alife."
If I understand your question correctly, it attempts to relate intelligence to reproduction.
Weak alife states that any living process must be chemical in nature.
Strong alife states that a living process can occur in any medium.
I don't know how to steer you more specifically, but perhaps you will find a vocabulary in those works that will help you ask a more precise question.
This is much easier to quantify, and it has been shown that there is a 1-1 correspondence to a TM and its language.
von Neumann in 1948 envisioned a robot that could duplicate itself completely.