Also check out Embedded HTTP and WebSocket Server for UWP/.NET 4.5  https://www.nuget.org/packages/IotWeb/ (or on github)
Now, you can follow the same approach as described in several tutorials out there that demonstrate how to implement a self-hosted ASP.NET server, e.g.
For Python or Node.js, there are already samples available on the official GitHub project:
To implement your own web server on Windows IoT, there are a bunch of possibilities.
If you access your device on http://devicename/, you will actually see a website that is already provided by the system.
It's possible to implement a web server with Windows 10 Core for IoT on the Raspberry Pi 2.
In both cases, you should create a Windows Universal App first, which will host the web server.
It won't have all the ASP.NET mechanism but then you want simple.
Instead of a console application you are using the Windows Universal App here, but that basically doesn't make a difference.
Note that the "App2App WebServer" sample application uses sockets to listen for a connection.
http://www.asp.net/web-api/overview/hosting-aspnet-web-api/use-owin-to-self-host-web-api
As you mentioned ASP.NET: I didn't stumble across any sample yet, but you should be able to do that, either with a classic self-hosted ASP.NET 4 application or you could give it a try with ASP.NET 5 (aka "ASP.NET vNext").
http://www.c-sharpcorner.com/UploadFile/7ca517/Asp-Net-5-conaole-application-with-visual-studio-2015/
You can easily extend the code to read the content and treat process the content as JSON if you want to do your own simple Restful server.