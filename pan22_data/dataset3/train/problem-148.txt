Check out CAcert, "A community driven certificate authority that issues certificates to the public at large for free."
Then apply that to assets, in your case, a webserver, an operating system, and potentially a web application and underlying database - really the business though!
Getting to your specific question about certificates - what is a digital certificate?
One piece of malware can be all it takes to get in.
Wow, if you're using apache you can use mod_rewrite to force the use of SSL and in your httpd.conf you also need to use the 'SSLVerifyClient require' and 'SSLVerifyDepth 4' directives in your *:443 virtual host.
It is a public key, embedded into a digital certificate, with some fields in it, typically x509v3.
However, using private keys on an operating system may mean they are exposed and compromised.
What you are looking to do is called two way ssl authentication
Most security people leverage a few basic principles generally:
Microsoft's implementation is easy to follow at http://msdn.microsoft.com/en-us/library/bb643324.aspx and you can find other competing solutions for easier auto-enrollment PKIs.
Setting or changing the password on the client key by your users should also be covered.
How to implement it is going to vary based on your web server.
tinyca2 is a nice graphical front-end to generate certificates.
Afterwards, I'd look into the code of the web applications, and other things.
Certificates have no confidentiality generally, private keys have confidentiality and require protection.
For the above technology infrastructure, I would ask if you have applied proper security hardening to each, e.g.
You will be able to generate the keys and certificates for the server and clients.
Depending on the operating system you are using, you may have a very simple path ahead using certificate based auto-enrollment schemes like SCEP or microsoft's certificate services.
Consequently, higher security environments such as companies and governments commonly use a hardware device to store private keys and enable a more secure authentication process.
A digital certificate is effectively an encryptor, that uses a decryptor (private key) in order to authenticate, sign, or perform some other type of transaction.
DISA STIGs, NSA SRGs, CIS guidance, or vendor security practices.
For the rewrite rule you can use something like this:
I would recommend documentating proceedures for installing your ca-certificate as well as the client key and certificate.
If you are not doing this for a more secure environment, software certificates may be good enough for you.
Security is a larger question than the authentication or authorization mechanisms in use.
You can share a few of your needs with above links with your network administrators and ask them to start testing it out.
I second using mod-rewrite to force access to https://.
It is packaged for both Debian and Ubuntu Linux distributions.