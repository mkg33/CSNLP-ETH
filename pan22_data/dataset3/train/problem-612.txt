You can do something along the following lines if you need an ssh-agent:
So that when I ssh gravy_access it'll instantly allow access.
This uses the client host's ssh key to permit access, together with the client host's verification of the user accessing the remote host.
Put the public key in a 0600 mode file called ~/.ssh/authorized_keys in the login user's home.
Certificates offer a lot of interesting options that, while similar to the arrangement of identity keys and authorized_keys, reverses the arrangement so that controls that normally lie in the authorized_keys file are embedded in the certificate.
These can also be given special access controls through the use of controlling phrases at the beginning of each key's line in the file.
Many people spawn an ssh-agent process when starting their X session.
The file authorized_keys can contain many different keys.
This is a weak form of security and probably should not be used at all, or if it is in use should only be used on a LAN.
If you did not use a passphrase for your private key, you should now be able to login without using a password.
There are 6 main ways of accessing a server using ssh that provide some level of security:
One can avoid having to retype this phrase at every connection by running an ssh-agent process and loading the key and required passphrase into this.
To generate an ssh identify file pair use the ssh-key-gen program to generate a private (commonly ~/.ssh/id_rsa) and public (commonly ~/.ssh/id_rsa.pub) key pair.
Want to give somebody the chance to run date on your server for the next two days only as user bob from network x?
My host uses passwords instead of id_rsa's to SSH in.
Host-based authenticated allows access using the remote hostname and username associated with it.
Certificates seem to be a really good way of doing this.
But instead of typing the password everytime, is there a way to put the password in my .ssh/config ?
However it is more sensible to protect your private key with a passphrase.
* at the beginning of a key's record will limit the key for use by hosts connecting from 192.168.1.x addresses.