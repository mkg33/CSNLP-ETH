My main reason for this is that breaking this up into 3 three classes, it makes 2 of the classes a real mess through interface injection and quite hard to unit test.
At the end of the day, this class still deals with one concern in the complete system to follow, that is, testing 4 given variables against the returned array from a super global and returning the result as array in the form of query arguments and query variables.
What if you at some point do not store this data in GET, but in POST?
I think that the bulkiness of the class makes it quite difficult to maintain as separate smaller classes as we are working with 4 variables
It is not as clean and true as I would want it to be, and I'm sure the new class can be improved, but that is something for the near future.
when I'm on a single post page which was referred from an author page
The class can then be used on its own (I will use this in a system which will return posts from a new instance of WP_Query in Wordpress according to the referrers set) and can easily be isolation tested.
That is why @EliasVanOotegemto suggested to pass the value contained in GET instead of passing the index at which the value is stored in GET.
One of the points of @EliasVanOotegemto was that your class expects the $_GET variable to be set, which is not ideal because it makes your class very static and hard to reuse.
But through your new design, GET is actually used in two classes instead of one, which couples your classes together, and makes both hard to reuse.