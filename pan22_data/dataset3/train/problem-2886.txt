How do I set up a prod-like dev DB since Vagrant without transferring over that massive data dump.
Quite recently I learnt about Vagrant and was amazed by it.
Our developers use a smaller data set than one that's in production.
Most of the development happens via putty and its extremely tedious.
But the address type is reference data - since they had to select from either 'Home', 'Work', or 'Other'.)
However, my biggest complication at this point is how to set up a prod db like mysql environment.
With just the schema and reference data it shouldn't too much to create a new instance with every environment.
While your prod DB is 7GB - how big is it without activity data?
I recently joined as a system admin at a company and my recent assignment is to make friendlier dev environments for our devs.
All of the tables are the same, but the data is not a copy of the live data set.
I'm sure that this is common problem lots of sysadmins have dealt with in the past.
We started out using jetpants, an open source MySQL sharding tool from tumblr.
So I quickly set up a simple LAMP stack that our devs can use.
(Activity data is data that gets added by users or programs - whereas reference data is data that you need to key off of for other things.
An example would be an Address record - the street name and address is activity data, since it was added by somebody.
For some reason if it is, what is the issue with having developers use a "Dev" database?
We compress that file with lzop then ship it to dev machines over netcat.
Our database is around 7GB in size and it doesnt make sense to download it and then run it in your vagrant VM.
This will vary depending on your needs, but for us this is a great way to work.
Until now our devs connect to our remote box, copy the production code, do a restore of the production database, and correct apache vhost settings and then begin development.
From there, we realized we didn't need the immediately point in time syncing that jetpants provided so we further streamlined with a nightly backup of production stored as a file.