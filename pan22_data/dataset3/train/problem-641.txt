Instead, I want the model to cluster until all the locations within each cluster are within 25 miles of each other.
max_d = 25       # I assume that your `Latitude` and `Longitude` columns are both in
The clusters is an array of cluster ids, which is what you want.
X = locations_in_RI[['Latitude', 'Longitude']].values
            method='complete',  # dissimilarity metric: max distance across all pairs of
    )                           # you can peek into the Z matrix to see how clusters are
I am trying to cluster geographical locations in such a way that all the locations inside each cluster are at max within 25 miles of each other.
from scipy.cluster.hierarchy import dendrogram, linkage
clusters = fcluster(Z, max_d, criterion='distance')
Besides that scipy also provides a dendrogram method for you to visualize the cluster formation, which can help you avoid treating the clustering process as a "black box".
I am using a custom distance function to calculate the distances between each location.
I have tried doing this in both Scipy and Sklearn but haven't made any progress.
                                # records between two clusters
I think for HAC (Hierachical Aglomeritive Clustering) it's always helpful to obtain the linkage matrix first which can give you some insight on how the clusters are formed iteratively.
There is a very helpful (yet kinda long) post on HAC worth reading.
                                # merged at each iteration of the algorithm