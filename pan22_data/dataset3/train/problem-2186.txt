It doesn't have to be a large amount of it but it should be actually doing some work.
My bet would be on MySQL being the slowest of the three but it could very well be that you are loading up a lot of images on a page that is slowing down the total request time in which case you might want to rethink the design of the page.
MediaWiki is pretty good code so if there is a PHP bottleneck on your system my money would be on the actual loading of the PHP stack into memory and perform the test again.
You'll need a baseline to get comparisons against.
To rule out apache as the culprit make a static page on your server (just save the html of a page that you consider slow/sluggish) and run ab against it again.
Look at the three numbers and see where the biggest jump is between the next step up.
If you have the "ab" tool installed (it comes with apache) you can use this.
To get your baseline I recommend getting the average of at least a couple of hundred requests.
Well when your profiling anything like this to find the bottleneck you need to rule things out one by one.
Look through the results for the line of "Time per request", it'll look something like: