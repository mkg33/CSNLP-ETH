This process repeats for every Ethernet segment the packet crosses on its way to the destination.
This keeps happening till the packet makes it to it's destination.
It Z is not local, and there is another router, then the gateway will arp the ip of g2, and get it's mac address.
To enhance managability and interoperability, network protocols are organized in layers (you probably heard the term "network stack" or "network protocol stack").
Communication in an Ethernet (layer 2) uses MAC addresses for identifying source and destination of an Ethernet frame.
Most servers will have a default route for this, but could have multiple routes, either configured statically or learned dynamically.
On the router's Ethernet interface the frames are re-assembled into an IP packet and passed up to the IP layer.
There the packet is encapsulated in Ethernet frames with the sending interface's own MAC address in the source field the router's MAC address in the destination field.
The router sees from the destination IP address that the packet isn't sent to the router itself, so it passes the packet on according to its own routing table.
192.168.10.10) in the source and the target address (192.168.23.13) in the destination field and passes that down to the Ethernet layer.
What happens now is that the sending host creates in IP packet with its own address (e.g.
When the originating station (station A) goes to transmit a packet (to station z lets say), it looks at the Z's ip address A's own ip address and A's netmask.
Every interface attached to the ether receives all frames, but only processes those sent to its own MAC address (CSMA/CD).
The Internet Protocol checks if the destination is within its own subnet and -if it isn't- sends it to a router.
Ethernet-level communication cannot go beyond the broadcast domain, because MAC addresses can only be resolved within that network section.
The gateway repeats the process, seeing if Z's subnet is locally connected or not.
192.168.23.0/24) is not present in the host's routing table that's the default gateway, otherwise the router identified by the gateway address of the respective route.
For each layer there is a protocol that defines the communication between local and remote component on the same layer, and each component defines/implements interfaces only to its neighboring components (above and below).
Once it has that, it sends the frame with A's Source IP, Z's Destination IP, the gateway's egress interface source mac address, but this time Z's destination mac address.
Then the packet is passed to the interface associated with the address of the next router and re-encapsulated in an Ethernet frame, but this time with the first router's MAC address in the source field and the second router's MAC address in the destination field.
(potentially something equivalent for that medium though)
I was reading a book that stated that the MAC address (physical address) would change every hop but the IP address (logical address) would remain same in the image.
The reference model for this layered approach is the OSI model:
Once A finds Z's subnet in it's routing table it does an arp of the ip address of the gateway(g1) that can get to Z.
Basically, the source mac address keeps changing, but comes from the last device that transmitted the frame, and the destination mac address keeps changing, but is the next device that the frame is getting sent to, until it is eventually the actual station Z.
It will then send the frame again, this time with A's source IP, Z's destination IP, g1's egress interfaces's source mac, and g2's ingress interfaces's destination mac address.
Keep in mind, mac addresses are only locally significant.
Packets can also travel over different physical mediums, like T1's or sonet, which work differently than ethernet, and wouldn't have mac addresses at all.
Once it has determined Z is not on a local subnet, it looks in its routing table to see if it can get to the network that Z is on.
When you want to address a host outside your Ethernet, you cannot resolve its MAC address, so you go up one level in the protocol stack (layer 3) and use a different addressing mechanism (IP).
It put the frame on the network,  with A's source IP, z's destination IP, A's source mac address, but the g1's destination mac address.