That size_t x1_minus_x2 = x1_plus_y - x2_plus_y line wouldn't be necessary (IMHO even reduces readability), but apart from that it's reasonable.
It merely stays in-place, while the optimal solution to this problem can treat the input as read-only and limit the working-set to constant space.
Students have a tendency to trade algebra for brute force, if possible.
In fact, if I hadn't checked the source of list_reverse, I would have expected it to return a reversed copy instead.
Which then also would fit better within the space complexity requirements, and requires no manipulation of the lists.
Smarter students will just read the length of both lists, skip the length difference, and then walk in lockstep until they find the common element.
I would expect that your students will mostly just reverse both lists, traverse in lockstep and identify the last common node that way.
Your solution also depends on list_reverse being implemented as in-place and manipulating the original list.
Depending on such behavior is IMHO pretty bad design.
However, your solution is worse than it needs to be.