You can write '16' on a piece of paper and hand it to your friend; it's completely out of my control.
As long as you have free space on your hard drive, you can copy all the data you can access.
You could convert the spreadsheet into a web page, and serve that.
Instead, you could collect the user's input and send results of a server-side calculation back to the client.
The closest thing you can do is "Lock" or Protect your worksheet.
Spreadsheets are generally not very suitable for this, though, and I know of no simple way to provide the level of interactivity that allows the user can draw his own charts.
However interesting, I want to emphasise that this number is mine.
It seems that others have tried to do similar things with mixed results, one problem being that the browser ends up downloading the excel file, which is exactly what you don't want.
Depending on the desired level of interactivity, it may be possible to not show the spreadsheet at all.
And since it will only protect 1 sheet, you can protect the single sheet with your data on, and leave another sheet unprotected for people to make formulas, or create graph / chart on the 2nd sheet.
Now, that takes us well out of the scope of SuperUser, and into Webapps / Stack Overflow territory, but it is the route that would enable you to do what you want to do: to allow users in web browsers to play with relationships expressed in a spreadsheet, and see the results, without having access to all the algorithms contained in the spreadsheet itself: all the calculations live on the server.
It will hide your cell data so people can't just select them, but nothing preventing them from re-writing it down of course.
(NB github's being a bit weird at the moment - if you get a 404 from any of those links, click in the browser address bar and hit enter) (disclosure - I have made tiny contributions to those github projects)
You can see an example of it working in the DECC 2050 model code, which converts the innards of an excel spreadsheet into a C library, and also creates the ruby infrastructure to call the C library, and to build interface elements to it.
You can see my version of the DECC 2050 application here.
Zoho will allow you to protect the spreadsheet so that the data cannot be exported.
Google Docs didn't allow this level of granularity with protection before, but maybe things are different now.
About the best you could do would be to present an image of your spreadsheet, distorted like a Captcha and/or on a noisy background (to make OCR more difficult).
No writing it down, no incrementing, no telling a friend about my number, nothing.
You can't prevent someone printing a screen image or manually keying in the data.
An Excel file is just a (collection of) number(s).
That's been automagically generated from an excel spreadsheet, by my fork of the above DECC 2050 model code.
but they can't mess with the first protected sheet
For that, you may have to hand out the Excel file and be okay with people having the ability to make copies.
In looking for possible solutions, the direction I went in involved googling for "render excel spreadsheet in browser".
Use Lock and Hidden (under Format Cell - Protection) and then Protect your Worksheet.
Have you considered looking at something like Zoho?
If you control the ink and the paper, you can print any information you can read.
Probably bigger than fifteen, but the argument is the same.