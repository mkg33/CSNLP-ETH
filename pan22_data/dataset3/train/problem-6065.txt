They're also using pv to give an idea of how far along they are, and you can add more drives by just adding more piped in dd of commands.
I'm sure this can be made more elegant (for example, this hardcodes the device locations, and it may not be the same in each case).
What options are there to transfer a single file to 10000 different usb sticks?
dd if=/dev/sdf |pv| tee >(dd of=/dev/sdd bs=16M) | dd of=/dev/sde bs=16M
In the example given they're copying from /dev/sdf to sdd and sde.
I know there are devices that let you write multiple DVD simultaneously, does something similar exist for USB sticks?
I'm pretty sure throughput would be shared,  so you don't want to mount too many drives per USB port but short of getting a dedicated bulk USB duplicator (which do exist - google it), you could do the same thing with a bunch of hubs, and slight abuse of Tee.
I'd try to split this amongst as many hubs as possible, and probably see if you could script it so you don't automatically set device names.
You could also use an image file as the input file, which would free up a USB port.
Get a hub, plug in the disks,  work out what their device names are, and ensure they are not mounted.