Note that programs running as administrator can enable SeBackupPrivilege and SeRestorePrivilege to read and write anything (respectively), no matter what the ACLs say or who the owner is.
Local administrators have SeTakeOwnershipPrivilege, which allows them to forcibly make themselves (or a group they're in) the owner of a securable object.
(This is where the "discretionary" part of "Discretionary Access Control List" comes from - the owner is responsible for who can do what.)
Apparently owning a file in windows doesn't give one permission to do anything to it...
It seems you've figured it out yourself, but I'll provide a little more information on how NTFS access control lists (ACLs) work.
The only special thing about being an object's owner is that you can always read and write its ACL, even in the presence of a deny entry for those permissions!
You had initially taken ownership of the files, which then enabled you to write to their ACLs, which then restored the appropriate access.
Normal users can take ownership if they're granted the right via the object's ACL, but admins can blow through ACLs with that privilege.