Now, I was looking at other solutions, and had a quick look at lighttpd or nginx so my question is:
nginx should play nicely as a reverse proxy for nodejs too.
It's a valid alternative but wheather it's a realistic challenge for you is another matter.
I am not developing a real time application like a chat but something more like a forum.
The reason I am asking is also because, as my website is growing as I type here, there are going to be some serious costs on the server side, going on this way, when I will have 2000 users, I would need 10 web servers, this is not acceptable.
One advantage of lighttpd/nginx or the likes is the ability to serve static files with a very small footprint and little overhead, whereas apache w/o fastcgi will use quite a big footpring even if serving static files.
you'll have to run apache on a different port or different ip and make simple request routing logic in nginx.
Nginx will certainly use less memory than than Apache.
Does it use SQL alot, do you serve more dynamic content or more static content?
regarding alternatives - try your luck on stackoverflow.
This means you will have to configure the server manually, this also means you are unlikely to get any support from your host.
You will be able to reduce the memory usage of Apache by disabling any modules you are not using and running PHP as fast-cgi instead of an Apache module.
I also read about node.js and Express, would these be valid alternatives for PHP?
It highly depends on the "profile" of your website/webapp.
in this way you'll be able to work with familiar environment and benefit from smaller memory/cpu footprint of nginx.
Administering a web server with 2000 concurrent users running forum software is hard.
It works really well, before that i was simply using apache/php with eaccelerator and it was struggeling at 50 requests/second.
It could also the mysql server (if any) that uses all the memory if it's a forum
you can try using nginx as reverse proxy+static content server and still have apache to handle your dynamically generated pages [php etc].
nodejs is really cool and light on memory however you will have to learn a whole new programming paradigm.
Now it might be this is a community site that will tolerate some downtime and that you learn fast but you should bear this aspect in mind.
I went through your situation a few months ago, i also had a rapidly growing website on my hands and did not know that to do, after doing some research & testing i went with the following toolset:
using a lighter option such as the above two, will make my servers being able to handle more users?
Now i am having 300+ requests/second on the same hardware, the server is not even breaking a sweat.
php-fpm enables you to seperate the preprocessing from the serving layer of you infrastructure, paired with APC Caching, this makes for a good performing toolset.
One issue with that will be most hosting providers will give you a control panel to configure Apache but few do that for nginx.
I have started my own website but I soon realised that apache is not the best solution to have: it uses 15MB of memory per page, making a small server running out of memory with something like 200 concurrent users.