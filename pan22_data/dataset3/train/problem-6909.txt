It's easier for me to write this as a script than explain it in English.
For a single hosted site, perhaps it makes sense to shutdown the website by putting up a site closed page into index.html in the root folder, and then doing the changes.
I have an idea that assumes that the data in your three directories isn't changing all the time, as it requires non-atomic moves of those three original directories to copies of those directories.
I'm not 100% sure that this would work, but you could test it.
You can then take one server off line, update it and then put it back on line , repeating for other servers in cluster.
The benefit of this is that your older work is still around until you decide to delete it.
That's not technically atomic, since there's a period when the old directory will be moved and the new directory won't be in place yet, but it might be good enough.
For large websites, doing a site update can be handled by having multiple servers handling requests.
and deploy a /version/23 directory with the same subdirectories.
), and 2) that you can use symlinks (as some web servers are configured to not follow them.)
Then, where the actual file would go (and again, for speed, you'll need a script), you can use a symbolic link so that when anyone goes to the latest page, they get whatever version is current (and it all happens transparently and they have no idea).
Perhaps I'm not thinking this out entirely, but why not do your copy operation to a new directory?
(Edit: Hm, somehow I missed Clinton Blackmore's response above, which is basically identical to what I'm suggesting.
It uses a combination of rsync and mv commands as suggested in other answers.
Assume the three nominal paths are: /pathA/dir1, /pathA/dir2, /pathB/dir3
When it's done "mv" the old directory to another name and "mv" the new directory into the desired name.
If you really do need to keep the website up and running for as much of the time as possible, may i suggest the following:
You'd have to check that 1) you can run scripts (and in such a way that web users can not!
First, the best way to do this would be to change your httpd configuration to point to the new directories and then restart httpd.
Let me know if I need to explain anything further.
I'm not aware of any atomic commands, but if you stage your files and then use a script to remove the first directory and move (not copy) the second, and do it for all three directories, it should be really quick.
I think you are on the right track with a staging area.
[Although, granted, a versioning control system is a better thing to use for keeping older work.]