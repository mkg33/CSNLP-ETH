It would have been great to have an exit criteria too.
It is always better to add them during development.
Your long anagram class might be useful for learning about classes, getters and setters, but it isn't actually doing very much.
What you currently have is messy because it is a mixture of the two.
You may either remove this parameter or assign the value to _words
and another would be for all of the game logic to be included in Anagram, so that, for instance, only the following would be left in the main game loop:
One would be for Anagram only to deal with making up anagrams and checking them, so that your main game loop would look something like this:
Either way, there's not much call for all that getting and setting.
In your __init__() function, you have defined words as a parameter but you are assigning None to _words
Also, import statements should usually be at the top of the file.
As you have already mentioned, please have proper comments and doc-strings in the code.
To reset the values, you may create another function that would only reset the relevant data-members and continue the game further.
You don't have to re-initialize the object and reload the file on each loop run.
You shouldn't usually be having to access an object's properties that much from outside the object; it should be dealing with the complicated stuff internally.
Instead of using an infinite loop while True:, you should have created a bool object.
You may initialize them before the loop, load the files and let the game run on its own.
I see the purpose of while True: is to make the user play the game endlessly.