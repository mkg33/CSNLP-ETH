The displayCard() method makes no sense — why should you pass in suit and value as parameters, which will then be ignored?
The card's identity, therefore, must be determined in the constructor, and it should never change thereafter.
using namespace std; defeats the purpose of the std namespace.
Your comments are wrong: displayCard() is not a constructor.
I'll leave it to you to figure out what the implementation should look like.
Furthermore, it's a bad idea to have the card's identity be randomly assigned in the constructor.
This way when creating a card you are forced to used a valid Suit.
In particular, you should never do that in a header file, because any .cpp file that includes that header will have its namespace contaminated as well.
If anything, it's the ultimate chameleon card: every time you call .getSuit() or .getValue() on it, it reports a different value!
Adding to what 200_success answered, I think it would improve the implementation if you create a enum to specify the valid suits (you can also do the same with the values).
In object-oriented programming, a card object is supposed to represent a card.
How would you create a deck of 52 different cards, if you couldn't instantiate each one deterministically?
Your card, though… I'm not sure what it represents!