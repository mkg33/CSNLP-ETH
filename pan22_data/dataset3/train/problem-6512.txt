As an aside, the term "relation" is also sometimes used for "association", and it's exactly the same (here, the underlying sets of the relation being themselves relations as described above (a.k.a., tables)).
: in mathematics, relations are not about databases, but are something like functions, just more general (please, all you mathematicians, don't start to nitpick now, we are in dba.SE, not math.SE; I am aware that this is the wrong way around :) ).
Which is, when using a RDBMS, completely trivial and irrelevant.
It is wholly abstract and has nothing whatsoever to do with relationships between people or what have you.
I.e., this would not be a valid function: (1, 2), (1, 3), ....
You have already accepted a very long answer that has to say a lot about databases, but let me answer the question you actually asked:
Remember that this is mathematics, so much more abstract than database stuff.
Because a table is a concrete instance of the mathematical object "relation".
In a RDBMS, the rows of a table simply pick out the subset of the cartesian product of all possible combinations in those columns.
Let's see what Wikipedia has to say about the term "relation" (in mathematics, not RDBMS), and then translate it to databases:
But since Computer Science, including relational databases, does have its roots in mathematics, we are blessed with the term "relational" here.
A function like f(x)=x+1 also can be expressed as a set of tuples (1, 2), (2, 3), ..., but it can only have every number once, on the left hand of the tuple.
But the latter would be a valid relation; i.e., you can have a Bob in New York and a Bob in Hollywood.