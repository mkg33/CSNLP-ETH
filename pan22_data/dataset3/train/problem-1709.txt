It's seems the easiest way of doing it, because it does not involve repartitioning, dual booting, losing data; you also get a sense of how the OS would work if it was really directly installed on a PC.
That way you can go back to exactly how things were befure you started tinkering in the even that something goes wrong.
Wubi is a good option if you just want to see what Ubuntu looks like without doing anything serious.
Oh, and one last thing, when you install Ubuntu, it will be set as the main OS.
But then again, if you want to learn about coding more, get something that will require you to use the terminal and commands more.
Another great thing is that you can work in both operating systems at the same time; it was very easy to just switch between XP and the OpenSuse that was running in the VM when doing development.
You won't need to partition your hard drive for Ubuntu, the installer will do it for you, making it much lesser stressful to do.
Furthermore, remember that if you remove Ubuntu, make sure to remove GRUB, because otherwise you won't be able to boot.
But it isn't worth it for me, as Ubuntu recognizes it with no problem.
As far as backing up your hard drive specifically - I would strongly recommend you look into an imaging solution.
I would recommend Ubuntu if you want some-thing user friendly.
An image will capture you computer exactly as it is, and allow you to restore it to the point later.
Yes, you can partition a hard drive that already has an OS on it.
Do some online research about partitions and what they are if you would like to feel more comfortable partitioning your drive, as you can lose data.
I am rather partial to the open source (linux based) Clonezilla.
Another would be to back-up the files to a portable hard-drive.
Look up some GRUB info and find out how to set the default OS and work with the list of options for boot you will be given.
One option would be to create another partition using a free download-able service (find one at downloads.com) and copy all you files to the back-up partition.
It is always possible to have a whacky or less supported piece of hardware which does not have a driver supplied in your distribution, although this gets less and less likely with more popular, personal user oriented distributions such as Ubuntu.
Have you considered running a distro of Linux in a VM?
I still can't get CentOs to recognize my network card, which is a drag because it might be possible (and relatively easy) to find the driver online if I were already connected to the internet.
But seriously, you'd be surprised how interoperable things are these days.
This isn't 1997 when all peripherals worked for PC or mac but not both.