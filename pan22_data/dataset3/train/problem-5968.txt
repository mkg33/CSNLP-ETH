The default permissions are defined by the umask parameter in your shell, your FTP server or in your PHP.
If the web server access to your files with a www-data user, you can change the group or the other to access.
It depends how you configured PHP, FTP, your operating system and the permissions control system.
So is allowing direct access to (user-) uploaded files.
First, permissions have any effects on performance.
The right ones - not possible to be more specific.
You should put the most restrictive permissions you can for security reasons.
Nor have you given any indication of what the ownership of the files/directories is - in the absence of this '0755' is totally meaningless.
To be more precise, the permissions are checked every time, what they could be defined, without performance limitations.
You don't give us the information, but the web-server need to write in these dirs ?
But you've made no mention of how (and more importantly by whom) the files are deployed/updated.
Allowing executable files within your document root is dangerous.
You can't design a security model without knowing both what objects should have controlled access and what users require what access.
If your web server access to your files with your account, change your dir access to 700.
But there are other ways of controlling the interaction between PHP scripts and files (suPHP, safe_mode).
Implicitly, all the files must be readable by the webserver uid if PHP is running as the webserver uid.