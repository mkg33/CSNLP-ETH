You can even look at his multitexturing algorythm based on terrain heights.
For this, you have to send every texture you want to use to the pixel shader, and there decide from some per-vertex weight factor how much each texture will add its value to the final color.
You should set the weighting while generating your heightmap, and the weights should normally add up to 1.
Now I want to implement more textures (like diffrent textures depending on heights ect, Possibly a structure that makes it easy to implement diffrent coditions of where to use certain textures)
Then in pixel shader sample your 4 textures into float4 col1,col2,col3,col4 values.
Could anyone point me in the direction of a good guide on how you would implement something like this.
The logic, which you generate those should be trivial for you, but if you are having problems, then I recommend Riemers' tutorials which is XNA, but it can be easily implemented.
I got a full functioning heightmap loader, however I can only use one texture.
For example, if you want to use 4 textures, you add a float4 value to your vertices (I'd call this weight).