The -p restrict's the ps output to the process ID of the parent.
If the execution is finished there's probably not much left to look into.
The -o lets you specify your own output, and in this case I have args= which (for me gives me what I'm looking for).
I was wondering if there is a way to trace where a command was run from in Linux.
Once you have the $PPID you might also look in the /proc/$PPID/ "dirs" to get more detailed info.
For example, if I call a script, is there any way to trace where it was called from, like started from a program or another bash script.
If it is being executed, you might be able to get enough information on the caller from the parent process id(PPID) by simply using ps.
If your script is written is bash, there is a built-in variable called $PPID (short for parent's process ID, I guess) that you can use to find out who called your script.
If the process is still running then you can use the hierarchical visualization (called also forest or process tree) offered by the ps command.
The possible upgrade is that instead of getting lots of info and then trying to parse it out, you're only asking ps for the info you want.
"Was run from" is rather difficult I would think unless there is some logging in the executable that was run.