But as you see things are not so clear, as now you use much memory to allocate a List and you have a new case to handle.
If it is not important - simply use the list function.
And then you would have one method getPathResults(Query query, PathResult pathResult)
Without a bit of more context I could just assume your class is a wrapper of the database, and it's used inside your code to perform queries just avoiding the database dependencies.
As Mario already wrote it is hard to make that code less duplicate without increasing complexity, for example you can do it like this:
I think your code is pretty clear and straight forward.
That a good thing for whom have to read and understand it.
All the Exception handling stays in the list function.
Is it realy important to get a single result and not a list?
If it is, an exception should be thrown when you get more than one result and you asked for only one.
What you could sacrifice is just a bit of memory, but wrapping the getMultipleFilePathResults(Query query) in your getSingleFilePathResult(Query query) like:
Made that code less duplicate is pretty hard, without increasing his complexity and readability, I think.
And if you just need any of the results in the list, than write a method that gets the list and returns the first one of the list.