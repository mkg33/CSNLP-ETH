The first 12 minutes of this CS50 lecture cover the the Volkswagen/EPA scandal from 2015 and mention Ken Thompson's lecture.
Note that ethical issues can be simple or complex.
Even something as simple a accepting buggy software can have ethical implications and such lessons can be taught in early courses.
I am reminded of the Second Formulation of Kant's Categorical Imperative:
In terms of integrating ethics, the way to start in my mind is discussion.
In my mind, while I wouldn't consider myself Kantian, I do think his point about means and ends is essential.
This, then leads to your question: it is ethically important for everybody involved in the creation of software systems to further these things.
This idea of trust must be imparted to students, and it must be emphasized that the world of software engineering and computer science in general is not in a moral vacuum.
Unbound technologists, especially if amoral, can be very dangerous to the earth and its inhabitants.
I would begin with practical, everyday topics which every student can relate to, and which are (should be) absolutely practically relevant in todays world from day #1 for every developer.
Many problems in the world have been caused by scientific hubris as well as the Fallacy of the Last Move, a concept from Game Theory as it applies to Arms Control and other strategic thinking.
A general discussion of Computer Ethics is: https://plato.stanford.edu/entries/ethics-computer/
I.e., not to be laizzes-faire about them, not to prioritize them lowly when budget or time pressure arises, not to actively violate them; on the other hand, to constantly remind/teach the stakeholders, who may not have an understanding of these matters, and so on.
So, it seems that future Software Developers need some training in ethical concerns.
The latter is in the end straight manipulation no matter how well intended, and something people should if at all be trained to guard against.
The moral of the story here is that ethics must be discussed with students as soon as possible whether it is a high school AP course or an introductory computer science course at a university.
It is essential that awareness is built right from the beginning that software is everywhere and there needs to be an ethical code to guide that development.
Discuss implications of new apps students download.
What, to you are the most important issues and where in the curriculum should they be taught?
Similarly, in AP CS Principles, students, as a part of the Explore Task, have this on their rubric for the assessment:
part of the curriculum ... but don't try to "train" people towards any ethical viewpoint.
It does no good to address a particular issue, say data privacy, without first contextualizing it within a larger ethical system, one that sees each user as an end, not a means, and as someone who is placing trust in you the developer.
The AP Computer Science A curriculum outlines the following requirements under the major topics of the course:
I would ask the pupils to come up with their own, they should be able to find a lot of different things.
In my mind the first and most foundational lesson to impart is this: software, computers, technology -- these things are more about people than about code.
There is a trust from the end-user, whoever that user may be, that must not be violated.
I'm going to begin by quoting Ken Thompson's Turing Award Lecture "Reflections on Trusting Trust" (link).
At the other end of the scale is the question of how much a person owes to their employer vs to humanity as a whole.
), and maybe make the legal situation (especially international law!)
You should easily be able to find an abundance of concrete examples, let me give you some that come to mind:
Raise awareness of the issues, discuss historical (Therac 25 is an old but highly interesting case of software bugs directly causing people to get hurt) and current cases (EU/US safe harbor and followups - there is so much potential to go in-depth about what data protection means and what the risks are!
Maybe based on current newspaper-level discussions.
The kinds of things that people with technical training can do have societal impacts, both for good and evil.