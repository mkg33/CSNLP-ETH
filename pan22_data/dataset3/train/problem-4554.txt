Instead of filtering out elements that do not correspond to the biggest number, we could just keep the one that do correspond to the biggest number.
I highly recommend Ned Batchelder's talk "Loop like a native" about iterators.
The last list comprehension can be quite expensive because for each element x, you may perform a look-up in the list.
A proper solution would involve a unit-test framework but for the time being, we can go for the simple:
Before going further, it may be wise to add tests so that you can easily be sure that we do not break anything.
Parenthesis are not required in the return statements.
Also, the temporary variable is not really required.
Also, we could perform the sorting on the filtered list so that we have fewer elements to sort:
Using the name list for a variable is legal but usually avoided because it hides the list builtin.
One of the most simple take away is that whenever you're doing range(len(lst)), you can probably do things in a better way: more concise, clearer and more efficient.
Maybe get_best_elements (even though I am not fully convinced).
The new_list could be defined with a list comprehension.