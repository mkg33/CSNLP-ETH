One idea: It's related to the memory-size of 2 GB which blocks the internal memory management until it succeeded.
If Windows is under memory pressure (not enough RAM), it starts swapping out data from RAM to the harddisk/page file.
When you try to interact with the GUI it has to load it back from the harddisk, which is very slow compared to RAM and I have seen cases, where it takes more than 15 minutes to at least partly unfreeze the desktop.
The exact algorithm what data is swapped out is very complex but in general it is the least recently used memory which is not locked from swapping (some kernel pages and hard disk drivers and so on are locked).
I am assuming that Windows is able to use the page file (it is not disabled and there is space left in the page file) and by freezing you mean it takes nearly forever to show reaction like minutes.
It can even swap out parts of explorer.exe and some other important GUI processes or firewall/antivirus.
In Windows 8 you can access it with taskmanager->performance->ressource monitor but it it is also usable in older windows systems.
That's just the way every other Windows computer works, from what you've said.
In Windows 8 you can even see which process and which file the culprit is.
I would expect that my process hangs but why does it happen with the entire OS?
I thought Windows (a user-process) does never page out memory related processes/threads/os-memory.
If you want to further investigate, I recommend using the performance monitor.
When my machine uses already 15 GB of memory and my application allocates another chunk of 2 GB memory I run out of physical memory and swapping (should) pops in and uses the available disk-space.
After reading the Q and comments, I think I can answer...