If I understand this correctly, if a FK relationship does not have an index that matches every column in some needed index, there may be some indexes that have some of the columns.
(Looks like this blogger lifted this from SQL Server Central's The Ultimate Index-Less Foreign-Key Finder (Oct 15, 2009)) The blog says the following:
The March 1, 2013 Blog Post in Carlos Klapp's Code Blog entitled Foreign Keys without Indexes has the Stored Procedure called Util_FKsWithoutIndexes which looks for foreign keys that does not have proper indexes for FK relationships.
If there are no indexes at all that can support a FK constraint, then the "Partial Matching Indexes Count" will be zero(0), or at least will not increment this count.
After some more googling, I managed to come up with a post that mentions "Partial Matching Indexes" and Foreign Keys
For example, if a FK relationship has three columns (a,b,c) but there is no index with those same three columns, there may exist an index that has (a,b) or (a,c) or (b,c) and may help with queries but will require some index scans to rows with the missing column.