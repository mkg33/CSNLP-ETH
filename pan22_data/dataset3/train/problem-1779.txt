I'm trying to generate an image where black dots are arranged in a blue noise distribution on a white background.
Strangely, I never get that "nice concentric rings" DFT frequency amplitude that i'd expect and see in papers regarding blue noise sample patterns.
I know that there are other ways to do this, one of the best being "Fast Capacity Constrained Voronoi Tessellation."
Is there some "sweet spot" for the number of candidates to use based on image size and desired sample (black pixel) count to get the best result?
I've implemented this and have used it to put 455 black pixels on a 64x64 image, using various candidate counts.
This algorithm works by generating $N$ random pixel locations as candidates for where the next black pixel should go and chooses the candidate which has the farthest distance to the nearest black pixel.
[Hongwei 09], but I'm using Mitchell's best candidate algorithm.
Looking at the DFT (frequency magnitude, not phase) of the results, I'm seeing some unexpected frequency data.
Manually hunting between 100 and 1000 samples, it seems like 400 is pretty near optimal.