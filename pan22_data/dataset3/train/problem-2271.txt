Most systems can read NTFS, but a few cannot write to NTFS.
I'd stick with FAT32 and use a ZIP utility that splits its files into fixed-size (i.e.
I recently found myself researching this very topic, and I wrote a script to automate the process of formatting in UDF.
The only downside to UDF 2.01 is that there is no native write support for Windows XP (at least without third party utilities).
However, writing with Windows 7 and later are natively supported.
There are several limitations to FAT32 but it is the most recognized and works on all the systems mentioned.
FAT32 can't handle files larger than 4GB, so there's your answer.
UDF revision 2.01 is likely the way you want to go.
If you can get by with only files smaller than 4GB, then go with FAT32, as it works the best on the most OS's.
use ext2 and put the drivers to access it from non linux systems on a device partition in fat 32 not only will you have >4g criteria sorted but more important you'll have file atributes
less than 4GB) chunks - messy and slow I admit but if you put the executables on the same disk for all the OSs you need and maybe even write and include a few small scripts to make it easier you'll have what you want.
Out of the box, I'm pretty sure that Windows XP can only support FAT32 and NTFS.