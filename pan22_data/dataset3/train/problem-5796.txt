Either the user is no longer available (the HUP signal, whose original meaning was that the user was connected to the computer through a modem and the phone died), or the user doesn't want to be bothered (the default TERM signal and its more violent siblings QUIT and KILL).
That's up to how the individual program responds to signals.
Many applications will try to save unsaved work somewhere if they receive the HUP signal, though.
You can send this message from the command line with wmctrl, e.g., wmctrl -c WINDOW_TITLE_SUBSTRING.
I think it depends on the application, but kill -2, -3 or -15 might be what you are looking for...
If you do a kill with a 15 (SIGTERM) a program is supposed to do cleanup then exit.
(Or save the quoted script in a file and osascriptscript appname.)
Signals that terminate an application aren't meant to allow the application any further user interaction.
Doesn't look like it, though you can look check out the various kill signals available and try them out.
I tried a few but they all seem to just interrupt the process instead of sending a quit signal.
A different option for Linux (and other unices) is to send a notification to the window, rather than the process: the _NET_CLOSE_WINDOW message tells an application to get rid of a specific window gracefully.