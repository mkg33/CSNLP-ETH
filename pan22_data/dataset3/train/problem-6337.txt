All other supporting types implementing the changes listed in the summary above.
 - I usually don't include parameter checking in proof-of-concept code
switch statements are nice as a way of avoiding long chains of if (){} else if(){} .... else {} statements.
 - I tend to (over)use System.Collections.Immutable because these classes have very convenient APIs
This is how I use it with a simplfied commad-line syntax:
 - is var x - I like this expression so I often use it to create inline variables
I'll post another question when I made some more signifficant changes and for now I'll just summarize your feedback:
: - I use this only for single expressions; who would want to debug a giant ternary; I prefer if/else with multiple conditions
Switching on a bool doesn't make much sense, as is much more unclear than using if statements.
 Conventions I might use some unusual conventions in my code and I think it's good to know them so that you're not surprised
 - beware of var str = default(string) because I never define variables explicitly; this is not negotiable ;-P
 - I use local functions to encapsulate small expressions