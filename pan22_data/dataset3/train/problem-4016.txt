That equates to somewhere around 330 memory faults per month.
All computer components are built to tolerances and have certain inbuilt "error rates".
If you mean cause the software, or operating system to stop functioning correctly, or stop all together then that is more possible.
If you care about running a process for a long period of time then you'll need to keep it cool (as temperature can also affect bit-flip action), make it as rock solid a system as you can (premium components) and make sure that wherever possible error correction is in use.
If the equipment has a weak point, you may well find it.
As an example it is not unknown (though it is relatively uncommon) for bits to instantaneously "flip" in DRAM modules and as a result ECC memory is recommended for high-uptime servers as it can correct the data "in-flight" before your program has anything to do with it.
system cooling effectiveness.....it's a 'try it and find out' situation.
Also, if your program is using 100% of the CPU, this could also indicate that your computer may not be up to the task, which could cause the program itself to fail.
There's too many variables to give a definitive answer - yes, processor overheating is a possibility, but it also depends on the robustness of the code, its data management routines (garbage collection), robustness of the system board, memory timing, power stability.
When you say crash, if you mean physically damage, then that is highly unlikely - It would really require there to be a significant hardware fault, and in that cause your computer would likely be heading for a failure anyway.
If it's all up to spec though, it shouldn't be a problem.
In a study by Google they found that in DRAM memory sticks there were up to:
If you genuinely have the CPU nailed at 100% then there will be very little opportunity for your operating system to perform the little house-keeping tasks it would normally run periodically and so over time your computer could start to malfunction.
Computers do crash, even when not overloaded, overloading them makes it more likely but not certain.
Running a computer on a heavy duty cycle for a long period of time will increase the chance that you hit one of these errors during the course of your program running.