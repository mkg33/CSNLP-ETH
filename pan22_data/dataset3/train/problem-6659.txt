In order to keep the quality similar to the original video, you will need to multiply the original bitrate by 5.
This command took the input file %1 which was 30 fps and converted it to 24 fps, and then piped the decompressed frames and decompressed audio to another instance of ffmpeg which converted them to 25 fps in mpeg2video and mp2 audio.
You will need to do two conversions, which I recommend to be done in two passes each one, in order to lose less quality possible though the whole process.
The obtained video after this two conversions will not have the same quality of the original, but the result will be the best you can get using ffmpeg without doing any change on the original time of the movie and without distort the audio.
In this case, the lower number that is divisible by 30 and also 25 is 150.
The second step will be to take the result of the first conversion and convert to a video with the frame rate = 25.
The audio tracks can also be copied for this step.
There is an unorthodox solution but apparently can give you the expected result.
Well, the following I tried based on examples I found on google, and it seemed to work.
So, do a first conversion changing the <-r> parameter to 150.
It didn't solve my problem, and yield smooth video, as I thought it would, but it did what my original question was aimed at.
For this conversion you can use a bitrate 6 times smaller than the first step and the quality will be similar.
This is needed because the result video will have 5 times more frames per second than the original one.
For the first step you need to convert your original video to a framerate that can be divisible by both of framerates (the original and the target).