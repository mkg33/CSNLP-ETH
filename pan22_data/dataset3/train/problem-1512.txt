If I put the chaining in, then I have to duplicate a lot of code.
I would prefer for one server to get classes A, B, and C, another gets B, C, etc.
Here is an example of a single class that pulls a ZIP file from a Web Service and then unzips it into the target location:
Update: I filed an issue at https://github.com/msutter/puppet-dsc/issues/1
It seems like one puppet class is getting information related to a different puppet class, as if it generates its MOF and then executes a different class' MOF by accident.
Every class that uses a DSC resource generates intermediate Powershell/DSC code that creates a file called current.mof in the same directory.
I suppose I can find a way to chain all these resource together with dependency arrows so that they are executed serially, but then that means I can't have truly separate profile classes for each ZIP archive I am unpacking.
NOTE: This is cross-posted from: http://ask.puppetlabs.com/question/16423/is-the-file-currentmof-a-bottleneck-when-using-the-dsc-module/
The msutter DSC module (PowerShell Defined State Configuration) seems to have a bottleneck.
You may want to file an issue here https://github.com/msutter/puppet-dsc