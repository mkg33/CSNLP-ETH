Specifically tree -ifpugDs $PWD should give you what you would like.
I want to do this so that I can grep out what I want, so that when I run the command, I can get just the matching files, their permissions, and their full paths, like:
This will give me a nice format (It also includes the user, group, size, and last date of access, which are helpful).
If typing it is a problem, what about putting what you already have in a function:
However, it is a ton to type, and it is certainly not as fast as using ls with grep.
Is there a faster way to do what I am trying to do than to use find?
I have done a bit of searching online, and I am trying to find a way to recursively list all files with their absolute path and with their permissions.
I can use ls integrated with find and grep to get the output in exactly the format that I want, and I could use something like this:
Simple answer: find -type f -print0 | xargs -0 ls -al
I was looking for the same thing, but didn't have tree installed.
I would prefer to use ls because it is the fastest, and I would type:
But this is extremely slow, I'm guessing because two commands are actually running.
But this doesn't show the file's path, so if I grep'ed the output, then I would see file permissions, but not the directory from which it originated.
If I just use find without ls or grep, then it goes faster, but it is a bunch to type: