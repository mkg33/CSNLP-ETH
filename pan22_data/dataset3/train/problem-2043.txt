You are on the edge of using filestream vs storing images inthe database.
First, you'll need to make sure to avoid filename collisions somehow (perhaps save the file using a file id substituted for the real filename).
I think the biggest decision point will be the performance of frequent small updates.
I would need to know more about the exact nature of your application.
I will have a lot of more reads than writes, but writes wouldnt be completely infrequent either.
All images would be less than 1 MB in size for sure, but they would usually be around 50KB.
Don't store your images in the database, or binary data at all for that matter if it can be avoided.
Store the images in your filesystem and dump a pointer into your database with all the associated metadata (file type, size, date, etc.
See this MSDN article for a complete discussion of the pros and cons of each approach.
I am having a hard time deciding which one would be more appropriate for me.
Second, make sure you won't end up with too many files in a single directory - this can lead to performance issues down the road.
Based on my understanding, there are 3 ways I could do it.
When doing this, you'll need to take a couple precautions.