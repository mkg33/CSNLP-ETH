The run-parts script loops over all files in this directory.
The exact sequence in which jobs are executed will depend on the implementation of your systems' crond.
Suppose I have several cron jobs set up to run at the same time: do they execute in parallel or just one after another?
What order the individual jobs are executed in depends on the schedule you set for them, obviously.
You can use the following methods to run the processes sequentially.
So you can use that in combination with a naming convention (similar to the numbering in /etc/init.d/rc*.d for example) to make sure jobs run sequentially.
(My case is Debian squeeze with cronjobs put inside /etc/cron.d/mycronjobs).
The loose files that some distributions put inside /etc/cron.d/ are scanned for their cron timer settings, since these files follow the normal crontab(5) syntax.
{hourly,daily,weekly,monthly} are run sequentially.
Theres no way of being sure which will start first, and no way in cron to make sure task A has complete before task B starts.
Cron is a daemon (service) that runs continuously; however, it reads crontabs once a minute.
The tasks listed in cron will run in parallel, just as processes usually do.