Also if the data sent across the network is compressed (for example a browser and server with HTTP compression enabled), there will be a measure of this involved.
The good news is that most file transfers do use TCP.
Certainly, but before you get worried, lets get into this a bit more.
I will also note that data corruption in image files will generally either cause a serious problem or be unnoticeable.
Beyond that, it would be dependent on the application to fix errors.
CRC and checksum are two different methods to calculate the data is unchanged.
And that doesn't include any measures built into the application itself, which should be concerning itself with data integrity even when handling data with the the same computer/server.
All of this so far is based purely on the network, but applications transferring data often have some means of checking data integrity as well.
IPv4, TCP, and UDP all use checksum values to help prevent corruption (note: IPv6 does not).
TCP contains a mechanism for retransmission of dropped segments, no normally you experience no data loss when it is in use.
Further some file formats may have some means of validating integrity as well, especially if they are compressed.
Ethernet contains a CRC value to help prevent corruption.
However, it is very unlikely (but yes, possible) to have multiple bit errors that provide both a valid CRC and checksum.
So a single IPv4 packet will have a CRC and two different checksum operations performed on it.
Any single bit error introduced in the data will be detected by both methods.
In all cases, when corruption is detected it causes the data to be dropped.
For instance, most compressed data has some sort of error detection/correction.
So compressed file formats often have some measure of this built into the file.
Only TCP has a mechanism for retransmission, so if TCP is not used, the data is dropped.
It is possible to have multiple bit errors that will provide a valid CRC.
However if UDP is used instead of TCP, if there is corruption detected any any of the three levels (Ethernet, IPv4 or UDP), then the data is dropped and it is up to a higher level process (i.e.
the application, file format, etc) to detect and remedy the lost data.
You are probably just as likely to introduce data corruption when your computer or server is reading/writing data to disk or memory.
The issue comes when you have multiple bit errors in the data.
As I detailed, TCP (as well as UDP, IPv4, and Ethernet) all have ways to detect errors in the data.
It is also possible to have multiple bit errors that will provide a valid checksum.