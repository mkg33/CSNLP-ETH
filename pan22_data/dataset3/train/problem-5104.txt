But since you have a clear separation of concerns in your case, I would make a Car class containing the cars logic: reference to the Field object that the car is visible at, coordinates within this field, direction the car is pointing towards (based on which you would change textures) etc.
Note that I have no experience with making games in Java, and this is just a simple tip following the Keep-It-Single-Stupid rule.
I believe it's a bad idea to put all logic into the field objects, the only reason to do so would be performance reasons.
), and then iterate only over Fields, checking this structure for each field to find all elements that the selected one relates to.
I would continue with this simple architecture while adding houses, dogs, cows and whatever else you would need to place on the board.
Firstly, I believe that there are some conditions needed for the car to appear on the field, and also i assume that you will want to have more than one car in the future.
Store the cars in an array-like structure and on render just iterate over it, rendering cars whenever needed.
If the performance matters, consider storing all of the references to the particular field in one data structure (dictionary of lists?