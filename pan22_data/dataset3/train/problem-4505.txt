SSSD can provide additional features like SSO in offline machines, so you can as example, use SSSD in Notebook Workstations and the users will be able to login through the Single Sigo-On Daemon even without connection with the authentication server.
The primary (situational) advantage of nslcd over sssd is that you can write a custom authz query with parameter substitution:
Otherwise I don't see any reason not to use nslcd, it works fine in my environment assuming you're using a new enough version that it supports nested groups - see the "nss_nested_groups" option (assuming you use them, otherwise you should be fine).
sssd is probably the more "forward thinking" option to go with.
I would prefer an environment with the same software and configuration as much as possible, unless people say that sssd is really better for RH-6 and nscd/nslcd is really better for RH-5.
So it really depends on whether this feature is important enough to put aside the benefits of sssd's consolidated solution.
The last time I checked the sssd docs (within the last six months), there was still no replacement for this capability.
SSSD is available on both version (RHEL5 - sssd 1.5 & RHEL6 - sssd 1.9+)
SSSD is the future and much more powerful than nslcd.
Additional information can be found in the website: http://fedoraproject.org/wiki/Features/SSSD
That said, sssd does not completely supersede the features of nslcd, contrary to popular opinion.
SSSD is the future and  you get Kerberos auth & better compatibility with AD if that's your LDAP server for instance.
I am looking to decide what we should use for LDAP:
There's no reason to implement nslcd and all the dependencies that nslcd requires with sssd in the game.
There's a plenty of AD, LDAP, and multiple authentication backends howtos on the web.
The last option means that RHEL5 machines would run sssd 1.5.