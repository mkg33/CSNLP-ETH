Is there a simple built-in command to do this, or does this require diving into Awk, Perl, etc.
As you can see, you are putting as many - (which in this case refers to stdin), as number of lines you want to merge into one.
First, let's  choose only ESSID lines from the output (and let's add a bit of obfuscation; this part will not change, so it can be ignored):
GNU/Linux command to merge every group of N lines into one line is a paste command.
Let's look at a real example: output of iwlist command.
If you're lucky enough to have no spaces in the input, then
To handle a larger number of lines in a group, you just have to add more -.
At the Linux/Unix command line, I want to turn this:
If there is just 5 input lines, then last output line will be incomplete:
If later we want to add addresses to our output, then the output will turn into alternating lines with addresses and ESSID.
The sample you gave have 3 lines but your topic emphasize on N lines of input, so I would assume that 3 lines is only for illustration purpose, and what you really need is that N lines of input, which could be as much as over 10, which in turn making that accepted bash script unmanageable.
I believe that should be close to what you are looking for.
If the number of input lines is insufficient, the last joint line will be incomplete.
There are simple built-in commands to do this, without diving into Awk, or Perl.
To merge every two lines into one, add | paste - -:
This is not a built-in command, but it is part of the coreutils, so it is installed by default.
http://pubs.opengroup.org/onlinepubs/9699919799/utilities/pr.html
If there is just 5 input lines, then last output line will be incomplete:
If later we want to add a Protocol, Bit rates and Frequency, then the output will be a list of groups of 5 lines eash (address, ESSID, Protocol, Frequency, and Bit Rates).
To merge every 5 lines into one, just add | paste - - - - -.