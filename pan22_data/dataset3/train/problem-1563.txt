You can use os.popen as suggested by the forum or use subprocess module in python to fetch the details from the shell.
There is good tutorial for quick start on subprocess module here.
I would like to use the percentage of CPU load in a program to discover wether or not it has an affect on some other sensors but i need to be able to get that number as an integer in python.
I did check the link that you had mentioned where the methods getRAMinfo and getCPUuse are used to gather the information.
It is a complex and powerful tool which ought to be learned before you can use it in full.
Since you want to analyse the performance of a particular program, the right tool to do this would be perf, which is included in linux-tools package.
The utilization is usually calculated using top/htop commands.
(probably because i understand the SO format but not **traditional** forums) I am using a RPi 2 with the latest and greatest Raspbian.
I looked online and found this which looked helpful but was very confusing.
As you can see, ls was executed in 0.28 seconds, consuming 0.535% of my two-core CPU (so, essentially loading 1 core at 100%).
An average of 0.61 instructions per cycle suggests it's not heavily optimized, and so does the 12% of branch misses.