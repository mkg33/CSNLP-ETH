In the case of codes from algeraic geometry error locators ideal is usually an ideal of polynomial from several variables — that's the place, where Gröbner Bases play central role.
Personally I'm doing my research in the algorithms for computing ideals of error locator polynomials (quite well-known concept in coding theory, especially syndrome decoding).
Following http://arxiv.org/pdf/1502.05912.pdf sometimes grobner basis are used to decide isomorphism (when graphs are encoded by systems of equations).
In the abovementioned volume most interesting part for me is the S. Sakata's description of BMS-algorithm and a survey of its applications for decoding algebraic geometry codes.
The original proof that network coding can be implemented in a flow network uses Gröbner bases.
There is an interesting Springer volume on applications of Gröbner bases in coding and cryptography:
I see the authors use Buchberger's algorithm as a subroutine, and exploit the structure of their problem to prove that the running time is polynomially bounded.
Alekseyev and Pevzner use them in this paper to compute the $k$-break distance between two genomes in linear time.
But this joins the use of grobner basis in refutating CNFS.
The following paper can be seen as one application.
Loosely speaking, that distance is defined as the minimum number of times you need to cut a given genome into $k$ pieces and rearrange them in order to transform that genome into another given one.