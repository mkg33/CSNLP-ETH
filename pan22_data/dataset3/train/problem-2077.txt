You seem confident your users won't enter an invalid value, e.g.
If you want to keep it a method, you'll need to change its name since a method name should contain a verb.
If you don't know at compile time how many times concatenation will be executed, it's a rule of thumb to use StringBuilder.
public String makeTriangle(): In general it is recommended to use the types specific to the language, so string instead of String, int instead of Int32, etc.
If you don't need to expose this biggestOddNumber it could simply be a private field which you set in the constructor public Triangle(int height).
You also did a great job of keeping your main method small and the "business" logic separated from the input/output of the program.
public String makeTriangle(), public int biggestOddNumber(): methods need to be PascalCase.
One small thing to mention in addition to what's already been said.
public int height;: is this supposed to be a field or a property?
Which is a bit nicer because all of our increments/decrements happen in one place.
Right now if height is 10, biggestOddNumber() gets called over thirty times!
cutEnds sounds like a function or a boolean variable (some flag).
If it is a field it should be private, if it's a property it should be PascalCase and should have a getter/setter.
Even if you need to expose it, I'd still advice you to set a private field in the constructor and have a get-only property to expose it.
I think you've done a great job of creating comments that say why, not what.
Don't use verbs in variable names (unless it is a reason)
public int biggestOddNumber(): does this method need to be public?
More worrying to me is that you repeatedly call this, so it is repeatedly calculated, but this is pointless since height won't ever change.
To end on a positive note: I'm happy to see that the Main() in Program is very limited and that you made a separate Triangle class to hold all of the logic.
As you are not limiting the input, consider using StringBuilder instead of string concatenation.
There is no need to assign triangle, just do it in one line: