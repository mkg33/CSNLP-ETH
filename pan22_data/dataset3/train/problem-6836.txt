The alternative, straddling the pixels, can lead to fuzziness or odd color shifts.
Even if the font renderer supports sub-pixel anti-aliasing, it might be better (in terms of legibility or aesthetics) to fudge the font weight so it works out to one pixel, and fudge the exact stroke position so it lands in the middle of a column of pixels.
For example, suppose the thickness of one of the vertical strokes works out to 1.5 pixels.
That said, I'd be willing to guess that the top sample is set at an odd size that the hints didn't cover.
Which means if this font was properly hinted, neither of your samples is necessarily wrong in terms of the font designer's intent.
The bottom sample is the intended weight when resolution is high enough to not be an issue, and the top sample is a compromise, but one made by the designer for this particular combination of font size and dpi.
When the thickness of the strokes within the glyph shapes is near the size of the pixels on the rendering device, compromises have to be made.
Modern font file formats support hinting, which allows the font designer to control how and when these adjustments happen.