Below is the code for my player object's update method.
The range could be anywhere from 0-80 frames per second.
LibGDX uses something called 'continuous rendering' by default, which means its 'main loop' runs as fast as the underlying OS is able to.
As we can see it is operating solely on the delta time for now.
I am capping the FPS to 60 with the below 'main' loop (In LIbGDX the main loop is called render)
How can I add a calculation on top of the delta time to move the player 1 unit in real time regardless of framerate?
As we can see, the player starts at position 0. each cell represents 1 game world unit.
Below shows what is happening with my current code, if we had a perfect 60 FPS the position should = 1, but as we can see it does not because the FPS varies slightly from frame to frame.
My goal is to get the player to move 1 unit (the red cell) in 1 second in 'real world' time using the LIBGDX framework.
In a perfect world of 60 FPS, this would work perfectly but unfortunatly FPS dips will always happen (especially on mobile platforms).