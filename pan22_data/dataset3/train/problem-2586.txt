I just don't know how to connect both of the above using my cross compiler?
Another approach could be to to share RPi local /usr/local/lib over NFS and point the linker to that folder, but I'm not quite sure how effective this could be.
However, I'm a little unclear how do proceed with my cross-compiler when producing OpenCV binaries for the raspberry pi.
There are some different ways to approach the problem.
Another strategy would be to cross-compile OpenCV to have it on your PC.
Do I need to rebuild Open CV 2.3.1 on my Mac but instead of using the g++ that comes with OS X force cmake to use my cross compiler?
I experimented with cross compiling CMake enabled projects a while back by using toolchain files CMake (as reported on my blog here).
I have a cross compiler that allows me to compile code on Mac OS x 10.7 and produce binaries for the Raspberry Pi.
Something like the command you proposed would work.
which produces "a.out" that successfully executes on the pi.
A first hacky way to proceed would be to copy the libraries you built on the RPi on your PC and link your software against them.
Compiling simple "helloworld.cpp" programs works like this: