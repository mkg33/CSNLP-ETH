I was wondering if one could go the other way, i.e.
If you raise the frequency and increase the latency to compensate, it will work if the RAM can keep up with the transfer rate, just not the setup time.
If it's not going to work, if you could explain in rough terms what happens that causes it not to work that would be good.
When writing, it will cause the RAM to move onto the next entry before it has successfully latched the value of the previous entry, thus causing rubbish to be written.
This would increase throughput while holding latency at the same level.
If the frequency is turned up too high, the computer will read bits before they are valid and stable on the output bus, thus causing rubbish to be read.
The frequency determines the rate at which successive entries are read from or written to the RAM.
increase frequency and increase timings at the same rate.
I understand that one can reduce memory frequency and timings equally and the RAM should still run fine.
However, whilst latency is the same, throughput will be reduced.
The latency determines how much time the controller waits before it starts transferring data.
Some useful links for you to peruse as there is no 'easy' answer if you want to fully understand your question...
I also understand that increasing the frequency but not reducing the timing could result in crashes, I'm assuming because the CPU is reading data before it's there and as a result reading rubbish.
My question is whether this is commonly doable, or whether it's likely to not work?
So it's easier on the RAM than just raising the frequency and keeping the latency values the same.