You can work around this with a dynamic DNS service that lets you use private address space.
(I know dyn.com does, for example, but I have no opinion one way or the other on their services)
Create a name for each project, and create a entry on your hosts file with that name pointing to 127.0.0.1 which is always available.
What if you try a batch file that changes the host file (C:\Windows\system32\drivers\etc\hosts ) when you are outside the network and then another one when you are inside?
in your apache conf and run an update client that supports using your interface address (not your detected public IP, which is what most do, but will break for you)
When the laptop gets connected to internal network, all websites works, but when outside of the company network, these IP based url doesn't work even if all the code-base, development environment resides in the local Apache server on the laptop itself.
If you only intend to use one virtualhost you can use the apache default virtualhost.
And then another one to comment it out once you get into the corporate network like this:
How to access websites on the local box (Windows, Apache, MySql, PHP) which are based on IP address assigned by company's internal network which is not accessible to outside.
Then on windows you can always set an IP to which "projecthost" will point to.
Edit C:\Windows\system32\drivers\etc\hosts file and add:
Is there a way to point 192.168.XX.XXX to 127.0.0.1
Have it set up so that when you are outside the corporate network, it adds this line:
Or just simply removing the line should also work.
This way, can keep the apache config intact and just make changes on your laptop.
If you're hosting multiple virtualhosts edvinas provides the answer.