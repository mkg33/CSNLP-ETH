That is done by your PC and the server you're connecting to.
Since it's limited by design to 65K, and the duration of the connection does not depend on it but on the client and server, there's no CPU or memory power that can help it.
My computer sends a GET request to stackexchange.com.
For sending this request, my computer allocates a temporary port for this request, and that's the port where the router will send its response.
All the intermediary routers simply forward IP packets to the destination.
It goes on and on, each router allocates its own temporary port and forwards the request, until we get to a top router that has both computers under its own NAT, the message will be sent to stackexchange's public IP and it will respond to the top router's temporary port, and each router will forward the message back down to the temporary port in its child router until my computer gets the response.
And if it does, I would expect the top router's port allocation to always be in full capacity.
Then my computer will close the connection, and all the routers will recursively free the port.
They do not process transport layer information (ports), except when performing NAT.
My router will do the same: it will allocate a temporary port, to which it will expect to get the response from its router.