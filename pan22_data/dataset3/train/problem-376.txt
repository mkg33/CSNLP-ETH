I had a problem with unstalbe once and I will never run it again on production.
Are there real cases of servers using Debian unstable/testing?
One last thing about the relative stability of the releases.
Testing is ok for a desktop machine you can afford to break for a day.
After a release, testing becomes a little less stable and unstable becomes buggy again.
Use stable and backports instead, and testing if you must.
I've used testing on servers before, but these days backports has removed much of the reason for doing that.
I prefer Debian GNU/Linux as operating system for servers.
The key to apt-pinning is keep it simple and start small.
You can use things like Apt Pinning, backports, or you yourself can backport the specific packages you need for your environment.
I have used several unstable/testing packages, but I don't use testing/unstable.
If you go that route, start with reading the apt_preferences man page.
He then invoked it without any parameters to see the help "the proper syntax would be", but the help never came...
The fun part is that everything has died, but proftpd port was still open.
You can have half-stable half-unstable if You configure it well, but as it was already mentioned - backports solve most problems quite well.
Stable is always rock-solid, and testing is usually as reliable.
I generally tend to think stable is the best choice.
proftpd after apt-get upgrade went crazy and was unkillable.
It usually works fine, but sometimes You can have a bad luck.
It's a little confusing at first, but worth learning.
When there's an impending release, testing gets much more stable and unstable gets a little stagnant.
We tried to kill it and one of my collegues reminded himself about killall5 - the most powerfull kill command on linux.