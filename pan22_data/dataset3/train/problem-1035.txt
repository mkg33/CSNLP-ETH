Of course, practice isn't always this simple if you need to do anything strange.
The usual method is to increase the logging levels.
You may want to use Apache in front of your tomcat and use mod_jk or mod_proxy_ajp to talk to Tomcat.
This will give you the configurability of Apache, with things like mod_rewrite and mod_deflate, that Tomcat doesn't support without you programming it yourself.
Tomcat is not a J2EE container; It is a servlet container.
Theoretically, tomcat should be as simple as downloading and extracting the tomcat tarball, copying your .war file to the webapps directory and then running ./bin/startup.sh.
However, if your developers recommend Tomcat, then Tomcat should do the job.
Setting things to DEBUG and filtering out unneeded classes will help you a lot.
The logging from tomcat and your application may not always provide you with obvious clues as to what is wrong.
5,000 transactions a day is fairly light and a standard install of tomcat should support this without any tweaking quite happily.
Tomcat doesn't come with all these technologies, but it's possible to put them together yourself.
A J2EE container is a servlet container plus a bunch of java standards and libraries which are used for enterprise applications.
I'd recommend reading through the Tomcat documentation and Tomcat: The Definitive Guide
We do 3-5M page serves on a set of 10 tomcat servers without trouble.