This is an interesting article http://www.lockdown.co.uk/?pg=combi&s=articles it details how long it would theoretically take to brute force a password for differnt lengths and symbol sets.
The issue of trying to remember long passwords is easily solved by a combination of character substitution and using a phrase.
If you count the use of rainbow tables as brute force (opinions vary) then for 8 characters, using rainbow tables that include all the characters in the password, about 10 seconds.
The catch is that it takes a long time to generate the tables.
Even something as simple a "#Fr3ddy M3rcury#" is complex enough for most uses, yet is remarkably easy to remember.
So, a passphrase that combines multiple words with seemingly random characters might be a good compromise (perhaps the first 1 or 2 letters of the first couple lines of your favorite song lyric).
20 character password (same characters, same rainbow tables), less than 30 seconds.
I'm less concerned with my gmail account, since brute-force attempts at cracking that password will simply lock the account (and anyone with access to the server would just replace the hash with one of their choosing, not try to crack it).
Consider that an eight-character password may be remembered.
The best passphrase is long (>12 chars) and cryptographically random.
It's a good writeup of why the strength of passwords are the least of anyone's problems on the web.
You might want to point whoever wrote that policy at this blog post from Bruce Schneier.
Mine took about a month to generate on a 3GHz machine processing only at night.