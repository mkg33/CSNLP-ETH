That may not result in the the same kind of blur effect but what about downsampling the image to a small pixmap size and draw it on the screen with linear interpolation.
Used in conjunction with bilinear magnification filtering, the natural result should look blurred.
as time increases, alpha for sprite1 goes from 0..1 and alpha for sprite2 goes from 1..0.
Without shaders, that's pretty much everything you can do.
Currently, I'm accomplishing blur by rendering the object slightly up, down, left, right, and the four diagonals from its original position.
Do the objects need to transition from clear to blurry?
What you've got already is good and the canonical way to achieve fullscreen blurring.
Is there a nice way in OpenGL to blur objects without using shaders?
If you don't want fullscreen blurring, but want to blur 2d sprites on a per sprite basis, you can use mipmap LOD clamping/bias to force your hardware to sample a lower mip level.
The accumulation buffer might give you more power to do more job, if it's available in your platform.
If you want smooth transitions, you can draw 2 sprites with each texture simultaneously and animate the alpha value for each of the sprites.
Failing that, you could use a separate texture for the blurred image and just switch between it and the unblurred texture.
It seems like there should be a much better way of doing this.