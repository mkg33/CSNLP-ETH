But in some cases (for example Simplex algorithm), eventhough the worst-case of the algorithm is exponential, it could work very well in practice.
The $k$-means algorithm for clustering is provably exponential even in the plane, but it works very well in practice.
It has exponential worst-case complexity, but I have a vague memory that it often behaves well in practice.
Modern SAT solving algorithms are able to solve most instances quite fast, even though the worst case running time is, of course, exponential.
Are there any (deterministic) examples to this situatation other than Simplex algorithm?
There's an algorithm for finding mixed Nash equilibria that's similar to the simplex algorithm for LPs.
While I've understood that conflict driven clause learning caused a major jump in the performance of SAT solvers, the later improvements are have often been achieved by a clever use of various heuristics in the algorithms.
We generally call an algorithm "good algorithm" if it's runnning time is polynomial in the worst-case.
Hindley-Milner type inference is EXPTIME-complete, but on the programs people typically write it is pretty close to linear.
In this case, however, the practical speed is more of a result of years of algorithm engineering, rather than that of a single elegant algorithm.