Of course, in the iPhone marketplace, monetization of microtransactions is fairly easy since it's all handled through iTunes and most users already have a credit card tied to their iTunes account.
http://www.learn-cocos2d.com/2010/08/starterkit-price-drop-sales-numbers/
Selling one's source code can be quite attractive.
Here's one that says ads are good: http://www.macrumors.com/2009/05/06/adwhirl-free-ad-supported-iphone-apps-can-very-lucrative/
I'm sure you'll see similar stories coming from Facebook once there's a unified way of purchasing things on there instead of a bunch of different mechanisms.
And it changes your relationship with the customers from many angry nerds to few, grateful, like-minded individuals (few exceptions notwithstanding but the trend is obvious).
The idea is to submit your game to http://www.flashgamelicense.com/ for bidding by sponsors.
You should license only the source code, and not the assets, to avoid spawning a myriad of look-alike copycats.
It's worth noting that Flash already has a community that supports games targeted at generating advertising revenue for portals.
This model clearly works best if you have a big community following, preferably with many committed fans.
The developer of Steambirds had some success with that model, as outlined here: http://www.gamasutra.com/view/news/27924/InDepth_Behind_Flash_Game_SteamBirds_Revenue_Deals.php
One notion to get away from: your source code is not a trade secret that makes or breaks your business.
I won't go as far as calling it an emerging revenue model, but recent 'pay what you want' campaigns have been big successes.
But honestly, those who buy the source code either know better than to make a clone or are not experienced enough to keep up with you.
What are the pros and cons of different revenue models such as ad-supported, freemium, partnerships, merchandising, virtual goods, etc.
More often than not, your game's source code is worth quite a bit to fellow developers.
Monetization heavily depends on the platform, but for the iPhone specifically, freemium (specifically, buying into something that lets you play more effectively) has proven itself to be probably the most viable strategy for games in which it fits.
If possible, give specific examples of games using different revenue models and provide data as evidence (otherwise it could get quite subjective).
A great example is the 'Humble Indie Bundle', hosted by team Wolfire in collaboration with a handful of other indie developers.
Other developers are more likely to value what you do than gamers.
It's also a great source of motivation to always stay ahead of the curve (others may see this as stressful though).
For the most part you sell a lot of effort, lots of insights and expertise to developers who like to get a headstart and/or learn from you.
As far as ad-supported, there are conflicting reports on that matter.
When creating a free game what revenue options are there and how successful are they?
There's probably nothing they couldn't do, it would just slow them down / take them a bit longer to get to what you have already achieved.
You may still be afraid of copycats even using their own assets, in that case specify a "non-compete" in your license.
Quite easily I made more from selling the source code than I had if I had invested the additional 2-3 months to make it into a complete game that would actually stand a chance of making decent sales on the App Store.
And here's one that says ads aren't worth it: http://www.macrumors.com/2009/02/20/appstore-secrets-price-drops-usage-and-ad-supported-models/
I summarized the sales of my Line-Drawing Game Starterkit (not a complete game, but close enough) here:
The more so the more popular your game is and the harder it is for the average developer to replicate your gameplay or parts of it.