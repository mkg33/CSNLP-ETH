That seems to work well with most things as you generally create different resources that have the stage/workspace in the name or, if it's a shared resource, you import it into each workspace state.
This type of resource can't be imported in the state which means if you create it in staging, you have to delete it and re-import it in production.
Next, using production workspace, the resource is not created but terraform read the data of "aws_api_gateway_rest_api.example".
In the following example, a aws_api_gateway_rest_api resource named "example" is created.
Then call a variable depending on the current workspace
However, I'm not sure how I should proceed with API Gateways.
When using this syntax, terraform doesn't get an error using resource that is not created because of count:0.
Itâ€™s recommended to enable versioning for state files.
now once you applied terraform apply your tfstate file will be store in S3
In the first step, CI job uses development workspace, then the shared resource is created.
Terraform starts with a single workspace named "default".
Using the resource, you must specify the resource value as following.
I've seen Terraform workspaces recommended for managing different stages (staging, production).