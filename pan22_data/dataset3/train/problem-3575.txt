I want to have simple 45Â° slopes in my tile based platformer, however I just cant seem to get the algorithm down.
You should check if those flags are triggered at all.
This code does not touch the X movement at all, but that seems to be your problem in the video.
Although this is already answered, allow me to offer another equation: y = mx + b, where y is the coordinate calculated, m is the slope (-1 for down at 45 degrees, 1 for up at 45 degrees), and b is the y-intercept -- the y-coordinate where x=0.
Assuming your slope-tile is at a given position x,y (origin is bottom left as in the image).
For example, an m of pi/3 gives you a slope of 30 degrees.
From what I understand reading your question, you want to calculate the correct Y position, given a X position of the player.
Given these parameters, your players Y-position (y1) would be:
Please take a look at the code and video, maybe I'm missing the obvious?
Then check your horizontal collision detection: you don't want it to trigger on a slope.
This allows you slightly more flexibility; you can change m to calculate a different slope other than 45-degrees.
If you're only dealing with 45 degree angles, then it gets even simpler:
I think you either have an off-by-one error somewhere else, or you aren't setting _leftSlope/_rightSlope flags at the right time.
You have the player position x1 and the width and the height of the sloped tile (u, v).