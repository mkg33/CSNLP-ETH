But in HTTPS, we get this information far too late: it arrives after we had to choose encryption keys.
Only once the tunnel is set up, will data flow through.
This means that the Host: directive (which is part of HTTP, not HTTPS) will only get sent after the secure tunnel has been constructed.
Bottom line: HTTPS cannot choose encryption keys based on the HTTP hostname.
Oh, and don't rail against apache for this "missing feature".
It turns out that (as of this writing) httpd cannot support multiple virtual hosts for HTTPS, so any connections to 443 must be directed to a single host.
Well, since the user Jure1873 hasn't written up an answer, I cannot give him the credit deserved.
So I guess httpd was just silently rejecting the configuration that attempting to run a virtual host for HTTPS.
HTTPS is all about setting up a secure tunnel between two points, and has nothing to do with HTTP.
It is the Host: header which tells HTTP server which virtual host is being accessed.
You see, when you connect to port 443, and start an HTTPS session, all that's happening is security negotiation.