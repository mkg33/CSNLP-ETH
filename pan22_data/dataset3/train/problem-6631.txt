For this post, we'll assume my game is multiplayer chess as it essentially requires the same functions.
1) Main server to handle login / match making (which regardless of user numbers should be a fairly easy task)
changing connection would reduce the load even further and as the two servers won't require communication between them, should be fairly simple)
They get 30 seconds timed by the server per turn with 6 players in each game and however many spectators (probably very limited).
2) Start new Node servers for each game that close when the game ends.
User logs in to the server and requests a game - the server provides a simple matching service and once done, they start the game.
I'm planning on hosting on Amazon AWS and am well aware that the chances of my game even warranting this level of detail are probably nil but I'm taking this as a learning opportunity.
would the user connect to the main server still and the requests just be passed to the new server or would the user change connection to the new server and then back again when done?
I'm not entirely sure how this could be implemented yet.