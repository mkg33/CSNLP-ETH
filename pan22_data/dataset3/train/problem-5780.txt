After changing the client's computer (but not the printer, or the Java program), the program does not finish the task till the card is ready, it is blocked until the last second.
Maybe some kind of parallel port buffer is too small?
It seems to me that LPT1 has a different behavior now than was before.
I've checked BIOS for parallel port settings: The parallel port is set to EPP+ECP (but also tried the other two options: Bidirectional, Output only).
The Java program sent all the bytes to the printer and after sending the last byte the program was not blocked.
It took an other minute to finish the card printing, but the user was able to continue the work with the program.
Another thing to try if possible: Right click the Java program, go to the Compatibility tab, and set the Compatibility mode to Windows 98/ME, or Windows 95.
I have a legacy Java program which handles a special card printer by sending binary data to the LPT1 port (no printer driver is involved, the Java program creates the binary stream).
if yes, you could create a new thread and let it finish it's job in the background so that the ui becomes responsive again.
The program was working correctly with the client's old computer.
are you sending the data from the main (awt) thread?