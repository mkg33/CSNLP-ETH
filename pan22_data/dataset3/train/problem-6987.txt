Depends on the job spec, if the company have set out the requirements for proficiency in C++, then you're gonna want to have some decent C++ projects in your portfolio that you can show off.
It really depends on the games company, what they're after, what the role is, etc.
Whilst it is very good for a programmer to be competent in many different technologies (and desirable in some cases), if you're looking at a specialist role I'd expect the potential candidate to focus more of their submitted portfolio to the specialism (for example, if you're applying for an AI role, I wouldn't really expect a whole portfolio full of awesome physics demos).
At the end of the day, it comes down to experience.
If they specifically ask for UnrealScript examples, then you'll want to have some UDK samples to show off.
I don't know if the calculation of what can be more easily learned would be the same for other companies, but I do know that we weren't the only UE3 developer to almost completely forgo UnrealScript; and more to the point, there are far more developers out there who aren't using UE3 than who are (and any way you slice it, virtually all of the studios using UE3 are also using C++) - so if the question is 'what skill is more likely to make me employable as a programmer in the games industry?'
Since programmers needed to be able to shift specific roles over the course of a project and slot in as needed (particularly during bug crunches), carrying UnrealScript-specific programmers would make next to no sense for us.
In that case if you have experience in X and they're looking for somebody who can do X, you'll be bumped to closer to the top of the queue.
That being said, not having any C++ experience can be a red flag companies doing at least some C++ work, as "getting pointers" is pretty fundamental.
Both skills are good to have, whether or not a company will prefer one over the other depends on what position(s) and skill set(s) they are looking for currently.
Other companies look for targets of opportunity and realize that learning new software and languages is easy for any mid/senior programmer worth his salt and would fit in with the company for other reasons (i.e.
To expand on this a bit: while we were using the Unreal Engine for our titles, only a small fraction of the game was written in UnrealScript, for a plethora of reasons that I won't get into here.
It's really just a matter of how much time the company is willing to spend on training/learning for a new coder to become familiar with whatever tech they're working on.
Meanwhile, the implicit consideration was that coders with solid C++ knowledge could pick up UnrealScript relatively straightforwardly (indeed, I don't think more than one or two people on the devteam had any experience with it before starting the project), whereas someone whose only skills were Unrealscript would likely have a harder time learning all the ins and outs of C++ and a larger codebase.
A game made in C++ demonstrates the developers C++ skills more than a game made in some other fashion, but just because something was written in C++ does not mean it better demonstrates a developer's overall ability, nor does it necessarily demonstrate deeper knowledge about anything.
A good coder is a good coder regardless of their specific background.
Speaking as a programmer (to be more specific than 'developer') at a company that has used UE3 for multiple projects, I can emphatically say that we would consider C++ knowledge essential, and a candidate with experience in the UDK but no C++ coding knowledge would almost certainly not be considered for a programming position.
Code your own little engine in C++ and you'll learn skills that are relevant everywhere.