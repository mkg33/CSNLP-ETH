If you buy into to typical MS marketing they will tell you that when you look at the TCO of a solution the cost of the OS is a very small amount.
You should be recommending whatever is the best fit for their particular application.
What you recommend is not a simply "how is the cost" decision, because even at SPLA costs the cost of the software is pretty indifferent - unless the start is a lonely server doing nothing and not being maintained (which incidentally is what most people think a startup is).
http://www.microsoft.com/bizspark/ - basically 100 USD for three years, post paid.
Proprietary software means bureaucratic hassle; free software means technical problems.
http://www.microsoft.com/hosting/en/us/licensing/splabenefits.aspx
Your question isn't exactly clear if you are talking about a Web service or managing client PCs:
Once you start paying people (as in human bodies), the advanteage of FOSS is pretty much out of the window.
That said, Linux isn't necessarily free you may still want to purchase support from a Linux vendor such as Redhat.
I have both FOSS and Windows Web servers; I chose based on what the programming department is building.
Take everything into account at the time of your recommendation and make what you feel to be the best recommendation to your client.
I can manage technical problems, but I wouldn't touch administrative problems with a ten foot pole.
If they want a PHP/PERL/Java/Python/etc solution they should go for Linux.
I hope to get rid of the last proprietary tools in my belt soon now, and it will be a Damn Good Thing.
I hope youa re part of http://www.microsoft.com/web/websitespark/ - otherwise you waste money.
My opinion : I'm using less and less proprietary software every year because most problems with it are license-related.
The up-front licensing cost of a Windows web server will pretty easily disappear down the road if you can manage it or develop to it in a fraction of the time.
If the computers are mainly Windows boxes then go for a Windows server, if they are mainly Macs then go for a Windows server (seriously), if they are mainly Linux, go for a Linux server.
If they can code in .NET in even 90% of the time, it only takes a few hours at $50/hour to pay for a $500 (list price) license.
Because 3% or so higher costs total are not necessarily going to make or break you - strategic decisions are not that simple.
As Jon says, look at your required technology first, then at your available skill sets.
So if you're a technical guy, a programmer, OSS is an immense relief; if you're some manager or bureaucrat then proprietary means "stuff you understand" and insurances.
Well- if you dont hae Microsoft Select your purchasing manager should be fired ;)
And no, sorry, just beacuse you use FOSS you STILL have to pay programmers.
Lets face it - if your clients want an ASP.NET/MSSql solution they should go for a Windows server.
I want to Get Things Done, not paper-scratching...