That is, each layer wraps the stuff it received from the layer above and carries it with professional disinterest as to the contents.
If the server is programmed to send something back, UDP doesn't care.
Well, the router world send the packet containing the trap message to the server.
UDP delivered its packet, now it's going to the pub for a pint.
DNS is a stupid example to show someone the difference between TCP and UDP.
Think of UDP as sending a letter regular postage, and TCP as sending it with tracking numbers and notifications on delivery.
After a certain timeout period, it would then send the packet again... And again... And again... Until the server finally responds with an ACKNowledgement packet.
You may want to review the OSI model, keeping in mind that each layer encapsulates the one above it.
It doesn't care about the data packet that the server may (or may not) need to send back.
TCP will deliver its packet and return with an ACKnowledgement, or die trying (more or less).
When a router sends an SNMP trap (an alert such as "Hey, I've just rebooted, thought you should know") to the SNMP server via UDP it does just that: it sends the packet to the server and that's it.
Keep in mind UDP and TCP are just delivery methods, they don't give a damn what's in the packet or what the application receiving it does with the packet.