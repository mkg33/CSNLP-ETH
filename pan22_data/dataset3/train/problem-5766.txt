If the checksum file is signed by you, then recipients know that it is the correct checksum file for the distributed software.
By default gpg uses compression, but if no compression was used then the original file is almost the same size as the .gpg file (a test with -z0 only added about 80 bytes).
How can I get the size (in bytes) of the original unencrypted file, without actually decrypting the whole encrypted file?
This is a common practice used when distributing software.
It should take only a few seconds for the verbose data to get printed to the terminal (stderr), so just press CTRL + C afterwards to cancel the rest of the decryption.
I have a large file encrypted with GPG and I also have the key to decrypt it.
After decryption starts you'll see the info you want in the line that starts with "raw data", as in:
If the checksum verification passes, then recipients know that your software has not been modified.
I urge you to ask the person to give you the checksum file.
Normally gpg doesn't tell you the size of the decrypted file, but since you've got the passphrase you can start to decrypt the file using some extra verbosity (with at least two -v's, or -vv), only throw away the decrypted data by writing it to /dev/null with --output, all together your command might look like