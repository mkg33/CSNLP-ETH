In this case, the system analyzes a script header and creates/removes symlinks on it's own.
this is necessary for sequential and parallel execution.
For instance, in SLES 10, we have in /etc/sysconfig/boot:
If it's true, should we analyze whether parallel running is enabled by checking /etc/sysconfig/boot?
In first case, we should care about symlinks ourselves.
It works fine if OS doesn't provide parallel script running.
What's the best practice for installation/uninstallation Linux application that covers both parallel and sequential system startup?
If parallel running is enabled, we need another solution.
If it's true, how to organize installation/uninstallation of our application to cover both parallel and sequential startup script running?
It looks like we should behave differently when parallel running is disabled or enabled.
when using insserv, you can also add dependencies to your script header so insserv knows when to start and stop your script in a special runlevel.
It looks unreliable because in different Linux distributionsit could be different location and different parameter.
We develop a Linux application to work on different RedHat/SUSE distributions.
As far as we understand, we have to register our script with insserv utility.
This application (namely, daemon) is expected to be automatically run at startup so we place our startup script in /etc/init.d/ directory and create symlinks in runlevel directories (../rc.d/rc5.d/, for instance).
If a user removes our application, our uninstall script removes all our stuff including symlinks.