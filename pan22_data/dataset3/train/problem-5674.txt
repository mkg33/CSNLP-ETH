So for PNG to JPG, you'd change the extensions and do one extra thing to deal with alpha channels namely setting the background (in this example white, but you can change it) then flatten the image
Kinda late to the party, but just to clear up all of the confusion for someone who may not be very comfortable with cli, here's a super dumbed-down reference and explanation.
Keeps all original png files as well as creates jpg files.
Convert all png files in all subdirectories, put all of the resulting jpgs into the all directory, number them, remove original png files, and display output for each file as it takes place:
for i in $(ls | grep .png); do convert $i $(echo $i.jpg | sed s/.png//g); done
Now here's some goodies for the people who are comfortable with the cli.
This is what I use to convert when the files span more than one directory.
The - format option specifies that you will be changing the format, and the next argument needs to be the type (in this case, jpg).
If you want some output while it's converting files:
The concept is you find the files you need, strip off the extension then add it back in with xargs.
Lastly, *.png is the input files (all files ending in .png).
Convert all png files in all subdirectories and give output for each one:
I don't know about other shells, but the only difference would likely be the loop syntax.
You will end up with file names like image1.png.jpg though.