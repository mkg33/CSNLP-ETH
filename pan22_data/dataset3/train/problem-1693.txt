Box2D is the popular choice for physics in 2D games.
So Lua and Python would be my first choices any day.
One game to name that isn't released yet that we're expecting new videos on soon is the http://elysianshadows.com/ project which uses OpenGL accelerated SDL, for 2D.
Box2D, Torque 2D, ODE are all great choices for physics, ODE though it's recommended to be outdated and is technically no longer under construction officially, was used by the game World Of Goo.
And finally, FreeType-GL is a text-drawing library that I haven't used, but should work fairly well
I've heard of people using JavaScript in games also, a big one to note is Wolfire's Overgrowth which uses JavaScript for interaction with the other world stuff.
Regarding other libraries, since you mentioned Boost, just use that.
People say that Python is not good for an embedded or extension script engine for games, but I've used it personally and it's equivalent Lua codes worked actually slower than the Python.
When you have specific problems, you can use google to solve most of them, for the remaining few there's gamedev.stackexchange.
I can suggest SFML for 2D graphics, but that's not right aswell.
That's the absolute wrong way of going about designing games.
Exceptions have a lot of problems, I'm fairly certain you're not at the level of writing exception safe code, and when it comes to debugging the exception model loses a lot of useful information.
Which has incredible physics and I've not seen a single physics glitch in the three times I've beaten it (personally).
Come up with a game first, see what you want and need.
As far as graphics go, it's well known, easy to set up, and perfectly acceptable to use OpenGL built into your SDL games, even for 2D graphics.
I would recommend against having it throw exceptions.
I can suggest Box2D, because it's a great physics library, but what's that doing for you, you'll go "there's a 2D physics library, maybe i'll make a 2D game with physics in it"?
I have to second what @dreta said about coming up with the game first, and figuring out what you may need... That being said, since you're using SDL for 2D, obviously SDL has lots of libs that were made just for it to help you out.
To me it just feels cleaner than other XML libraries.
Much better for debugging than an exception ever will be.
For XML I stick with tinyXML almost all of the time, it's a great library and it works extremely fast with relatively minimal overhead.
SDL_mixer, SDL_ttf, SDL_image are all obvious choices for basic tasks.
What if you want a game with complex visual effects or you want the ability to texture random polygons, you can't do that with SFML.
I have my assert macros log the failed test, the file/line/function, call __debugbreak(), and then abort.
There are not a lot of general AI libraries, and even fewer designed for 2D problems.
For your "enforce" function, you need only a simple assert system.
Of course only intended for programming errors and not errors of invalid user input, but the latter if better dealt with in other ways anyway.
PS: I didn't really get into the other stuff you mentioned, because it looks like everyone else provided great answers for those.
Finally, for unit tests, you might check out Googles test library.
Simple OpenGL Image Library, devIL, and AssImp are some fairly nice content importers.
Regardless of whether your game is 2D/3D whatever, I've always been a sucker for a useful script engine.
Though again, writing your own simple version of that takes a matter of minutes if you have a decent proficiency in C++.
Configurable Math Library is a fairly nice linear algebra library, and I believe boost has one as well.
Pick your tools for the job, not the other way around.