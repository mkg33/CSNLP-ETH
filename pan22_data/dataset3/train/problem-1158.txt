Firstly, my Moving Boolean was a static variable(this was changed before I asked this question).
Also the script destroys both shells during a collision.
I think you mean to write something more like this:
I am seeking to understand the error in my logic for this to work as desired.
Secondly, I failed to reference the object I was colliding with thus building on my first logic error of the static Boolean - which made all instances share the same value.
Maybe this could be done implicitly with an associated script to the desired gameobject that correlates with the tag....
This First script is to handle the Basic movement and start shell movement on Player Collision
I am a trying to recreate the first stage of Super Mario Brothers, but I am having a bit of trouble with the collision system between Koopa Shells.
The Second Script handles all other collision and inherits from the first in an attempt to simplify the calling from script to script.... Could also be the cause of my problem.
Lastly, after realizing the later of the two and the fact that my code was not properly allowing the entire engine to access the value of the Moving Boolean - which was kindly pointed out to me to check, it was then when I realized I was prematurely calling my coruotine without the use of StartCoruotine().
I think you may be misunderstanding what the Equals() method does - it's checking whether the GameObject instance col.gameObject is equal to whatever you pass in as an argument.
I don't understand why my various boolean flags aren't creating the desired result(s)
You're passing in a Boolean value, which is not a GameObject, so the result will always be false.
Thank you again for all that followed or assisted me in any way!
Please forgive the failed attempt of presentation.
Currently the script above does not destroy the various gameobjects under the Enemy and Player tag.
The Actually code is no where as near as this broken up.
I have written two different scripts in hopes to achieve this:
It's Rather long so I took the liberty of including only parts that were in direct correlation/ causation of the problem