To do this, the servers sending alerts need to authenticate with the Exchange Server before attempting to send, else they will not be allowed to relay.
If desired, you can set up IP restrictions on the virtual SMTP server for each notification server so that you don't get unauthenticated email coming from unknown sources.
I've found that if the "From:" address is not an address within the Exchange server's configured email domains, it won't pass it along.
I'd like to get external notifications on my iPhone from service monitors inside the network.
However, while internal notifications work fine, it doesn't seem as if Exchange is allowing the relay of these messages to the outside world.
You can either setup an account in Exchange for these emails and set your applications to authenticate to this account when they send, or setup Exchange to allow anonymous relaying only from the IP addresses of these services.
What I did is create a second virtual SMTP server on another IP address and check the Anonymous authentication option in the Access tab.
I've setup what Sam mentioned above and has worked successfully in the past.
Since this virtual SMTP is not used by your normal mail flow, you are not compromising your normal mail traffic.
It just may be that the Exchange servers need to have that IP address added to the allowed-relay list.
There is a good article here on how to set that up.
How can I have these devices (APC Matrix, Servers Alive, et al.)
Then I configure any internal notification system to connect to that IP address.
Unauthenticated connections cannot relay by default in Exchange 2000/2003.
The easiest way to do this is to have the devices send e-mails to my ATT SMS email (xxxxxxxxxx@txt.att.net).
Messages like, "powerchute@ahups1" will get bounced, but "powerchute@ahups1.maildomain.org" will get passed along.