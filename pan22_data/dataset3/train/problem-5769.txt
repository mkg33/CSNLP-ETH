Doing poorly may not immediately disqualify you for further interviews.
Both the topics you specifically called out -- complex recursion and Big-O notation -- are  topics that are typical of a solid computer science education and can be extremely useful in game development.
That said, what you describe doesn't sound like an uncommon test structure to me (the number of questions is a bit higher than any test I've ever taken or administered, but that's about it).
Above all, don't be discouraged if you feel you didn't do well.
Remember that, as others have noted, a test for a job isn't necessarily like a test in school.
Their presence on a test is a good way to measure if you are familiar with them, or probe for potential areas of discussion in an in-person interview.
If you're eventually told that you didn't do well enough on the test, it's worth asking for clarification (sometimes you won't get it, but it can't really hurt to ask) so you know where specifically to focus your continuing education.
Look at is as an opportunity to grow and perhaps try again later.
It is worth noting that there are no industry standards for either the test material or the evaluation thereof, so your mileage may (read: will) vary wildly from that described by the answers here (my own included).
Code tests are just another screening and evaluation metric to help see where you stand in terms of your technical ability and if that would be an appropriate fit for the available position or positions.