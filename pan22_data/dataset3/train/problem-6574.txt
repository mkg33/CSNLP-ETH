Why can't I use the familiar SQL that reads as plain English?
If you want to delete an entire table, you will need to use the truncate function instead.
 The below code will set the value of field one to '' and field two to 'foo' where id = 1
I don't know the reason, but many people are constantly trying to write something like this.
In a nutshell, a good mysqli wrapper should be just a handful of lines (taken from the linked above answer):
Okay, for the DML queries it makes sense - it always makes a cool feeling when you automate a routine task using a template.
Besides, you may refer to my article on the common database wrapper mistakes, as your code suffer from most of them, namely:
To insert content, create an array with table and the data to be inserted
And what will be your $settings array when you add them?
To select content, create an array with table and the data to be selected
here, the condition is useless as both loops are doing literally the same.
You can even set value to empty if you want to delete certain value from a row.
 if you need to select everything, you can use 'data' => '*'
Please check it out, it explains a lot of pitfalls in your code.
If you only want to remove a single field from a row, use the update statement instead and set the value of that field to '' (empty string)
To update content, create an array with table and the data to be inserted
Here's the optional config.php file that goes with it:
if you need to update specific values, you can specify where, and and or properties
You are writing a code to handle some imaginary queries.
Do you really want to make that neat and universal SQL split into array with gibberish keys?
'data' is an array with the keys as field names that need to be retrieved
'data' is an array with the keys as field names and values as the values that need to be updated in the database fields
Leave SELECT queries alone and let them be written as plain SQL with parameters.
You'll either need to define the required configs in the class file or include the config.php file along with this code in order to make a successful db connection as shown below:
Or make another programmer to understand it better?
I'm still learning the art of PHP and I wrote the piece of code as a learning experience.
while anything else should be added after strong consideration only.
Besides, such a class should be ten times shorter.
as the values that need to be entered in the fields
So, for the insert query it asks for the method insert().
Calling the below function would update value of 'f1' to 'test' where id = 10 and 'f2' = 'foo'
'data' is an array with the 'keys' as field names and 'values',
One should start from writing raw API calls with raw SQL, get the idea what queries are going to be used, and only then start to think about automation.
In the recent years PHP has been improved a lot, making most of tricks you are using obsoleted.
I've created a minimal PHP-MySQLi database wrapper class that can be used to run insert, select, update and delete queries via prepared methods with ease.
However, what I would like to know is, if the code can be used in production environment?
I understand the logic that led you here but it's time to turn back.