It improves upon other methods posted in that it will return an error code if one is set, and it additionally set one if find didn't list any files:
Which will exit code 1 if the find command finds no files with the required permissions.
Exit 0 is easy with find, exit >0 is harder because that usually only happens
Find returns 0 if it exits successfully, even if it didn't find a file (which is a correct result not indicating an error when the file indeed doesn't exist).
Depending on what you want to achieve you could try to let find -print the filename and test against it's output:
Simplest solution that doesn't print, but exits 0 when results found
Then, if you want the list of files you can make use of -print 0 passed to find and split the out variable on nulls, or you can just add a print statement for it.
Having just found this question whilst trying to find my way to solve a problem with Puppet (change permissions on folders under a directory but not on the directory itself), this seems to work:
Then, for a result where find had errors but found files: