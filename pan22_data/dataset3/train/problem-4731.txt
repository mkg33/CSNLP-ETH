( As a more direct result, I uninstalled and no longer play it... ).
If your frame time is unpredictable (whether or not this is your fault; the OS may be using resources occasionally, etc), capping to a predictable frame rate that is somewhat lower than your achievable framerate will do a lot for predictable latency, which can make the game feel a lot better.
As a good example, FTL runs at nearly 100% CPU on my MBA.
See the Microsoft GameFest presentation What's In a Frame: Tearing, Latency, and Frame Rate for some insight here.
On the flipside, and increasingly important, that also drains battery life.
As a result, it drains the battery in > 2 hours and runs very hot.
Carmack also has a series of blog posts that are useful in this.
Also be aware that some math can break down when you run frames using low deltaT values -- or even when you use variable deltaT at all (things can become harder or even intractable to do in a "stable" and predictable manner, which is important for things like replays and some forms of network synchronization).
You will end up using a lot less CPU (multi taskers will thank you) and people on mobile devices will appreciate this, too.
Another unmentioned advantage is, if its a multiplayer game, you also level the playing field by giving everyone the same experience.
Probably the most important benefit of capping frame rate is that it can help to prevent literal physical damage to the machine.
They forgot to do this on Starcraft II, which turned out to be very problematic (and expensive) for some users until they patched it.
Changing how long between when you process input and render changes related to that input can feel bad -- even if on average you're achieving less latency between the two, the "jitter" can be noticeable to humans (consciously or unconsciously).