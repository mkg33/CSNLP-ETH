Authors usually have a webpage and even if the reviewer doesn't get a chance to try and check the code itself, natural selection appears to work pretty well and authors who do not publish code are a lot less cited.
(2) It is not really required/expected by most conferences/reviewers
And the reality is that with the just the code published in the paper you will never have the chance to reproduce the author's experiments.
I admit that I haven't done so myself even when the amount of work involved would have been manageable.
In my research field (image processing) pseudocode or architecture information is often far more valuable and I have never found myself stuck due to the lack of code in a paper.
I have worked for years (not anymore) within the SAT community.
But I can't help but feel that the CS research community would benefit if there was an expectation of making the code and data used in any publication publicly available in a usable format.
If you work for an industrial lab, it can be much, much easier to get a paper approved for release than to get code approved for release (even if the paper contains all the information needed to rewrite the code).
This might have been asked sometime ago already, however I have always felt strongly about this so I will give my two cents.
http://cacm.acm.org/magazines/2011/5/107698-the-importance-of-reviewing-the-code/fulltext
The reason behind this is hard to know and it might depend from researcher to researcher but mostly it is two fold.
Their idea was even more ambitious, to provide code for reproducing all the figures in their papers in a convenient Matlab package.
Not only because the published code is not complete (of course) but also because even the published pseudo-code rarely translates semi-directly into what is actually implemented.
Here is a well argued article by David Donoho and Jonathan Buckheit that I read in grad school which touches on exactly this topic from the point of view of wavelet researchers:
The paper is published along with the algorithm but it is very rare to see the actual code of the SAT solver (MAXSAT solver) etc, published along with the paper.
You believe that code should be published, but you ask why papers do not include code.
(1) It is extra work (cleaning up the code, making at least a rudimentary user interface, writing some documentation, providing some support when people inevitably run into problems)
I leave you with a recent reference on this from ACM:
I really like their idea but I think the issues are obvious.
I think it is just hard to make yourself put in the extra effort when there is no external push.
It's often left as an exercise to the reader who grasped the article.
Most of the time, there is simply not enough room to publish a significant amount of code.
Yet there is a lot of code available to illustrate papers.