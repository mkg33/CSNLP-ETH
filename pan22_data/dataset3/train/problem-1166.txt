You can use single quotes, and then you only have to worry about quoting the single quote itself.
the completion for repeated <TAB> subsequently goes to
Obviously, you then need to write ' itself as '\'', namely end the quotes, write \; to produce a single ' and reenter another quoted string.
Tab completion from '\ yields '\;:$"\'\''', since bash simply replaces every embedded single quote with '\''.
The latter option would allow you to select the file in question and delete it without ever having to enter the file name anywhere, which would remove the possibility of metacharacters having any special meaning at all.
I find it easiest in such cases to type/escape at most a few characters and then let bash complete the command with <TAB>: bash then makes sure to quote the stuff suitable for its own purposes.
If you are not limited to using bash or another shell script environment, an easy way to remove such a file would probably be to either write a short program that simply calls unlink() in your favorite language, or use a file manager such as Gnome Commander or Midnight Commander to delete the file manually.
In interactive use, you could simply use tab completion, starting with '\ or \\.
That's the recipe I used for the touch command except for omitting the final resulting '' since it does not add anything.
As a rule of thumb when not using completion, I tend to quote everything by including it in '...' marks.
"\" is used as escape sequence in bash scripting which has a litral meaning.
Tab completion from nothing or from \\ yields \\\;\:\$\"\\\'.
type rm,  and tab over to the file you want to delete.
Now I am actually a bit at a loss explaining the intermediate stages, but the final proposal is sensible.