If you are using SQL authenetication then there is a small amount to be gained.
When you use a security tool such as snort, with network taps or SPAN, then something like a port scan of your server becomes obvious.
However, changing the default port on any and all applications, when possible, is part of an over-arching, deeper strategy that includes red team activities, network security monitoring teams, and all of the correct instrumentation, installed, matured, and understood by those who are using it.
Someone legitimately connecting to the SQL server on the default port is not so obvious.
You can communicate with any instance using (ip address 192.168.22.55) : (port number 12345) in the connection string.
If the SQL browser service is not enabled then 1433 will not provide the intitial conversation.
If they can't explain why they need the port changed, in no uncertain terms, then they don't belong in the role of someone telling you to change the port.
When you have all of these things, then an intruder in your system stands out like a sore thumb.
If you are using NT authentication then there is little to be gained.
Any firewalls should be configuered to a) let this through to ip ranges that are appropriate, B) the fixed port numbers that any named instances may be using.
When an application connects to MS SQL over TCPIP the first part of the conversation takes place on 1433 with the default unnamed instance- not least is the desemination of any port numbers that named instances are communicating on.
These should be configuered in the SQL config manager as fixed.
The bottom line - if anyone thinks that they can improve the security of their systems by checking off a bunch of items on a list, they are wrong.
The best approach, I agree, is not security by obscurity.