To have spamassasin working correctly you need to train it: feeding it ham and spam messages.
Note that sa-learn places its own marking on messages that it learns from, and will not learn from them again unless you explicitly tell it to --forget messages.
And by that I mean: they've got a [SPAM] text in their subject, it contains the analysis detail of why it's considered as spam, and the actual spam message is sent as an attachment.
But what happens when you feed it spam messages which have already been processed?
If you run sa-learn on messages that SA has already marked as spam, it will learn from them whatever you told it (--spam or --ham), but first, it will remove the SA headers that were initially added to the message.
However, if you tell it to learn something as spammy that you previously learned as hammy, or vice versa (e.g.
you misfiled it), it will figure this out and automatically forget the previous run.
This is needed because you want to be able to train SA to consider something hammy that it's already marked as spam, in case of false positives, and vice-versa.