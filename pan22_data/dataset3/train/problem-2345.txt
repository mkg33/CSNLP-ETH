Let $C$ be an arithmetic circuit that represents a polynomial $f\in\mathbb K[x_1,\dotsc,x_n]$, with the promise that $f$ has at most $k$ nonzero terms.
I am interested in deterministic and randomized complexity, and in the link with PIT.
410(27-29): 2659-2662 (2009) or Bl√§ser and Jindal,
What is (known about) the complexity of computing $f$ in its sparse representation, given $C$?
In particular, does the promise that $f$ is sparse imply good algorithms?
A priori, I am more interested in the case of $\mathbb K$ being some finite field, though results over other fields may be relevant.
Garg and Schost, Interpolation of polynomials given by straight-line programs.
This paper of Kaltofen and Yagati discusses both the randomized algorithm of Zippel and the deterministic algorithm of Ben-Or and Tiwari, and then goes on to present some improvements.
A new deterministic algorithm for sparse multivariate polynomial interpolation.
The first algorithms should even work over arbitrary rings.
AFAIK, the results are stated for characteristic zero fields but work over any field large enough (again, polynomially large in the parameters).
There are deterministic algorithms that can do it even in time polynomial in $n$, $k$, $\log d$, and $L$ ($n$ numbers of variables, $k$ sparsity, and $d$ the degree, $L$ the bit length of the coefficients), see e.g.
There are deterministic and randomized algorithm running in time $\mathrm{poly}(n,d,k)$, where $n$ is the number of variables, $d$ is the degree and $k$ is the sparsity.