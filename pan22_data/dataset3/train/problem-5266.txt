This uses the live patching technology in the upstream Linux kernel since 4.0 was released.
For Ubuntu specifically, Canonical now delivers live kernel patching on 16.04.
I'm not aware of any way to do it reliably without rebooting the machine.
If the uptime is really critical for you, you may be interested in some form of HA/clustering solution when you can reboot one node of a cluster without affecting availability of the entire system.
There may be some tricks here but there is a good chance that you will compromise stability in the process and you will need to take machine into a single user mode.
Not the best practice because from a security perspective the server...some of these servers were database masters and we couldn't afford downtime.
Of course, if your servers exposed to external threats you will need to apply security fixes periodically, and some of them will require new kernel.
If uptime matters for for maintaing service to clients then you should be looking at load balancing and clustering.
I have several machines running for more then 2 years but I maintain them based on "If it ain't broke, don't fix it" principle and that is how I achieve the uptime.
Our shop has a pretty good policy about patching/rebooting.
If you are particularly skilled you can use the ksplice patches to build your own enabled kernels without subscribing to the service, or for non-standard kernels.
Our move to cluster computing has helped to ensure the important things stay up and the work to get setup was definitely worth it.
If you are sacrificing security for braging rights, you are likely doing disservice to your clients.
I think the only time one need to reboot Linux machine is to replace the kernel.
We have a regular patching routine that works to ensure we are not getting caught in a Bad Things Happen situation.
The importance of staying secure out-weighs the uptime statistic.
If you have the luxury patch it and reboot it if needed.
You can maintain a secure and redundant environment as well as service uptime.
I would suggest always rebooting a server after a major upgrade to insure it comes back up, you don't want to be caught in a situation after an unexpected reboot.
I think security should be the prime concern but then there are some real world limitations.
You will technically achieve the uptime but the machine will not be available to the end users during this time, so what's the point?
If you use Ubuntu or CentOS kernels you can subscribe to the ksplice.com service, where for a small fee they will provide you with special kernel images that can be used to patch a running kernel.