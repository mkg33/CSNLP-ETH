You figure that out and you have figured out the beginning of time 0:00
In time, since one orbits after the other (the update functions do not happen at the same time), their distance increases or decreases little by little.
My code is as follows (where "target" is the object being orbited around, and "transform"  is the orbiting object itself.
Then just drop that script onto the bodies you want to orbit their parents.
I wasn't sure about how you use the orbit angle, so I changed that a bit.
Make the moon a child of the planet object, and the planet a child of the star.
The planet orbits like normal, however the moon orbiting around the planet shoots off and makes an extremely large and far-away orbit.
However, it's simple subtractions and additions of transform.position values, you can also figure it out.
Otherwise you'll make an orbit around a slightly different radius.
Your planet, before doing its orbit step, can remember where it was and where it went to, and tell the moon to move in the same direction with the same amount.
Right when the planet orbits a bit, you want your moon to do exactly the same motion so that their distance does not change.
In the meantime, below is a hacky fix that should remedy the situation if both the planet and the moon are orbiting around Vector3.up.
The time each started on it path and rotation in time.
To show you how to do that, I would need access to your planet code as well.
When everything is set up in the parent/child fashion as I said above, you can easily create a generic script to handle the orbits.
Update the orbit by adding the rotation for that step:
Now, if the moon wasn't orbiting, it will stay with the planet in its orbit.
I'm not sure how to compensate for this or even what my mistake is called, but any help would be appreciated.
You can easily rotate an arbitrary point around another arbitrary point with the following:
The best way to explain this is I'm attempting to make a small model solar system (not to scale or anything complicated, just simple rotation as a learning exercise).
I know exactly what's going on and it's a tricky one:)