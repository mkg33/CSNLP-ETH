This also gives you the option of being more explicit about what went wrong, so a calling method may have a change to recover, or show a better error message to the user.
If you were to check them, you would get code like this:
The problem is that 0 is actually false, while -1 is true.
If you just have a boolean state, you might as well return boolean values.
Don't use crypt, especially not without additional arguments.
Don't mix camelCase and snake_case without reason.
But you could shorten some without loosing any meaning.
The numbers themselves don't have any meaning, so you always need to look up what they mean in the documentation (if it even exists).
You can save a level of nesting by using guard clauses.
Use an IDE to fix all of these issues automatically.
Although this actually doesn't seem to represent what the variable actually holds (it holds some counter instead).
You should be consistent with your variable names.
But really, returning integers as error codes is confusing and difficult to use.
Not being able to add a user is an exceptional state after all.
The documentation explicitly warns against this, as it is not secure:
First of all, your return values are quite confusing.