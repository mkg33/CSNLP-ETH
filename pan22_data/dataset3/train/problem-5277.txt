Apache + mod_svn (with SSL of course enabled) is an easy to configure / use system but if ssh is actually needed details of use are as well.
I believe you're trying to protect the wrong aspect of your project.
If you use git, gitolite can work from a single account and preserve your existing authorized_keys entries.
3 of those 10 person work on site1, other 3 on site2, and other 4 work on site3.
You don't trust them for access to your SVN repository, but you do trust the code that they will write?
In any case, SVN works over dav, and you can put username authentication on it through apache and they wouldn't even require a shell account to the machine.
I have only one username on my server which is the one my hosting gave me which i have to give it to my team workers.
If you do not need SVN per se it is a nice option for your situation, giving you a complete (private) system to work with.
And the first 3 person who work on site1 should NOT be able to access to site2 and site3 and so on.
SVN can be easily partitioned into seperate repositories, each with their own set of users and permissions.
Okay here is the situation, I bought a hosting server that gives me version control and ssh access.
You can also use PAM to do your auth in which case you could just restrict their access with /bin/false and just let SVN do the authentication.
And in my experience git is easier to setup than SVN.
I'm working on a big project that needs team work so I need at least 10 person around the globe to work on the project,.