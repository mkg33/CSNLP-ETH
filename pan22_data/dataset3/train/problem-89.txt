I may repeat myself, but this was my answer at a similiar question:
Which means I was pretty much doing similar things to what you have been doing, but my perspective differs because of experience.
Everyone loosely defines an Activity as a screen for doing a certain activity.
In Final Fantasy, you have several different screens that get used over and over and over again:
If, at this point, you hit the back button, your game goes back to the overworld.
Quoting the Android documentation, "An activity is a single, focused thing that the user can do."
I've been learning Android in my spare time, and one of the first things every tutorial/guide will introduce to you is the concept of an "Activity."
Then I came to the realization that whenever I press the back button, I go to whatever the previous activity is.
So, for each type of gameplay/menu function, you would want to have a different activity.
So, here's a scheme that is more likely to work for an FF style game:
Sometimes I think that Google's idea of Activities confuses more than it helps.
Having said that, I originally started out with the "one screen == one activity" approach, and quickly learned its limitations.
You are in the OverworldActivity(using familiar Final Fantasy-esque terminology), wandering around the world, when suddenly you have an encounter and go to the CombatActivity.
Let's say it is all just one "game" Activity --- this raises other questions, such as, what about a splash screen before the game starts that shows your company logo/name and plays a sound?
My question is, how relevant/important is it to have multiple Activities for a game?
Invariably, I will use some sort of finite state machine, and so activities became the states... simple enough, I thought.
Should that be considered part of the game Activity, or should it be it's own Activity?
Would each of those be an Activity that you swap back and forth between, or would you redraw the screen within one Activity?
This may or may not be a big deal to your game, but consider the following:
I've got many years of development experience, but decided to wade into the shallow end of Android development.
Are there any guidelines for breaking a game down into multiple Activities?
And not only button presses but also the different states a game can be in, like splash screen, menu, playing etc.
To explain what I mean, let's take a game like Final Fantasy.
But since all the mentioned game engines are open source, download them and have a look at their code ;)
And that is unacceptable to me, and I'm almost certain unacceptable to you.
As for a splash screen, that seems to be a matter of preference, for example, you could have it integrated with the main menu activity, or have it as a separate one that chains into the main menu.
Yes, you could put handlers into the Activities so that if you are at an invalid activity it sends you to the correct one, but really the better thing to do is to design activities with the "can I safely hit the back button and still have the game play make sense".