If the communication does not need to be instantaneous you could just use a central database server to store the messages (or whatever is being communicated) and then the other servers can pick them up when they are ready.
Doing it this way would be a lot more complex than the db option tho' as you would have to have methods in place to ensure that messages are actually passed on and some sort of retry mechanism for when they cannot be forwarded.
Why don't you want each server to have a connection open with all other servers?
How do I accomplish the server to server communication in terms of network architecture.
I am writing a network application that has several machines that serve separate clients, but machine themselves need to communicate with each other frequently.
Another option would be to create VLANs but I still don't understand why don't you want each server to have a connection open with all other servers?
An alternative would be to use a central server to act as an exchange, basically sitting waiting for messages then forwarding them to daemons on other servers as required.
As a client developer, I am brand new to any of these.
One NIC would serve clients and the other NIC would be used for server-to-server communication.
I don't want each server to have a connection open with all other servers.