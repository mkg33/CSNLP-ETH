I wasn't sure if the placement to the AsyncTask class inside the ListFragment is correct or if I used getActivity() correctly ( would it have been better to pass it as a variable?).
Finally you do not need to recreate your adapter every time your async task runs, you can just reset the data and call notifydatasetchanged.
This is the first time that I have played around with AsyncTask in Android and I wanted to make sure I'm using it correctly.
list when your fragment is being resumed and not only on creating the initial instance.
The only other issue I see is the extension of the AsyncTask.
Any other constructive criticism is welcome as well.
The above code takes one ClassCastException and swaps it with another.
This will make your code more flexible in case the type of list later needs to be changed.
If it is necessary (because the current message does not give details on the current activity), then I recommend initializing the cause of the thrown CCE:
Should begin with an uppercase letter and the class name should reflect what it actually is.
This is completely unnecessary and you can delete that code.
Follows the android m prefix, and makes it slightly more readable.
For the parameter types for getItemLists and onPostExecute(), you should use the interface List rather than the class ArrayList.
But might be worth having a look at an EventBus like otto, make it much cleaner :D
it is a pain, but you benefit from getting all the information in the stack trace.
Also your getItemLists async task, should be renamed to something like the following;
The idea is I'm grabbing all the rows from a table in the database using dao and putting them into an Arraylist based off my Item class.
You could also consider moving your task execute into onResume, this is called just after onCreate.
I would consider renaming your member variables to something like the following;
Once finished, I added it to a custom Adapter and add it to my ListView.