This should be a comment to Neel's answer, but it's a bit long.
Thus, unary parametricity is the simplest, and least expressive, approximation of true parametricity, and binary parametricity gets a little better.
In words, you can use some $n$ arguments out of the $n+1$ arguments for simulating the smaller relation and make the new argument equal to some old one.
At the binary level, the "identity relation" is equality.
Jung and Tiuryn have shown that such infinitary parametricity is enough to characterize lambda-definability, and O'Hearn and Riecke have shown that it is enough to characterize fully abstract models for programming languages, including sequential PCF.
So, you get a sudden jump in the power of parametricity in going from the unary to binary level.
So, you have "more" relations at arity $n+1$ than you had at arity $n$, and this goes on ad infinitum.
At each arity $n$, you have the following situation: $n$-ary relations $R$ can be embedded into $(n+1)$-ary relations by defining $R'(\vec{x},y) \iff R(\vec{x}) \land y = x_i$ (for some fixed $i \in [1..n]$).
Prompted by a hint from Rasmus Petersen, I found the following in MÃ¸gelberg's thesis (emphasize mine):
These infinitary relations have been formalized as "Kripke logical relations of varying arity", also called Jung-Tiuryn relations.
The reason is that, at the unary level, the "identity relation" is the every-true relation, which doesn't mean very much.
Kurt Sieber has studied these issues in some depth: for sequentiality and for Algol-like languages.
Since more relations means stronger parametricity and fewer function families would be regarded "parametric", we understand that "true parametricity" is what we obtain in the limit, and each finitary parametricity is an approximation to it.