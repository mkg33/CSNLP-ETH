If you have good version control this may be an acceptable solution.
Some are jQuery libs that I long since stopped using.
Basically this isn't a website it's an PHP engine that can throw up lots of things and it is hard to track, so I simply leave these old references in.
I am taking about the apache stuff - the css, the gifs, the png, the old jquery references, the old js files that I may or may not ever recruit.
ext3/4 with noatime) you can just use a simple find to locate files that haven't been accessed in some time.
I have a project that is always in development and is in PHP and it is 14 years old.
Many are image references to old images no longer ever used.
If you want to do this right you're going to have to have your developers do a proper code audit.
What I want is an infinite supply of money -- you can't always get what you want.
Is there a way to item by item verify whether Apache ever used it?
The thing is they all look like something I remember doing way back when, and there are a lot of legacy decay routines that sometimes need these old images/css/js/{insert here} to function.
Alternatively you can scan your available logs, remove anything that isn't referenced, and then add back items as you discover stuff is broken.
It's the only way to know for sure what is/isn't required.
The closest you can come is to scan the Apache access log to see which files are being accessed by clients, but this is not a guarantee that the file is never used.
Despite every attempt to keep on top of developing it there are large numbers of files in there.
If your filesystem isn't set to discard atimes (e.g.
The file might be requested 15 minutes after you delete it, for instance.
This is an odd question but my gut tells me there is an easy way to do this:
The PHP bit is ok, I can do what I need via a database log in every header.
I have lots of servers that run this code it would be nice to run this against every server so it would (ideally) be a way of getting distinct file calls (and a count?)
What I want is a way to traverse the Apache logs for installations that have been live for over a year and positively ascertain whether each individual that image or css or whatever has NEVER been referenced nor pulled up since the server was created.
This may not solve your problem, though, for many of the same reasons voretaq7 points out.
For instance, to find files that haven't been accessed in a year or more: