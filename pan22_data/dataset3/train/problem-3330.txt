I have written this code from memory, so it may very well be not completely accurate.
This would allow you to check if the node is contained in the minheap without actually checking.
A sample loop would be as follows: (I use Vector2's to store positions here, but you could very well use two integers or floats.)
In A* implementations, this method is commonly completely unneeded, as you maintain an "open list", which is the minheap (note minheap vs maxheap here).
Note that this code should be taken at face value: as a sample.
Instead of finding out if a node is contained in the frontier, you maintain a list called something like "costSoFar", which maintains a list of the smallest cost for any one node, and check for the node in this.
Note that this could be handled inside of the node itself, in your case by adding a bool OnOpenList { get; set; }, a bool OnClosedList { get; set; }, as well as a float (or int) costSoFar { get; set; }.
I also have more infrastructure surrounding this; if you have some basic implementation or structure questions don't be scared to leave a comment.