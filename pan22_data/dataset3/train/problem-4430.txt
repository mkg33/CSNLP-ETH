Who manages who gets what part of memory in the address space?
The only truly way to do it is to do something like this:
From a management standpoint, you still have to run Windows but technically Windows is just a guest to the hypervisor.
Also when running windows server 2008 (and 08R2 and now Windows 8 Server and client), you can install hyper-v which still places a hypervisor beneath the "host" OS.
Who's responsible for managing CPU usage between OSs?
Another alternative is to use Virtual Box or another virtualization system that takes advantage of hardware virtualization but still runs within a host OS.
A friend of mine recently suggested something that intrigued me: in the case of needing multiple Operating Systems simultaneously, instead of dual-booting or using multiple computers, one could use a low-level host that consumed effectively zero resources that would host two virtual systems.
Who decides what OS gets what piece of hardware at what time?
From my understanding, the VMWare hypervisor has the smallest footprint, but costs more than  Hyper-V which is free assuming you already have a windows license.
How do you handle storage device read/write synchronization between OSs?
The only real disadvantage I could think of was performance, which might sometimes matter, but as an example: my next laptop will support 16 GB of RAM, so each system could get a little less than 8 GB of RAM - more than enough.
Although if you go that far, it's better to simply use the host operating system as opposed to virtualizing itself (i.e.
VMWare and Microsoft both provide thin hypervisors that do little more than provide virtualization services.
This dual-virtulization idea seems to solve the problem, but I wonder why I've never heard of it before.
You would be better off installing a small distribution of Linux, essentially acting as a "host operating system", and running both of your required operating systems at once.
The problem with dual-boot is you can only use one Operating System at a time, and the problem with single-virtulization is you can't use Windows unless Linux is on.
The problem is your "host" is far from one that would consume zero resources, and is essentially an operating system itself.
You'd have the benefit of splitting the computer's resources evenly between the systems and the option of using only one system at a time.
if you use a Windows host, virtualize Linux, and vice-versa).
The problem with a discrete OS host is management of resources.
Although all of the current processors (intel and amd) support hardware virtualization, some lower end laptops and desktops don't enable this feature (as a means of market segmentation).
Hypervisors only work on hardware that has virtualization assistance enabled.