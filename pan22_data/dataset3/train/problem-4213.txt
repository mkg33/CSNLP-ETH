dns has, besides the caching problem you already found out, a distribution delay which can be up to 24 hours.
If you look for hardware solution, you can look at some appliances like radware.
Furthermore , you can use a soft-stop trick like explained in section 4.1 of this document while doing maintenance on your server.
imagine the ip is up, but your webserver is not responding, then the client will timeout.
MS has Microsoft Cluster Server (MSCS) and Microsoft's Windows Server Failover Clustering (WSFC) for Server 2008.
You may use a proxy for that nginx do the job for you, or may be a load balancer software tool for http protocol like pen.
but this will not do the trick for every situation.
If one goes done, then another machine from that cluster takes over control of that IP.
linux-ha or mscs as mentioned by Insanity5902) or cluster hardware (e.g.
What you are wanting is something like this - Linux HA - Which, from what I understand, the servers talk to each, via internal ip's.
Sadly I don't think that this is easy or cheaply done in Windows.
You will find this wikipedia article very informative as it list a lot of software.
You can do that with haproxy , wich is a very fast and reliable proxy.
Your other option is to look at using VMWare to do it, which has the same sort of failover capabilities, but then you have to buy the licensing for vmware on top of everything else.
but you can use dns to do loadbalancing be giving an fqdn two ore more ip adresses.
when you use a proxy which is redirecting request in case of downtime, you only change your single point of failure (spof) from the webserver to the proxy.