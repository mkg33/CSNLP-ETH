However, there should be very little tradeoff in processing time.
(I use Notepad++ for single search/replace across multiple files since it is faster than Textcrawler.)
This works for all numbers (to remove all numbers from text/article)
For running purposes, we'll assume it's linear and say that this runs in O(n) time.
Searching for two terms with two replacements would theoretically look like:
You can easily achieve your goal by only one command line
You're better off running Find & Replace twice, because you have two different replacements happening.
Getting the terms does not take that much processing power, so essentially you are looking up two sets of searches for each term, giving a time of O(1x2n), running once but searching two terms.
The batch files can be saved and reloaded for future use.
While you would save some time not loading each term twice, you would spend more time searching each term twice, so there's little tradeoff, and since this feature would be used less often than searching one term with one replacement, application developers just assume not write that functionality.
which would take O(2x1n) time, or twice as long as searching for one term.
The regular expression support in Notepad++ is severely limited.
You will need to use sed or an editor that has better regex support.
Running Find & Replace once, searching term by term:
sed -e "s/Text_1/TextA/" -e "s/Text1/TextB/" <your_file.txt>your_file_new.txt
TextCrawler supports regular expressions as well as normal search/find.
Without the alternation operator, there's no hope of even coming close to what you want to do.