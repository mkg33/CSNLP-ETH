I know that VMware will check when it's installed to see if its being installed in a VM, and I hope other products do the same.
Performance is usually hit pretty heavily in this whole process on the "guest of the guest" machine.
I don't think the necessary CPU instructions would be presented through from the hypervisor running on the hardware up through the VM to reach the second VM.
As far as I know it is not possible, but VMware ESX can run in VMware Workstation for example.
If you need some specific, say legacy, system to be virtualized you can always do it in software, the nesting is not an issue then.
I have been playing with virtual machines latley, and wondered if I could run a virtual machine inside a virtual machine?
Try qemu, I did it 2 level deep with it, but you can go deeper, the performance will probably make it useless, though.
If it did work, you'd also be adding overhead without getting anything in return.
BTW, PC architecture was nomen omen made by IBM, but for totally different uses compared to what it is used for today.
I don't personally know any actual use-case for this beyond networking.
I do know that if you try to run VMWare within VMWare systems, it will complain and not let you do it.
However, it's generally not good practice especially with the common methods used to achieve virtualization.
If you really must do this without the specialized hardware and software, good luck to you.
I do know of a few people who, for whatever reason, deploy Docker containers within Docker containers (or so they say).
Moral of the story is: while it may be possible, it's probably not smart to do it unless you really know what you're doing.
If you need another VM, you can just run it next to the one you already have running.
The additional overhead without a proportional gain of some resource would make this impractical.
I don't believe most virtualization packages will allow you to run a VM in a VM.
I can't imagine a case where you must have a VM running inside another VM.