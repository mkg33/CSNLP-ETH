      this._direction = direction; //integer 0-359 (representing a compass)
      const status = "Engine has not been started!
Using proper ES6 methods, I was asked to create a class for Vehicles and two Subclasses for a bus that inclues the number of seats and Ambulance thatinclues a ttoggle for siren (on & off).
However you are missing the two classes Bus and Ambulance.
Implement those changes and let's resume the code review.
      this._currentSpeed = currentSpeed; //integer
Historically _variableName or m_variableName comes from C++ to indicate member variables.
Then to create an HTML file of those subclasses that allow me to drive them around using methods.
    <script src="Johnson_ES6_Classes.js"></script>
I'm taking an online course in website development and we're going over JavaScript ES6, but my professors lecture and notes I've taken we're not very helpful more resourceful with the assignment I was given.
However, this.variableName already means that this is a member variable hence the "_" is redundant.
  constructor(color, direction, currentSpeed, topSpeed) {
Therefore it would make sense if all of your methods return status string or none but the status() method.
    const status = "The Engine is now disengaged and vehicle is inactive."
(1) You are using this._variableName pattern - although not wrong this is a bit redundant way to express yourself.
      const status = "Engine has not been started!
        const status = "Engine has not been started!
(3) You are missing implementation on few of the methods like accelerate(), turnLeft() and turnRight();
        const statusOn = `${this._color}, ${this._direction}, ${this._currentSpeed}, ${this.topSpeed}`;
      const status = "Engine has not been started!
      const status = "Engine has not been started!