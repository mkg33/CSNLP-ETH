There's a chance that a given random map might not have a suitable combination of locations.
(I recall having heard that some titles in the Civilization series use influence maps, bu I don't have a definitive reference for that at the moment)
First, we assign some value to the resource locations.
Next, the influence spreads, as shown on the right.
On the right I used the max function; this would be more appropriate when only the distance to the nearest source matters, but additional source don't help.
This is most appropriate for situations where the combined amount of resources is important, for instance, if more ore allows you to get more gold.
There's also a chance that a few combination exist, but there are some many invalid combinations that you're statistically unlikely to find them.
influence maps - data structures that model various relationships with respect to their locations, and typically assume that the impact of these relationships spread outward across space and/or time.
How can I isolate a few blocks of what I'm looking for, ideally with a distance threshold so town halls aren't next to each other.
I'm using perlin noise to generate a 2d map, with ground types and natural resources.
For each I picked a threshold & everything at that level or higher, I tinted green.
When you start a new game I need to place your town hall as well as your opponents in such a way they are on grassland and near natural resources.
Finding locations that are suitable close to resource can be done using
I've also colored coded things to make them a bit easier to read.
Unfortunately, that's also the bad news - there's so much choice that finding the right balance of features & functions requires a bit of experience or experimentation.
I arbitrary picked 5 locations on a 8x8 grid & gave them all the value of 10 as shown on the left.
Using the fast Poisson disk sampling techniques might help.
An option is to avoid searching for locations and just force them.
The good news is that they are very flexible & you have a lot of options in terms of their design & implementation.
Since I was doing this all by hand, I simply decreased the value based on Manhattan distance, but you can change the metric to suit your needs.
Finally, you need to consider what might go wrong.
The next thing to do is decide how influence is combined from multiple sources.
For an oversimplification, I have a 2d array of integers where a block of 0s and a couple 1s would be great for starting but anything lower than a 0 would be bad.
You randomly pick a location & then see if there's a suitable partner location for the opposing base.
You could place all the starting locations a suitable distance away from each other, and for every location, change the local terrain to grassland and add resource nodes nearby if there aren't enough.
Here's a couple of examples based on the situation you've described.
Often times there are just too many possible combinations to consider, so practice, it tends to be solved stochastically.
From here, you can look for other factors such as masking to include only acceptable terrain.
The core concept of an influence map is that some locations have values which in turn influence the values of the surrounding area.
Identifying all location pairs that are at least a minimum distance apart is the really hard part.