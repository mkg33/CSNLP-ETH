Possibly it might become doable in future versions, but right now the answer is - Impossible.
After much testings on various browsers, it is easier to intercept the keys when they are down (not pressed) because some of this "App integrated keys" are difficult to intercept with the "keypress" event.
I don't know how to use Autohotkey or Autoit, so someone else will have to verify that this could work, I only offer this as a potential idea.
Perhaps you can use Autohotkey or Autoit, one of those programs and if you can do hotkey combos and link them to the firefox functions, say
If you want to disable any ctrl-key being taken over by the webpage, just filter for the all the letter's codes from a-z
None of addons I've tried seems to be able to fix it.
In that case the keyboard input (except interrupts) will get intercepted by the plugin.
If you don't like this you can always remove the offending plugin(s) [I would assume it is likely flash].
Notice that the browsers return different codes for some keys.
(building on the previously accepted and working answer)
It is likely that third party plugins are taking the focus from the main browser window.
I came up with this script that is sort of cross browser compatible (I didn't test for Microsoft's IE).
The key "P" on chrome is seen as e.keyCode == 80, on opera, it is e.charCode == 16, while on firefox it is e.charCode == 112
Extensive research shows that as of current version of Firefox (3.6.x) this is impossible - all key binding conflicts are resolved with priorities: System > Website > Firefox - a rather stupid order that is.