It has a very active community with frequent releases.
It is a pretty well known, established Python library which provides numerical capabilities in Python.
Over and above all these, Python emphasises on readability because developer time is more expensive than CPU time today!
Also, you don't remove the leading whitespace from the first element on each line - remember that python """ quotes will leave indentation spaces in the string (even though they get removed from docstrings).
Much easier to maintain since fewer lines of code and hence fewer bugs :)
This is how I've done it - can anyone offer improvements for me?
It basically takes a multiline output, and splits it into multiple subarrays.
I think NumPy library exists exactly for use cases like this.
I've knocked together a few lines of python to read in stats for a service (haproxy), and store them in an array (to do some analysis on later).
build_array uses a global variable, which I don't see any good reason for.
You are probably better off using the python csv module.
line.split() returns a list already, there is no need to copy the elements into another list.
It might be better just to remove leading and trailing whitespace from every string immediately after you split it, unless whitespace is ever significant in your application:
Also, if you can give the nature of the analysis you are trying to perform, what columns you want specifically for this analysis, the code can be made much faster.
Also, I tried executing your code and genfromtxt code and it looks like for the given data genfromtxt is slower than your code by almost an order of magnitude, but I think specifying the datatype of the columns in the data will improve the performance of genfromtxt a bit.