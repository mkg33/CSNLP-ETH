If you use low-level setpos() instead of :substitute (which has other unwanted side effects such as adding the pattern to the search history), the cursor position will be kept automatically:
Is there no way to do this without placing a marker?
If you are okay with making a tiny function instead of a tiny macro, I would propose the following:
Also it checks if the line already has the desired string in the end, in which case it does nothing.
C-o and C-i are not what I need, nor are '' and ``, which operate on edit points.
I am trying to write a tiny macro to append a ; to the end of the current line (A;), then return to the cursor position from which I jumped before executing the macro.
I ended up writing a tiny function, a less flexible but more compact version than what you just posted.
A is obviously not in the list so "tick-tick-back", as Gary Bernhardt calls it, won't work "as is".
You may define keymaps that use this function that are useful for different languages:
It is still a good approach, though, but you must explicitly place the backtick mark before you do A;
The cursor position is obtained using getpos() and is later recovered with setpos().
The behaviour of `` and what are considered as "jumps" are clearly explained in the doc.