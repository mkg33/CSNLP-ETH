Okay, so this is the first time I have ever submitted code, so here goes.
The macros will appear in the macro list accessible by choosing Developer / Macros from the main ribbon.
.Cells(RowTo, ColHcpDiP).Font.Color = .Cells(RowTo, ColHcpDiP).Interior.Color 'Set color invisible
I thought the macro route would be the way to go, but as you can't set the font to be the same as the cell color using conditional formatting then the only other way would be to change both with a macro that works similar to the effect of the conditional format, see below:
I've found a work-around that doesn't change the font color, but effectively removes the text from the cells.
Adjust the cell number format to Custom, with a value of ;;;.
Just select with the mouse the range you want to modify and choose the macro you want to run.
While I'm not aware of any worksheet functionality to match a cell's font color to its fill color (other than manually), it's very easy to do with a macro.
The first macro below changes the font color(s) in the cells of a selected range to match their fill colors.
Hope this helps someone, even though it's three years too late for the original question.
To install the macros, select Developer / Visual Basic from the main ribbon and then choose Insert / Module from the menu.
The second returns the font colors back to the default black.