Option 1 is fairly simple and flexible, specially in Linux.
Option 3 (a somewhat esoteric option) is to run Quercus which provides a PHP implementation in Java.
I think option 1 is more efficient overall, especially for the PHP side?
Since I don't want to purchase two certificates, this has to be kept in mind.
Important: I need SSL support available for both (php and java) applications.
I, personally, prefer option 2 because I'd then have to manage just one server instead of two.
Depends upon your PHP application I guess whether this is viable.
I've been using this setup (with ssl, and several virtual sites) for a while, works nice.
As far as I know, creating the CSR file for buying a SSL certificate differs between apache and tomcat (openssl vs. keytool).
I have one Java- and one PHP-application which I both want to run on the same machine (using Tomcat).
However, I have a bad feeling about this since most people out there seem to prefer option 1.
I don't have much experience with this, so I wondered which option would be the wise one, since I cannot foresee which problems might occur.
In addition you can also connect Apache to Tomcat via mod_proxy (as an alternative to mod_jk).