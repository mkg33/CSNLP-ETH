I do have some builds of mine own (-realtime and BFS based), but they're for .deb-based systems and meanwhile they can be used on different systems quite easily (usually you would need just to unpack the .debs and make corresponding initrd/initramfs, it can be a hassle for people not that familar with that side of Linux)
If it works, you can schedule it as a periodic cron job as a workaround.
If running Docker >= 1.13.0 use docker run's --init arg to reap zombie processes
1) What about using not 6G but less, say 1 or 2 GiBs (you can set-up the size with mkswap w/o resizing swap partition) â€” tried?
P. S. I could recommend trying to use UltraKSM but it requires patching a kernel.
3) What's cat /sys/kernel/mm/transparent_hugepage/enabled?
If you have a service running inside of docker like puppeteer (chrome headless api)
If you are running a <=1.13.0 in docker use dumb-init.
(This is quasi-answer -- too long to be a comment, but not a ready answer though)
2) What's sysctl vm.swappiness, sysctl vm.vfs_cache_pressure?
Do you realize you're gonna wear out your SSD significantly in that kind of set-up (not that much RAM, huge swap).
When the problem is happening, can you check if issuing the following command stops it: echo 1 > /proc/sys/vm/drop_caches