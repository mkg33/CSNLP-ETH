Thanks to it it's so terribly easy to handle anything from collisions, to the actual physics.
For instance, define a static body and drop a dynamic body on it, and apply force to your dynamic body for directional input, and you've got a platformer in a few minutes.
I don't think that an engine adds enough overhead to make this not worth it.
(Mario does not affect other object's physics with his jumping)
If the "physics" in a game is simple there is no need to import a physics engine.
Something as easy as Super Mario no, as it doesn't really have much physics.
mass, gravity, co-efficient of friction, thrust, etc.
Otherwise, there's no reason to avoid it if you find it useful.
You can simulate the same effect by diminishing the players' speed while they aren't moving...
Sometimes, though, I have some doubts about it: if I only have to handle circles or AABB, and don't need advanced physics tools (joints or stuff like that), I think that a physics engine could add a sort of big, unneeded overhead.
To reassume my question: would you use Box2D (or other physics engines) in a game where physics is really simple (like Super Mario, let's say)?
Since I found out Box2D, I'm using it for kind of any game-like application I try to write, from very small prototypes or small programs to test something, to actual projects.
You can model it by defining all of the necessary variables:
if you are using physics in the sense of multiple items (more than one) using physics to affect the outcome of other objects, then I would use an engine.
For example, in Mario Bros. when you run and stop you will slide a bit.
The difference is one is physics the other is not.
My answer is yes, absolutely use a physics engine like Box2D for simple stuff, because you shouldn't spend unneeded development time implementing some of the features that you quickly get from a physics engine.
I use the term physics loosely since there is a difference between modeling physics and
But as a general rule for simple games it is much easier to fake it.
and then calculating your new velocity, acceleration, etc.
If the memory, disk space, development effort, or processor time used for Box2D is too much for your purposes, then don't use it.