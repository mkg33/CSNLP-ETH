You can easily verify this by trying to divide 256 by 7, you can't do this without a remainder.
You move the network portion of the address three bits to the right to create your new subnets.
So if the goal is 7 subnets, start counting up powers of two:  2, 4, 8.
By definition a subnet size is a power of 2 so a group of equal size address spaces that is subnetted must also be a power of 2. so a /24 can be broken up in to equal size address spaces 2, 4, 8, 16, 32, 64, 128 (probably not as zero (subnet) and 1 (broadcast)).
So that means that you will need to use 3 bits of subnetting in order to create that many subnets.
If your goal is to subnet and create X number of subnets, then you simply use powers of two until you get one big enough to hold X.
There's no solution which satisfies all requirements, your answer of making 8 /27's is probably the most logical one.
Remember that as you take bits away from the host area, you have fewer possible hosts within that subnet.
So a /27 has only 30 possible hosts, and a /28 has only 14 possible hosts per subnet!
Since 16 is the first one that is bigger than 10, you would use that.
Good answers have already been provided by the others with regards to answering the test question.
Also, all subnets need to have a size which is a power of 2, and 7 * 32 (a /27) = 252, 8 * 16 (a /26) = 512, so there's no way to do this without unused space.
If you were for example asked to create 10 subnets within that same /24 network, you would have to add another bit to your subnetting in order to do so: 2, 4, 8, 16.
I just wanted to offer a simpler way to look at the subnetting itself.