I just copied the table from my excel spreadsheet into its Input section and it automatically created the nice unicode text layout.
Note: I use this when I am copying HEX strings and they get copied over at varying lengths.
="0x"&DEC2HEX(A1,8) will do the trick, but it changes the field to a text field, so it can no longer easily be used in formulas.
The MOD effectively gets the remainder back, which is the lower 16 bits.
First you need to get the upper and lower 16 bits of the number.
In this example I am looking to generate HEX strings of length 4.
You then concatenate the leading zeros to the actual HEX string, thereby generating the HEX value of the desired length.
You can either format the cell as text and enter hexadecimal numbers directly (but note that Excel cannot use those for calculations), or use the DEC2HEX() and HEX2DEC() functions to convert between base 10 and base 16.
The upper 16 bits of a 32-bit number can be retrieved with = INT( A1 / 2^16 ).
I first generate a column of decimal values from the original values that I can then run this formula against.
If you want to format a cell so that you can type in a decimal number and automatically have it displayed as a hexadecimal number, then that's not possible.
If you apply the custom format "0x"@ to the cell, then the value of the cell can still be used in an equation.
As mentioned earlier, the formula =DEC2HEX(A1) converts to hex, and DEC2HEX(A1,8) converts to hex with 0 prefix to denote 32 bits.
The REPT formula repeats the "0" based on the length of the hex string that is generated by converting it from a decimal, and the desired length of the HEX string.
While adding the leading 0's makes the numbers more readable, especially if you use a fixed point font, the hex and decimal versions can get mixed up when all of the digits in the number happen to be 0-9 (e.g.
MOD can be used to get the lower 16 bits of any 32 or 64-bit number; =MOD(A1, 2^16).
However, large numbers with varying digits can still be hard to read, so I like to put commas into decimal numbers and "_"s into hex numbers.
BTW, I have to give a big thanks to https://ozh.github.io/ascii-tables/.
Dividing by 2^16 acts like a right shift of 16 bits, and the INT removes the fractional remainder.