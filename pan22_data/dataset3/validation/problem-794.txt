Subtract the amount you wish to make negative from 4294967296 to get the number you need for the registry.
However, when Windows retrieves that binary data when positioning your displays, it interprets it as a signed integer.
In order for Windows to know that a 32-bit signed integer is negative, it sets the last bit to 1 (leftmost) and the rest of the bits are inverted.
So -1 will have a binary value of 11111111 11111111 11111111 11111111 (hex: FF FF FF FF).
The annoyance here is due to the fact that the registry editor doesn't interpret the 32 bits as anything other than an unsigned decimal integer or a hexadecimal representation of binary data.
If you translate that into an unsigned decimal integer (like the registry editor does), you get 4,294,967,295.
So, for our purposes, 0 equates to 4,294,967,296 which you can simply add your negative number to in order to get the unsigned decimal integer you need that the registry editor saves in binary form and that the system will later interpret as a negatively-signed integer.