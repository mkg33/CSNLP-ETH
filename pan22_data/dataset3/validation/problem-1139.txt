how to say... "have many processors think they are one processor"
I get the impression that this sort of thing is still at a research stage, though, and is not commonly used in the real world.
I understand [one thread per core] or with time slicing, [many threads one core] But, is there a way even through emulation, even with a performance cost, to...
A parallelizing compiler takes single-threaded code and tries to transform it into multithreaded code, which can then run in parallel on multiple processors.
This process happens at a software level, though, in compilers, not at a hardware level.
Note: My hypothetical application would be running a process that doesnt require real-time operation, Like a single threaded video encoder, or compression utility.
The reason we've gone to multi-core processors is that we don't know how to make cores any faster than they already are.
Maybe what you are thinking of is automatic parallelization.
Its possibly an elementary question, but if you could provide me with even a Keyword to search by so that i can learn more.
If there was a way to do this, we'd have processors with fewer cores.