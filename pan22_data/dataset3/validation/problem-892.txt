I'd recommend having a look at Puppy - even if you choose to go a different route, Puppy's overlay FS architecture is great for managing lots of images and reducing write backs.
The reason for me to build / find such Linux is that I would like to save the cost to host a Linux server.
It is quite similar to USB-based OS , but it runs on-top of current OS.
I would like to build / find a Linux distribution that is stored in a web server.
Grid computing implies all sorts of things - none of which are compatible with guerilla deployment like this.
Are you really going to be re-configuring it (other than address / routing) every time you use it?
It might have been helpful if you'd said that at the beginning.
However I'm finding it very hard to imagine what problem is solved by the architecture you propose.
It's not a 'Linux distribution' and it will have a steep learning curve, but what you describe could be done with CherryPy on any computer with Python installed.
Download the Linux from web server each time > Use > Configuration is saved > Re-upload the Linux to web server
The file size is 24MB, which can fit into most web servers.
There is no way I'm aware of to boot an OS from a webserver.
You don't know where the OS will be running - unless you implement some sort of dynamic DNS service.
And if so, what's the point of saving the config back on the server?
You might want to have a look at tftp but its not designed for operating across anything other than a LAN.