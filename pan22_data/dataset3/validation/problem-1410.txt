A prime reason to suppress the "Terminate batch job (Y/N)", is to run a program in a loop (eg: re-run in case it crashes).
AFAIK you can't as this behavior is by design and controlled by the command interpreter.
So when you stop the launched process, there is no "Terminate Batch Job" prompt.
This https://stackoverflow.com/a/8185270/1170023 helped lead to this solution:
Using start mything.exe -mythings -arguments in my batch worked perfectly.
Easiest way to suppress the confirmation if you use the Hyper terminal, is to add the hyper-yes plugin.
There is no method of "mapping" or even "intercepting" this unless you de-compile and recompile the interpreter directly.
By default it doesn't wait, so no additional arguments beyond the command and it's arguments are required.
In PowerShell scripts must be preceded by their path to be launched, so I run my batch file as .\host.bat.
It's 2018 now, and in Windows 10 Microsoft has begun to supplant CMD with PowerShell as the preferred command prompt, so it's readily available in the GUI, by default.
The solution I chose to use was running the batch with "Start", similar to other answers, but from a PowerShell prompt (or via the PowerShell interpreter method from CMD, if you choose).
I ran into this with an EXE that seemed to throw ^C to the parent batch on exit, causing the "Terminate Batch Job" prompt even on a clean exit.