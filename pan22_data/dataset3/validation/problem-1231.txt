having apache use one primarily will everyone else uses it in turn as well.
David showed you where the bazooka is, but if you use it you will almost certainly be shooting yourself in the foot (see my comment).
Note that this will almost always have significant negative effects on performance.
You can add them together if you want a process to run on more than one cpu.
Unless you have very specific and well-defined reasons for messing with it (as in "I know exactly what is going on inside the kernel, and why, and I want it to do this instead") you should trust the scheduler and let the it do its thing.
So CPU0 is 0x01, CPU1 is 0x02, CPU2 is 0x04, CPU3 is 0x08.
According to the manual page for taskset, the CPUs are specified as a bitmask.
It appears that unless you plan on doing one of the following:
As a general rule you should accept that you are not smarter than the task scheduler -- A lot of very bright people worked on it, and they did a really good job of making sure it crams the maximum number of computations into the minimum amount of time.
short of doing super in depth changes to the kernel or a headache of bypassing the scheduler for all the system tasks with taskset.
I would suggest just getting a dedicated server for it.