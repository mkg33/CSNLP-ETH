Generally speaking, both might do the wrong thing in tricky situations, but apt-get is much more likely to get it wrong than aptitude.
From my experience, they have a different way of pinning package versions.
Are they not just a different interface to the same backend?
In my case, I told aptitude to lock certain packages, assuming I'd be safe from future updates.
For instance, both are configured using /etc/apt/apt.conf, both use the same filespace and formats to represent package state, and the same filespace to store downloaded .debs.
It was said on the Debian mailing list, years ago, that switching from apt-get to aptitude was risky.
How they differ is their internal rule system to represent potential conflicts between package, how to resolve them (say during apt-get dist-upgrade vs. aptitude full-upgrade), and how to express these when interacting with the user.
Rather than remembering when to call apt-get, apt-cache or dpkg and with which switches I just use aptitude and get most things done.
This will help keeping the count of orphaned packages low.
Additionally you'll have more stuff united in one tool.
As for complications when switching "in the middle": I don't remember having had any when I did it.
I've read a while ago that aptitude has the better dist upgrade algorithm compared to apt-get.
Aptitude has a better dependency management than apt-get.
I was wrong; the cron-scheduled update manager, which uses apt-get, proceeds to upgrade it to my dismay.
apt-get and aptitude are different UIs that are part of the same package management system, APT, the Advanced Packaging Tool.
Drats, as I was writing this, I googled and found out that the bug (#557580 aptitude does not obey pins in preferences.d/*) was already fixed!
But that's hardly a killer feature as it's not used that often in the life time of a system.
All those problems seem to be worked out now, and certainly I haven't seen problems on either Debian or Ubuntu.