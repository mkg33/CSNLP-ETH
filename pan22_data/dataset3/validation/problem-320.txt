Using PowerShell, you may try the following method to navigate directories from anywhere provided you know your username and have file directory permissions granted.
This is less likely to be acceptable on a corporate machine, at least on your home PC, to save additional keystrokes, it's not a bad idea to make your %USERPROFILE% dir a simple name.
As you can see from my examples above, my user dir is C:\Users\a - I used to always have 'aplocher' or 'adamp' and when I changed to a single letter, it was magical.
In Powershell the %variable% syntax does not work.
Obviously, this shortens the number of keystrokes to get home (even compared to Linux), but is less robust since you can't really use it as part of another path or do much with it beyond just cd'ing home.
Another option, if you want a more robust option is to set a var:
cd /d "%HOMEDRIVE%%HOMEPATH%" would do it -- but I 'm not sure if you consider it an improvement.
Also, you can implement both methods simultaneously.
You can also define an alias for the above command:
The downside is that you need to run it every time you log in.
It can also be injected into most paths and doesn't limit you to simply cd'ing home.
Unfortunately, I'm unaware of a perfect solution but there are a couple of hacky options:
), not just when changing directories at the command prompt.
This will enable you to simply type ~ and have it chdir to your homedir.
One possibility is to use the subst command from a command prompt:
If you have the %'s around it, then it's going to utilize the variable - otherwise it will treat ~ as a command.
It's especially helpful for old programs with old browse dialogs that have drive letters at the topmost level, rather than "desktop".
The benefit is that unlike a doskey alias, it works universally (windows explorer, browse dialog, etc.
I used a batch file and just put it in my startup folder, but there are probably more elegant solutions to this.
Any time you navigate to drive Z:, you'll be looking at your user folder.