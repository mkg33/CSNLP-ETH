You could script the whole thing and redirect the output to an email or file.
Very useful if you have a laptop plugged in via serial consoles and you can't bring the computer with you.
I'd guess that this is because the process is still owned by its controlling-terminal, and it gets confused when that goes away.
hint: You can run the same instance of screen on multiple logins at the same time by invoking screen -x This is useful for ssh or just different terminals on the same computer.
screen can interact with serial devices.. just try screen /dev/ttyS0 or whatever the name of the device is!
If you are running multiple instances of screen, you will see the process-id's of each screen instance automatically, and you will have to specify the process by typing screen -r #process-id.
You have an echo at the end of the command line, but where is that echo supposed to go if you've closed the terminal ?
I think this might have something do to with the fact that OS 10 is based on Unix, and they don't use the same revision of nohup or something.
I'm not sure but I tried nohup on SunOS 5.10 and it didn't work the same way as on linux.
This brought my attention to a lovely program called screen.
If you're using bash at the far end, you could try adding a call to disown to reparent it.
You are right, it's not certain that it will work.
Use [CTRL] - A, then press D to jump out of screen.
As I remember, screen is available by default on UNIX/Linux systems.
I would be curious what would happen if you removed the echos at the end and ran it just as a test.