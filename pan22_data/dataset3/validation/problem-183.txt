If you do it this way you might start off the wrong way but at a point you'll either dream up, or bump into, a better solution.
From there, it should be straight forward to pick up any introductory text on computer graphics.
So if I learn only an API I might know it but I don't know if I can develop an interractive mini 3d world with it.
The problems you run into are what you need to learn, and hey, you're on the site where they can help you solve em!
It's very important to know about the basics of points, vectors, transformations, etc.
After dissing you on the other site I feel obliged to answer :)
I wouldn't call myself successful just having a rotating crate with the latest shaders etc.
I just know an API isn't going to teach 3D game development and don't want to be lost afterward.
As you go you'll bump into better ways, but those few can solve anything.
I'm reading a book right now on 2D using C++/DirectX.
Start with linear algebra - it lays the foundation for everything you need.
And I definitely think that these are subjects that can be picked up from just reading a book or two on the subject, as long as you have the mathematical background.
Should I be reading on 3D theory books before picking up on OpenGL/Direct3D, or any other suggestions?
My math skills are up to trig/linear algebra and still in college.
Add to the general trig, pythagoras, matrices and inverses/transpose (for projection), dot&cross product and what you use em for, quaternions (don't have to understand em, just know how to use them - you can do without but they are nowadays part of the basic vocabulary), and you can solve most problems you come across.
If you have a fondness for puzzle solving and reading up, you can reason most of it out yourself and with some help from the internet (comp.graphics.algorithms faq).
Most of the 3d problems can be solved if your 2d grasp is good.
I recommend '3D Math Primer for Graphics and Game Development'
I'm not any professional myself, but I did take a 3D Computer Graphics course in my university and it really helped me understand APIs I ended up using.
The best way is to set yourself a goal outside your grasp and force yourself to get there.
But that does not mean you should study it all before diving in.
UoWashington has a course online (no video, though): http://www.cs.washington.edu/education/courses/457/06au/lectures/
Hmmm, when I had to make my first 3D game some 15 years ago (had to as it was my job, that helps persevering) I had no 3D knowledge whatsoever other than high school math.
When I get into 3D I know I want to do it correctly.
I'm very book-oriented so that's fine if there's suggestions there too.
I did read the openGL bibles and http://www.amazon.com/Computer-Graphics-Principles-Practice-2nd/dp/0201848406 (warning oldskool) as they give valid background info.
I'm a software engineer and I'm hoping to move my career towards game development.
If you're impatient you can start with the graphics course without linear algebra, but believe me when I say it will come back to bite you :)
MIT has a good video course: http://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2005/
Very clear, to the point, relevant - with C++ code and all.