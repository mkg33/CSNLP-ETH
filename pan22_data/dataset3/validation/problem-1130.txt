When the distance traveled exceeds the distance light is able to travel in the current delta-time timeframe, you simply store the current data of the ray in some data-structure and continue computing it the next frame.
You would need a game which takes place on astronomic scales for the speed of light to have any observable effects.
It would be possible to create a raytracing renderer which does this.
You would just need to know the delta-time of the frame you are calculating (time since last frame) and keep track of the distance each ray traveled (which you often do anyway in order to implement certain effects).
You might need some more memory and you might have to calculate a couple more rays per frame, but there are a lot of quality tradeoffs you can make in raytracing to get down to what your target platform can manage.
But the question is if there is a use-case for this feature.
Most games take place on scales where the speed of light isn't relevant.
But most games of that kind take place in science fiction scenarios where the speed of light is conveniently ignored anyway for narrative reasons.