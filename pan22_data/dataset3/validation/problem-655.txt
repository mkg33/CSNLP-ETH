edit the files on the 'master' server, svn commit them, and either a cron job or ssh can run then 'svn update' on the 'slave' servers.
and making svn an essential part of the process ensures that every change is committed with a time-stamp and an explanation in the commit log.
using make like this ensures that every step is done in the correct order, and that no step is forgotten.
even on the 'master' server, everything is driven by make.
of course, many would use puppet or something like it to do this.
there were similar tools around before puppet, but puppet is the first one i've seen that looks like it might actually be worth the trouble of changing...but it's hard to justify changing something that works well for something that only looks like it will probably work better.
generate hashed db user or group files from text, add or delete ip addresses from the nic, restart apache, and so on - any time when you can determine that a sequence of actions is dependant upon a file changing and/or another sequence of actions is a good candidate for using make to automate the process).
svn can be used to provide both version control and distribution of config files.
I tend to use ssh, and set up password-less access to allow the 'master' server to run a particular Makefile on the slaves - the Makefile runs 'svn update' and it's filestamp-based dependancy rules then decides what other things need to be done (e.g.
the Makefile figures out what needs to be done (svn commit, generate config fragments from source input files, 'ssh make' to other servers, etc).
if i were to start over from scratch, i probably would too....but i've been doing it like this for years, long before puppet was around.