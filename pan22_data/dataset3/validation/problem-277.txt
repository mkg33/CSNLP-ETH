I use fing quite a bit with my android phone, macBookPro, and windows machines.
I have a RaspberryPi connected to my home network via WiFi with a dynamic ip address.
I would suggest to setup an avahi daemon on PI which is essentially bonjour.
I now want to write an Objective-C app that can find the Pi on the network, regardless of it's ip address, and send it commands.
Of course the easiest solution would be to get your DHCP server serve a fixed IP address to the Pi.
You could install netatalk (Appletalk for 'NIX) on the Pi.
I just want the Pi to somehow simply broadcast on my network - "Hey, I'm RasberryPi and my IP Address is 192.168.0.5!
I then have my iPhone connected to the same network also via WiFi.
You could also just configure your router to always provide a static IP to your rPi's known mac address...
On the non-Pi side, you could instead use a program like "fing" from overlook soft to detect which IP address is being used by the raspberry Pi.
on the iPhone side it's fairly easy to implement as all Apple's hardware plays nicely with bonjour and api is very well documented.
I set my PIs up with static IP address via the MAC address table in the DHCP settings of the router.
If this question is just about programming it would be better asked on Stack Overflow.
The Pi has a lightweight c++ HTTP server running on it that can execute commands.
Can somebody please suggest a package or solution to this problem?
Perhaps filter by mac address or description of connected device.
Depends on how production-safe you need it to be, versus home grown and works for your own needs...
Set the PI up to periodically broadcast the IP message or the PI to listen for a "Whats your IP address" and then reply with the IP message via on UDP which can be sent to the whole network via the broadcast address.
I haven't played with integrating it with a separate application - it does take line commands, but that could get a little clunky.
So, Universal Plug and Play seems like the logical solution - but everything I find on Google is dealing with Media players and streaming audio/video content.