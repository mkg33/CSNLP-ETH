I believe this is the right part of the reference source:
now, assuming there's some internal state of the transform from which the eulerAngles' property is derived - I assume it's the 'rotation' quaternion.
The other answers are correct, it's a property that returns a copy when you get it, but when you set it, converts the value to a quaternion.
I would guess youre accessing not a copy, but a prop with its setter routing to the real value stored inside a database withing unity.
Vector3.Set would indeed just set the value of the local prop this way,
I think so because ive heard that unity's implementation relies on an entityComponentSystem and inside the metaData of unity's Transform comopnent
I assume that eulerAngles is a property that encapsulates more than basic setter logic.
By the same logic, the getter 'eulerAngles' is compiled to
'All of what I write here is an assumption, based on the API.
we can see that eulerAngles is an undefined prop and Set(x, y, z) a delegate/action or something, maybe to obscure the implementation
= new Vec3(..) would make use of the setter of the prop (wich implementation details i couldnt find)
Then the setEulerAngles method rotates 'rotation' using quaternion mathematics, by converting the given vector to a quaternion.