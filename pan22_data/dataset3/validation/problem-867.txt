In general, avoid using self-signed certificates unless the network is trusted.
MongoDB can use any valid TLS/SSL certificate issued by a certificate authority, or a self-signed certificate.
This operation generates a new, self-signed certificate with no passphrase that is valid for 365 days.
Once you have the certificate, concatenate the certificate and private key to a .pem file, as in the following example:
If you use a self-signed certificate, although the communications channel will be encrypted, there will be no validation of server identity.
when I connect to this server with mongo shell, I can use below command without pem file:
As per MongoDB documentation here Before you can use TLS/SSL, you must have a .pem file containing a public key certificate and its associated private key.
Using a certificate signed by a trusted certificate authority will permit MongoDB drivers to verify the serverâ€™s identity.
I am using nodejs mongodb driver to connect to a self signed mongodb instance.
I wonder what the PEM file is used for in the connection.
Below is the command to launch a self signed mongodb instance:
Although such a situation will prevent eavesdropping on the connection, it leaves you vulnerable to a man-in-the-middle attack.