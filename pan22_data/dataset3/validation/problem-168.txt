This Python tutorial will teach you how to build your own decision tree model from scratch.
There are several marketing data vendors I know of that maintain small-business databases with columns of data similar to what my company has.
Question: Using the data my company already has, how I can I identify which customers in the vendors' databases have the highest potential of becoming a customer if marketed to?
If you had data on businesses who you tried approaching, but ultimately did not become a customer of yours, then you could try applying supervised learning.
I think that your problem would be well suited for Decision Tree Classification.
I work for a business-to-business company that has a large database of existing clients (small businesses) with various columns of data (e.g., industry, credit-worthiness, financial data, etc) describing each client.
You could try unsupervised learning -- e.g., a one-class classifier -- but I don't expect it to be particularly effective.
The presentation that I linked to should give you a good overview to learn about decision tree models.
The problem is that you only have positive instances (businesses who have become a customer) but no negative instances (businesses who haven't become a customer).
With this knowledge, and through searching many more decision tree examples online, I'm sure you'll find yourself in a good spot!