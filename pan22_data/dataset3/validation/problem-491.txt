Keep in mind authentication is NOT possible with RIPv1, only RIPv2.
Misconfigured hosts (usually UNIX sysadmins forgetting to add the -q / quiet option to ripd) would advertise bad routing into a shared subnet.
So, yes, RIPv1 was (is) certainly vulnerable to receiving bad information (intentionally or otherwise).
This would not only cause the other hosts in the network to start sending traffic to the wrong place but could (would) propagate through the routers to the rest of the environment.
RIP was created long before the Internet was commercialized.
It's not necessarily the use of UDP per se that's the origin of this but rather a fundamentally obsolete protocol implementation (regardless of protocol choice) as well as bad/sloppy practice on the part of network engineers.
Since it is easy to fake your source IP and source Port in your headers, what keeps anyone from poisoning routing tables via RIP?
It seems to me like I can easily flood routers with fake information messages under this circumstance.
I know that UDP is a connectionless transport layer protocol.
Several elements of best-practice came out of this:
Today, there are options for secure authentication of RIP updates.
For example, RFC 4822, RIPv2 Cryptographic Authentication:
The correct way to secure this communication on the network is to require MD5 authentication.
Route table poisoning used to happen accidentally (and with some regularity) when RIP (v1) was commonly used as a mechanism for end hosts to find redundant gateways in the days before FHRP's (i.e HSRP) came into use.
Here is a Cisco doc on this for a more practical example