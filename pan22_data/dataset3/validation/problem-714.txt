This way, any of your keyholders can leak the plaintext document; but in order to prove its legitimacy they must reveal their version of the signed statement from you, which in turn reveals their identity.
With this scheme you could require any number of collaborating keyholders in order to release the document to the public, but only one of the keyholders would have to reveal their identity in order to verify the document's legitimacy.
That way, no individual keyholder can read or reveal contents of the sensitive file without collaborating with one or more of the other keyholders.
For even further protection, you could encrypt the plaintext document given to each keyholder with a key split among the keyholders using Shamir's Secret Sharing algorithm.
Then provide each of your trusted keyholders with a plaintext copy of the document, along with a cryptographically signed (with the corresponding private key for the public key you just published) statement from yourself which both corroborates the document's legitimacy (e.g.
includes a hash of the document), and mentions the name of the keyholder you are giving this statement to.
Rather than publishing the encrypted file itself, publish a copy of your public key.