If you go with the t2 instances you also need a load balancer, which if you do 50GB/month is around $20 extra (I think).
I recently switched from a small VPS provider to AWS EC2.
t2.micro has 1GB memory, you might find a large t2 instance works better if your application is memory intensive.
For those who don't know about it: micro instances are very cheap and you get 10% baseline usage of 1 CPU core.
Eight t2.micro instances comes to $86/month, one m4.2xl is $350 a month.
without GUI) and would leave more of the performance for the actual hosting tasks?
My traffic usually comes in bursts throughout the day and I therefore concluded that running multiple t2.micro instances would be by far the most economical solution.
You should probably look into optimization, because needing 8 cores is pretty heavy duty.
The CPU utilization when the server isn't serving requests is around 0.03%, and I get to maximum CPU credit fairly quickly.
You also need to architect your website so you can serve from multiple web servers rather than one big one, which could mean you need to pay for a RDS database rather than running it on your instance - or run it on another t2.
However, you are allowed to use up to 100% for short bursts if your average use stays below those 10%.
It is therefore much cheaper to run 10 micro instances (0.15$/hr) with potentially up to 10 cores running full load simultaneously for short bursts, than having some similar performance with one large instance (e.g.
The only disadvantage of the micro instances is that they would have to run 10x the base usage for the OS compared to a single large instance.
Caching pages by anonymous users, even for a short time like 5 minutes, has huge benefits.
If you say exactly what you're serving you may get better advice.
I have an Amazon Linux server (no GUI), which is somewhat similar to Ubuntu, but not the same.
I currently use Windows Server which already uses a good chunk of the 10% allowed CPU usage.