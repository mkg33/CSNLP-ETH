Node is public; I'd change that to private since the outside world should never use it anyway.
Checking if a queue is empty is a fundamental method of any object oriented queue.
This isn't userfriendly since I might very wel want to construct it first and then add 5 bazillion elements to it.
You don't have a parameterless constructor which forces each queue to be instantiated with 2 elements.
Your code already allows it though: technically first can never be null as it is, yet you check for it.
I was looking into your Stack question, and noticed you were missing boolean isEmpty() method, and I see you are missing it here, too.
Your code doesn't work; executing it will return 2 and -1, not 3.
This happens because you don't set the next property of the nodes that are passed in to the Queue(Node, Node) constructor.
And you should always check if a queue is empty before calling pop on it, in other words you should never call pop on an empty queue.
Right now you only accept integers; perhaps you could make it generic to allow for each type?
See here for example the canonical use case of queues, a breadth-first search, from wikipedia: