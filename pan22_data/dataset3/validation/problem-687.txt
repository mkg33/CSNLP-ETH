For instance, here is the normal function prototype for a IXMLDOMNodeList:
Here is the "smart" version of that function for IXMLDOMNodeList object:
The source code is in an automatically generated .tli file, so you can always know what they do.
If you have access to comutil.h, you can use the _bstr_t type instead of BSTR for automatic memory management as well.
These smart pointers come with simplified function calls.
This allows you skip the error checking (it throws an exception on failure).
Just looking through this file can help you partially learn how to use IXMLDom.
You also have access to the source code for these new functions as well.
If you have access to MSXML, then you can use smart pointer wrappers that allow you to avoid worrying about releasing the objects.
The .tli file is usually located in C:\Users\*User*\Local\Temp\msxml6.tli.
Here are a few examples of using the smart pointers.
MSDN documentation for this is a mess and for the most part, inadequate (it's better than MSDN's C++ ADO documentation though).
I used standard library containers such as std::string and std::vector, but you could easily change these out with CStrings or other string types.