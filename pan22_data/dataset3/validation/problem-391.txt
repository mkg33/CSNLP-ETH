The point of declaring a variable like this would be if we reused it multiple times within the method--as it stands, we don't re-use it, so we don't need to create the variable.
I was told previously that when defining static variables I should keep their scope as limited as possible, so you will notice that I defined these inside of specific methods instead of at the top of this file.
I just finished a model class that represents an Instagram Networking client for my iOS app.
So, first of all, if you use it in more than one method, it variable should at least be scoped to the class or file you're using it in.
I am specifically looking for a review of my use of static constants.
I want to make sure I am following best practices.
One thing that is bothering me though is the fact that I have other classes observing for these notifications and also accessing the passed userInfo dictionary when the notification posts.
The whole point of notification is that one object posts the notification, and as many objects who are registered can receive the notification.
In this case, since we're only ever using this string once, it's fine to just use the literal string directly in the method call.
Redefining it every time you use it absolutely defeats the purpose of having a variable at all.
These are strings that represent notification names and notification userInfo dictionary keys.
I basically  just copy/pasted the notification name's static string and userInfo dictionary key string.
The scope of a notification name should never be limited to a single method or function.
Though... if we do create a variable, it should follow proper camelCase naming conventions.
This is definitely wrong, and I feel like these variables might need to be placed into a single file that would be included in the precompiled header, but I'm not sure if this is the correct approach so any advice on this would be greatly appreciated.
Moreover, you've defined these identical constants in multiple methods.
Second, this variable actually needs to be defined in the .h file.
If other objects are going to register for this notification, they need to know the name of the notification, and the best way to let them know the notification name is by giving them a variable in the .h file to use rather than having them look up the notification string.