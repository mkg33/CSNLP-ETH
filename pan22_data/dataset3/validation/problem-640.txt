        if     (ball.direction == UL) { ball.direction = UR; }
        else if(ball.direction == DL) { ball.direction = DR; }
            else if(this.x + this.width == gameObj.canvas.width)
The user can also control the ball using arrow keys.
    else if (gameObj.key && gameObj.key == 39) {  /* RIGHT */
    return Math.floor(Math.random() * (max - min + 1)) + min;
    ball = new component(100, 100, 0, 0, "http://www.bit-101.com/blog/wp-content/uploads/2009/05/ball.png");
        if     (ball.direction == DL) { ball.direction = UL; }
        var ctx = gameObj.canvas.getContext("2d");
            ctx.drawImage(this.image, this.x, this.y);
    else if (gameObj.key && gameObj.key == 38) {  /* UP    */
        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
        if     (ball.direction == UR) { ball.direction = UL; }
        this.canvas.width = document.body.clientWidth;
This program basically creates a canvas element with a ball bouncing off the walls of the canvas.
    window.addEventListener("keydown", function(e) {
        this.canvas.height = document.body.clientHeight;
I've just completed reading the game tutorial of w3schools and wrote a piece of code from scratch.
I'm planning to make this into a small game by creating some obstacles etc
        else if(ball.direction == UL) { ball.direction = DL; }
        else if(ball.direction == DR) { ball.direction = DL; }
    this.direction = getRandomInt(1, 4); /* At the start, choose a random direction */
        else if(ball.direction == DR) { ball.direction = UR; }
    else if (gameObj.key && gameObj.key == 40) {  /* DOWN  */
 * Returns a random integer between min (inclusive) and max (inclusive)
            else if(this.y + this.height == gameObj.canvas.height)
        if     (ball.direction == UR) { ball.direction = DR; }
    if      (gameObj.key && gameObj.key == 37) {  /* LEFT  */
    window.addEventListener("keyup", function(e) {
Before I proceed for further development of the game, I want to get a review of my code.