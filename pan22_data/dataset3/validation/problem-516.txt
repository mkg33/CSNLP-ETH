Then you train your algorithm with the data in the training set, and test the accuracy of the model with the data in the test set.
Let's say we are predicting the sales of a shop and my training data has two sets of features:
What happens if there are holes in my test data feature set, let's say for some rows in the test data, I don't have the "Promo" values.
You say that you test data doesn't have two fields, but that can not be correct.
The accuracy you get is the probability that your model is correct.
I think there might be a problem in the way you are stating the problem.
Is it logical to assume that the second matrix about the Store types is static and I can easily join it to the test data?
I can easily train a classifier based on the bulleted fields above to predict Sales but how can I make use of the second matrix in my training data that I would not get in test data?
Or said in another way, the next time you use your model to predict a sale, the accuracy is the probability that your prediction is real
But in my test data, I only have information in the first matrix without the Customers and Sales fields.
The second matrix describes the store type, the assortment groups of item each of them sell and the distance from the nearest competitor store.
You have to take all your data and split it into 2 groups, the training set and the test set.