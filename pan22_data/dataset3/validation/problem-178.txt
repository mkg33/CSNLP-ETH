The big problem with security is that it is impossible to do fully automatically.
IPSec being implemented in a separate package still means that the whole complies to the standards.
Doing all these operations in user-space increases security and reliability, and allows new authentication or key-exchange protocols without having to rebuild the kernel.
They take care of authentication and key exchange (IKE, IKEv2, Kerberos); they maintain the key assignments (static key for host X, an X.509 cert for host Y); they tell the kernel about new and dropped security associations.
However, you still need software that would manage those encryption keys â€“ this is where Racoon or StrongSwan come in.
implement unless you have a very good reason not to) in the latest RFC updates.
If it was, then anybody could automatically join in ;-)  Setting up a system for managing public/private keys, certificates etc (PKI: Public Key Infrastructure) is always the challenge when doing this kind of security.
In addition, many of these protocols already have well-tested implementations in user-space; doing everything in the kernel would require duplicating a lot of code.
It is mandatory for implementations to support IPSec for IPv6, but it is not mandatory to enable it.
The Linux kernel supports IPsec in that it can automatically and transparently encrypt/decrypt ESP packets, or add/verify AD headers, when given the encryption keys.
And even the mandatory (MUST in IETF language) is being changed to a very strong recommendation (SHOULD in IETF language, i.e.
PS: that IPSec is required doesn't say anything about where it is implemented.