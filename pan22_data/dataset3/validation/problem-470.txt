As to what version of .NET Framework you have installed, this is an incomplete picture.
NET-Framework-Core is the actual .NET framework, which is installed.
It also tells us that you don't have .NET Framework 3.5, which is how you get lower version .NET Framework support as well.
Windows Server 2012 R2 Installation Options and Features on Demand (Part 5 of 5)
"When a featureâ€™s payload is removed from an installation, it is deleted form the side-by-side store at %SystemDrive%:\Windows\WinSxS."
It tells us that you have .NET 4.5.1 installed (which comes with Windows), which fills any requirement of .NET 4.0 - 4.5.1.
As SimonS says, it's only needed if you're hosting applications on that server, not for running .NET-based apps.
Otherwise you would not show a CLRVersion of 4.0.30319.33440, or a PSVersion of 4.0.
If you are interested in the "Removed" Install State is and how to restore the payload:
There is a tool I actually just found recently that can help determine what version is on a given system, although being a GUI program, I'm not sure it'd help on a Server Core install.
If you run Get-WindowsFeatures without the filter, you'll see that "AS-Net-Features" is part of "Application Server".
However, there have been a few .NET Frameworks released since then (4.5.2, 4.6, and 4.6.1), and if you installed them, they'd be in the installed programs list, not Windows Features.
It's called the .NET Framework Setup Verification Tool, and can be found here: https://blogs.msdn.microsoft.com/astebner/2008/10/13/net-framework-setup-verification-tool-users-guide/
PowerShell is part of the Windows Management Framework (WMF), each version of which has a dependency of a version of .NET Framework, but they're not like-for-like.
$PSVersionTable.PSversion lists the version of PowerShell installed, not the .NET Framework.