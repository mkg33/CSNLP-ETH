The ugly hack solution is to double-up your edits, so you can be sure of what the correct historical pageId will be.
But even better to have something similar to https://marketplace.atlassian.com/plugins/com.k15t.scroll.scroll-versions
After editing the page to create version 3, my saved link now points to the version 3 and not to version 2 as expected.
This means that there is no way to predict what the pageId of a historical version will be when it is currently the latest version.
I know how to get a link (Tools/Link to this Page...) and the saved link looks like this "http://wiki/display/OneSource/EEPROM".
For example, your current page has pageId 21364790 and version 2; editing the page creates a new pageId 21364791 as a copy of the previous version, and updates 21364790 with your changes.
When I return to the March report and select the link I saved, version 3 loads, not version 2 as I expected.
AFAIK, you can't without a custom plugin to handle links with versions.
I need to store a link to that page in a report for auditing purposes.
From the history page I get this link to the current page (http://wiki/pages/viewpage.action?pageId=21364790).
Say today (March 11th) I edit a page in Confluence and the new page is version 2.
You could then access the correct version using a URL like http://wiki/pages/myviewpage.action?pageId=21364790&version=2.
You can do it manually by specifying the version of the page in URL - http://wiki/pages/viewpage.action?pageId=21364790&pageVersion=1
Now next month I need to update the page so I create version 3.
We use Confluence for documenting business specific processes.
How do I get a link to version 2 for my report that will always point to version 2 when version 2 is also the current version?
Confluence will always use the pageId of the original page as the latest version and insert a new pageId for historical versions as they are created.
Not to worry as I see that I can get a different link to store in my report.
The more elegant solution is to make a plugin providing a copy of the XWork viewpage action, and giving it a version parameter.