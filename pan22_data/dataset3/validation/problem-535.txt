Get a datasource name attached to your database in the CF administrator and you are seconds from having a data driven website functional.
Most people will stick with PHP, ASP.NET or J2EE as they're mostly free and will probably work just as well.
If you can answer yes to both of those, then you are only a handful of tags away from being able to write CFML.
The overhead of learning the language is almost negligible.
As with all systems, the advanced stuff takes longer to learn, but ColdFusion prides itself on rapid application development - the ROI for a developer's time is great, and salary is always the most expensive component of a software project.
It has solid abilities to consume SOAP or REST webservices.
While I haven't used it in years, the newer features today make it seem more compelling than before and in comparison to free alternatives.
You refer to .NET as an alternative - how much does a Visual Studio licence cost?
You can learn the basics very quickly, and get a really good return on investment.
The license cost is insignificant over the medium to long term.
I've used Adobe ColdFusion since version 5 - from my perspective it continues to get better.
If time is a factor for development, ColdFusion is probably the better choice.
(You can purchase maintenance which typically includes the next major release for free.)
Adobe has also introduced a free academic license.
You need to know HTML and SQL before you can code in ANY other web programming languages, which along with cfquery, cfoutput, cfif/else are about all you really need to hit the ground running.
There are other CFML engines emerging - Railo is wicked fast and free, OpenBD also has free versions.
You can create PDF's, talk with Microsoft Exchange, dop down and call Java, or drop down and call .NET.
I've always looked at ColdFusion as the "rapid web app" of choice with lots of bells and whistles.
Then how will you query a database in any language?)
The CFWack is a great resource that will see you getting data out of your database and into web-based reports with very little effort.
I used ColdFusion as far back as 4.5 back in 2000 and up to ColdFusion 6 (MX?).
Adobe ColdFusion is a complete package and bundles third party components, some of which contribute to the licensing cost - eg performant database drivers.
Version 8 was an amazing upgrade, and version 9 (which is in public beta) looks to be better yet.
Add to that, while it can do a lot, the syntax is relative easy to learn, and most operations can be performed with a very little bit of code.
Add to this in ColdFusion 9 that you can communicate with SharePoint and Office Documents.
Back then the biggest reason for ColdFusion was it's simplicity and that within the language, you could create some impressive web applications in a much shorter time frame than ASP/JSP/PHP.
ColdFusion does have a cost, but I make the argument that the value ColdFusion provides is worth more than the cost.
I echo the sentiments about it being cross platform, but a big part of the picture is the built in capabilities.
Here's what I tell anyone who's considering ColdFusion:
The tldr version of my answer: don't be put off by the price tag on the box.
It may not be for everyone, but if your looking for specific features that ColdFusion offers, it may be the better option.
Then how will you write websites in the first place?)
The end result is a tool that can talk to nearly every other system out there, and that functionality is built right into the standard product.
One of the most popular IDEs for CF developers is free open source - the CFEclipse perspective for Eclipse.)
Coldfusion code is VERY readable if you understand HTML and SQL.