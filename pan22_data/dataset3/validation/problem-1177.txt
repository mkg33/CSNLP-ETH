If you are using Microsoft NLB then it runs on all the machines in the scale out cluster and handles machine failures automatically.
But how do I make a two web-server setup fully redundant?
Assuming hardware load balancers, they can usually be setup in an active/passive cluster for failover using their native configs.
Traditionally, the load balancer is a tier by itself on its own servers with its own redundancy and failover.
Haproxy will loadbalance to both webservers and heartbeat will provide failover taking over a virtual ip if one of the servers fail.
Install haproxy on both servers along with heartbeat.
If you are using a software load balancer (not Microsoft NLB) then look for one that is VRRP compliant, and use VRRP to handle the fail over of the load balancer.
How do you guys normally solve this kind of problem?
If you are limited to just two servers, you could do worse than DNS round robin with a load balancer on each machine pointing at each other.
Got a simple scenario with two web servers for redundancy and to scale.
http://www.howtoforge.com/high-availability-load-balancer-haproxy-heartbeat-debian-etch