I'm biased; as a developer and entrepreneur, I went through the process you're going through, and I decided that it didn't make sense to front-load the effort and back-load all the benefits, so I started Cloudvox.
Your apps still run on your server, and they tell Cloudvox what the phone call should do (over the Internet).
Does anyone know of a good hosting provider for asterisk?
Make sure you at least lock down your /etc/sysconfig/iptables rules so that only your Asterisk ports are open, and then only to IPs that will be connecting.
Cloudvox is free to sign up (as are SIP calls, like for testing), so I'd encourage deciding for yourself.
How much of the stack do you want to run yourself?
If you're looking to do that yourself, Lylix - or any dedicated server provider - is a viable solution.
Of course I could always install asterisk myself on a godaddy vps, but figure it will be easier (and in the case of lylix, cheaper) to have it done for me.
Cloudvox lets you write and operate Asterisk phone call apps, associate SIP phones, send and receive SMSes, get realtime status via a self-service Web portal, and consume a simple REST API for phone numbers and the like.
I have been using Lylix for nearly a year now for my home and business and it has been rock solid.
I came across lylix but don't know if they're any good.
On the other hand, if you want Asterisk without most of the effort, Cloudvox may be a good fit.
By that I mean the work required to run a telephony hosting environment.
Since we expose the same protocols (AGI, AMI, SIP), you can still use Adhearsion, PHP-AGI, Asterisk-Java, and other native Asterisk libraries, plus SIP phones and lightweight JSON HTTP scripts.
Stuff like configuring and maintaining Asterisk and Linux (like the security note above), tweaking and/or licensing call-related features (ie, text-to-speech, g.729, conferencing muxing/audio latency, DTMF), choosing carriers, troubleshooting app problems, and maybe scaling it.