While gluLookAt defines a point in the scene at which to look at, and the position of the eye.
I want to project the scene to that square and show that projection on screen.
I have this problem: I have quite a complicated scene, and I am looking at it from the front (default camera position).
I am using an ortographic projection (glOrtho()), so everything is projected onto the projection plane.
I hope that made it a bit clearer what I need to achieve ...
Is there a way to set the camera using this data rather than a "look at" point?
So I have a scene somewhere a space, and a square somewhere away from that scene.
The way I have seen to move the camera is using the gluLookAt() function to set the point you want to look at, and glTranslate3f() to move the camera position.
I am duplicating this thread from stackoverflow, please remove it if that is not allowed.
For easier understanding what I am trying to achieve.
I have in fact not only the plane, but the square to which I need to project, defined.
While eye is one point in space and projection offers perspective, with ortographic projection, you do not have one point, you have a whole square on which to project to, so how can I define that?
I need to move the camera with different data - my data is not the point I want to look at - rather, I have the data of the projection plane - determined with a viewing vector and a point in the plane.
UPDATE: To be more precise: the point I have is a point in the plane, to which I want to project to.