I find that because they happen to be laid out in the way that I learnt these topics for the first time, they reflect better the way the knowledge is structured in my head and I can more readily understand what they're talking about.
You might find scouring your notes for these sorts of thing useful.
feel good with the idea that your mind is not like your computer harddisk.
You may use them later in your life to solve completely different problems (ones you never saw in your schooling life).
The career of a (good) programmer is one that involves life-long learning.
Then go to your books and refresh your memory on how to implement the algorithms.
It'll probably happen again, and then again, and all of a sudden you find you know this concept backwards.
Of course there's probably a lot of useful tidbits inside all your notes and textbooks that would come in handy.
What you should remember isn't the problem solutions, but how you solved them.
When you start your programming career, problems aren't going to pose themselves like this:
When you come across something you've forgotten or never actually learnt, you just look it up and hopefully your foundational skills and competencies that you developed at school and along the way will mean a shorter time in picking it up.
When you do see problems to solve later, and you take efforts to solve them -- that is when you will continue to 'remember'.
I think Richard Feynman said too many people memorize useless facts that could just as easily be looked up in a book.
That's the real trick; the problems are different almost every single time.
Stuff like little gotchas and useful code snippets that are hard to remember.
As others have said, if you really want to retain as much as possible, the best solution is just to get stuck into practicing the concepts by writing your own software or contributing to open source projects.
However, while you will not recall the method to solve every problem you can work on today,
I recommend a Supermemo type of flashcard software.
So, while you will forget the techniques, the general concepts will be soaked in your brains.
But don't stress about forgetting details, this is just an inevitable fact of life.
I keep my own local wiki to try and collect all these sorts of things for quick reference.
I would not worry so much about forgetting what you've learned.
Having finished my CS degree a while ago, I have indeed forgotten much of the details of what I learnt there.
The point is not to teach you everything thing you will need to know about various topics important to your career.
Learn how to look at problems and abstract them so they become something you learned how to solve elegantly in school.
(What I find useful is to introduce wickedly difficult problems that lie in wait for me for months, then strike without warning on a three day weekend.
Ah, If only there were Git for my brains, I could say I haven't lost my mind, its backed up somewhere.
Concentrate on recognizing problems and knowing where to look up the information on how to solve it.
The way it remembers things is (in some ways) more like the content-addressable-memories in there.
At uni/college, you're learning core skills in a specific area and you're also learning how to go about learning those skills.
I don't really think that's too big a deal though.
In that sense, you have something no computer manufacturer can afford --
Also, I like to hold onto my textbooks and course notes for a while.