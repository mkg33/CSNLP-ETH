VMWare also has a free server product (VMWare Server) that you can use.
Yes, I know that adds up in licensing, etc, but if my memory serves, MS lets you run a single Win2008 license in a single "bare metal" server and up to (2?/3?)
If the only cost is hardware purchase, go for the 2 machines setup.
Even if for some reason (rack space/power/cooling) you're limited to a single "hardware" server, then I'd recommend to get a powerful one, and to look into virtualization to split the load into 2 logical servers.
Would my money be better spent upgrading to a single Xeon machine or splitting database and asp.net front end between the lower spec Core 2 Quad Core systems?
The server is normally at 95% CPU usage with sqlserver.exe, w3wp.exe and  my processing app taking up most of the CPU resources and the majority of RAM is also being used - which I understand is normal.
I'm running an ASP.NET website with a SQL Server database and another server side application  which does processing to support the website on a Windows 2008 Web Server 32bit operating system.
In the long run, it's normally much simpler/cheaper to scale out (ie, add more servers to the same problem, see google ;) than to scale up.
Of course, normally DBs are harder to split so if you're lucky and become extremely successful, the DB might become the bottleneck.
Two boxes will more than double the complexity of your system and more than halve your reliability.
There is the very real possibility that you'll wind up with a system that's slower than your current system if you rearchitect it without understanding exactly why it isn't fast enough.
The most reliable way to make your system faster is simply to replace it with something that is exactly the same but faster.
Also, splitting the app in frontend/backend sooner than later will enable you to grow painlessly; as your load increases you might need more application servers or DB resources, or... so the sooner you make sure your app can be split/spread, the sooner you find any lurking dependencies/issues that might arise later on.
Also, security-wise, it's better to have them split apart, so that a vulnerability in one of them does not mean the other service/server fails directly.
It appears for the same price of upgrading to one Quad Core Xeon 2.66Ghz X3353 is around the same cost of running two Core 2 Quad Core Q8200 systems.
Of course, now you have two servers that you have to:
If so, then splitting them is almost a must for security reasons, and I'd add a firewall in between.
I intend to invest some money into the configuration of my servers to improve the speed of my website and to support it as it grows and was wondering if anyone had any advice on the situation.
PS: My background is in security, not so much on Web Apps, so maybe what I'm saying is not the optimal solution, but I know that I'd feel more comfortable not "piling up" functionality on a single server/point of failure.
I prefer not to "mix" frontend and backend loads when possible.