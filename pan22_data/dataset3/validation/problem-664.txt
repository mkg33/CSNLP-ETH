When the class declaration implements that interface it has to fill in all the blanks and how they are filled in has to match how the interface declared them, the same return type and the same number and type of parameters.
Most students in that age-range have no personal experience with contracts, so the term is too abstract or remote.
If the form has five questions, and only four are answered, it is incomplete and thrown out as unusable, and no credit is given for doing it.
It is important to note that this documentation makes use of the same contract analogy you mention:
The idea of a contract is already a successful analogy, so I wouldn't try to necessarily reinvent the wheel here lest you introduce more confusion with a different analogy.
Other interfaces don't necessarily have a paywall, but they usually have terms and conditions (going both ways), plus the requirement that you provide at least a minimum of ID to use them.
A fill-in-the-blank survey has no right or wrong answers, only questions that need an answer, but the answer has to be the right kind.
Ultimately, simple, relevant examples that clearly illustrate why interfaces are of value and how they are central to human-computer interaction will probably be of more value than a different, clever analogy.
To implement an interface is to promise, to guarantee, that the class will come through on its end of the bargain and implement everything in the interface.
It lists the methods, their return types and their parameters, but they are blank methods that don't do anything.
You could have students use the word promise if contractual language does not hit home for them.
A few things jump out from the official Java documentation:
In turn, Kinko's agrees to provide you with a bunch of computer services, express or implied, for the money you are paying them.
Secondly, using contract to "define" the rules for using an interface is likely to lead to a circular definition when you define what a contract is.
A question about favorite color should not be answered with "scuba diving".
You may find this since-closed discussion on SO of value.
A simple example is when you go to Kinko's (FedEx), and you click on the end of the opening interface that you agree with the terms of use.
Putting it in the context of friendship and promises being made might make them understand an interface in a better way than legal agreements and contracts.
I believe that using the term "contract" is hurting more than helping.
Once they have a grasp on the rules for using interfaces you can use interfaces to explain what a contract is, and how using an interface is part of fulfilling a contract.
Using an analogy for how implement in the class declaration relates to the interface you could try using a survey form as an example.
As far as an example goes, the idea of a Remote as an interface works really well based on this explanation.
Using topics like design or hardware might be a good direction to go since a discussion of UI could build up into a more abstract understanding of the notion of an interface.
To increase comprehension for the students it is better to use something they already understand in explaining new concepts.