Make it clear to the decision makers that accepting this application implies entrusting every employee that has administrator access to workstations running the application with all the privileges mentioned above.
From a technical perspective there's no reason that an application would need SA permissions.
This way they can claim that the application requires SA rights.
(Don't get me started on the damage possible with unrestricted access to XP_CMDSHELL.
And make it clear that the amount of technical skill required to find a locally 'hidden' password is completely irrelevant.
The vendor will try to defend its stand by invoking some sort or other of 'encrypting' the sa password for the application.
See, for example, BOL: http://msdn.microsoft.com/en-us/library/ms175046.aspx
Perhaps your vendor is requesting/requiring "sa" because somewhere in their application they are using XP_CMDSHELL.
If you have to have this application then I'd run it on a separate instance that doesn't have anything else on it.
There is no encryption scheme that can withstand an attack from an administrator.
Suffice it to say that this potentially opens up not just your data but the host machine and, perhaps, anything else on your network to admin-like access)
If there's a legit need, you could give restricted access via a proxy account.
What probably happened is that the developers of the application probably check to see if their login has sysadmin permissions and if not, it simply throws an error message.
The employees are not going to do it themselves, one of them will google for it and discover the easy-to-use script that does it.