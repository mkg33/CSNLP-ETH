This will force the PCM510x to generate the system clock using its internal PLL.
On these purple PCBs there are 5 sets of bridging pads.
On the back (non-component side) there are 4 sets of 3 pads for the 4 functions:
Each of these function pads may be bridged with solder either high or low (or the pins connected to +3.3V / 0V).
The input pins SCK, BCK, DIN & LCK are fed through a resistor pack which should allow 5V signals to be connected to the 3.3V PCM510x chip, i.e.
*Note: LCK pin is actually LRCK (left right clock).
Raspberry Pi supports I2S bitstream so FMT should be low.
It is a shame that this description is not provided elsewhere.
The fast filter is an IIR with slightly poorer response and delays the signal approx.
The 2 'G' pins are connected to ground and are provided for convenience of wiring audio output jacks.
*Do not connect pins to a supply rail if the solder bridges are applied.
The XSMT pin would allow muting of the output via a GPI (if the solder bridge was removed).
You may bridge these pads to remove the need for an external SCK or connect the SCK pin to ground (0V).
On the front (component side) there is one pair of pads which may be bridged to tie the SCK (system clock) low.
The Raspberry Pi does not supply a system clock so this will be required to connect to the Raspberry Pi.
The centre pad is connected to the corresponding pin.
Simultaneous connection to both should be avoided.
The VIN pin goes to a pair of voltage regulators, one of which provides the 3.3V required by the PCM510x.
The 'L' & 'R' pins are directly connected to the 3.5mm jack.
The regulator is low drop so VIN may be fed from 3.3V or 5V.
The normal filter is an FIR with good response, delaying the signal by approx.
Very few (if any) audio sources have pre-emphasis applied so DEMP should be low.
(My board is supplied with 1, 2 & 4 bridged low and 3 bridged high, i.e.
normal latency filter, 44.1kHz de-emphasis disabled, soft-mute not asserted, I2S audio format.)