Google and a few others are currently proposing a new DNS extension at the IETF DNSEXT Working Group which allows open DNS services (such as OpenDNS) to tell Content Delivery Networks (e.g.
Using DNS to handle geo-aware redirection is commonly done, but is not always optimal.
Most times it might well be, but that's just a coincidence.
Akamai) what your real address is, but it's quite controversial because of the privacy implications.
The reason for this is that there's zero guarantee that the IP address in the DNS request is in any way correlated with the physical location of the user.
Every server caching the zone will round robin between all IP addresses it has.
What happens if the user is using OpenDNS - how do you redirect them then?
The "right" answer is application level redirection - have your servers look at the IP address of the actual HTTP request, and then redirect to another server (with a different name) if the client has hit the wrong server.
If you want efficient routing, you would have to publish your web servers under UNICAST IP addresses.
If the request are handled by the servers depending on the location from where the request originates then how DNS server resolves for such geographically distributed servers when my client system is configured to a local DNS server in Indian or a DNS server in Malyasia ?
A domain abc.com has two web servers located in two different location one in India and another in Malaysia.