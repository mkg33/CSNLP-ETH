Even modern smartphones are very limited, though they are reaching something in the direction of PlayStation 1 or better as we speak.
This raises a question: Is there a machine (be it a computer or a console) from the past that would be a good learning platform for someone that has never touched low-level code?
However, I can't say anything about the legality of homebrew DS development.
If I were doing it I would choose the first computer I had, Apple ][c...
J2ME Java for mobile phones might be another suitable choice : Eclipse is free and test devices (for example S40, S60 Symbian phones ) easily available for cheap.
Returning to a legacy machine which you have no emotional tie to seems pretty masochistic.
In the old days a processor would primarily be limited by it's ability to perform calculations, today it is much more important how fast it can access data and resolve branch instructions, because getting plenty high performance in raw calculations is no feat.
Seeing as today's machines have insane computing power and near endless memory, it's tough for a hobbyist programmer to actually hit the limits of his machine without doing something totally boneheaded.
An example 256 Mb RAM can be tanked fairly quickly if you load up everything in a medium-sized game.
You don't really need to go back that far to find limited devices.
I'm very much looking at this from the perspective of someone that wants to understand exactly how to get the best out of the specific set of hardware a machine has.
Obviously if someone has ideas that don't fit the exact parameters of the question, I'm open for that as well.
At best learning an old architecture would be a waste of time, at worst you teach yourself the wrong stuff and end up writing slower code for modern computers.
While development for the DS is limited to licensed developers, there is a pretty active homebrew scene and there are several emulators.
As we are on gamedev here, I'd suggest looking at the Nintendo DS with its 67 MHz processor and 4 MB RAM (see here for some specs).
And really, it is not just more useful to know a modern architecture, the new processors also have a quite different performance profile.
I'd imagine that the internet probably has manuals for most well known older machines, and it shouldn't be too hard to find an emulator of some sort either.
I say go for modern X86, just because the processor is fast doesn't mean you can't benchmark and optimize.
There is lots of good information on DS development around the internet.
You can also run your programs on the actual device using special gamecards.
The software you need for development is known as devkitARM and can be found here.
I'm just at a little bit of a loss when it comes to actually choosing a good platform to go for.