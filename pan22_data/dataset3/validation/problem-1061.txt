It would probably require some driver programming, and wouldn't necessarily work on all computers depending on what type of driver it's using?
Tricky part would be to trick the computer into writing onto the disk when it's not empty.
When the setup program is ran, it communicates with a server somewhere.
The server then returns a cryptographic key along with binary data that is necessary to run the setup.
It sends the unique identifier and the server flags it as used.
You also have to run a verification server which would be expensive.
If someone tries to run the setup again off the same CD it will once again contact the server with the identifier and receive a response that it is flagged and no longer usable.
The only way I can see this being possible is burning a specific identifier into each disc.
The problem with this is that the person installing it has to have an internet connection.
You probably have enough room on the disk to have a program that will copy itself into memory, and force a write of 1s to the CD even though it's not blank anymore, and then force a write of 0s to the CD after all 1s has completed.
The setup program could shred or encrypt the contents after installation of the software and finalize or corrupt the disc (providing the user is using a dvd/cd burner to install the software).
Think like the Windows install - protected by a key, individual code, username / password e.t.c.
Someone would probably crack it anyway and just have it skip the server check.
You really need to look at DRM instead, where you can activate online and authenticate each installation.
Even though it's not a rewritable, I think if you do it enough times, you should be able to corrupt the data.
This would be possible with a disc that hadn't been finalized but appeared to be finalized by the os.
What stops an user from creating an ISO of the CD and making tons of copies before running anything even if somehow the setup program destroyed the CD?
Anytime you receive data and it is on your computer, there is a way to dump it for later use.
Someone could disable the check and just inject the server response.