The disadvantage of this approach is that it is very coarse-grained - you can only recover at the level of the tablespace.
You can take an RMAN backup of the DBFs and an RMAN backup of the archived redo logs and recover your database to any point in time up to the time of the most recent archived redo log backup.
A good approach would be regular RMAN full and incremental datafile backups, continuous backups of archived redo logs (e.g.
But it is easy to recover just a single table, or even a few rows from an export.
Remember - a backup is intended for the DBA to recover from catastrophic failure of the hardware.
However, you cannot roll it forward - it is at this point a completely separate, independent database with no logical relationship to its original.
It is not for the benefit of end users (or you will spend your whole time doing restores to a test system and copying a few rows back to the original!
as soon as one archivelog backup completes, start the next one straight away so you are "streaming" the logs to tape) then educate your users in the use of exp/imp so they can perform their own "backups" (in the case of wanting an actual copy of the data) and flashback (so they can do their own recoveries in the case of DML going wrong).
The advantage of RMAN is PITR - point in time recovery.
The advantage of exp/expdp is that you have a consistent copy of the database that you can just import into a freshly created blank database.