I've found some documentation online that loosely relates to what I'm looking for, but I feel like I'm not experienced enough with Amazon to really understand what these tutorials are talking about.
That said, I would like these resources to also be load balanced, and continuously identical to one another.
I have been tasked with building a web environment for a production .Net application that utilizes DotNetNuke as a front-end CMS.
I don't have the option of using Amazon's database services for this, nor do I have the option of using Beanstalk.
This particular application sees heavy traffic and currently our managed provider is not really giving us what we need in terms of performance (latency issues, stability issues, etc).
Create two always-on web servers running DotNetNuke (with the ability to scale on the fly with autoscaling when under heavy traffic)
Ideally, I'd like my servers to have static private addresses configured as such:
Create two always-on SQL servers running SQL Server (with the ability to scale on the fly with autoscaling when under traffic)
Public IP -NAT-> Private IP (172.x.x.x) -> Interface1 -> [Web Cluster] -> Interface2 -> Backend Private IP (10.x.x.x) -> [Database Cluster]
I am new to cloud services and need somebody to help me in getting started with my project.
Any help or guidance would be greatly appreciated.