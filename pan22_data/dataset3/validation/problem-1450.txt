Well... no, that's not correct in the vast majority of circumstances due to proper randomness generation on a system.
Other than the fundamental cryptographic underpinnings (Are DSA keys generated by default?
If there is a bias in the randomness, an attack could be executed in faster-than-brute-force time on the server keys.
), one ssh key does not contain any  information about any other ssh key generated on the same system.
Unless you have in some way changed ssh-keygen to use another random seed (you would know if you did), it is highly unlikely that anyone would be able to bang against that key to figure out how to generate a new key to crack your system.
However, that is much more of a theoretical issue than an actual one - in practice, weakness in the RNG (Random Number Generator) is a vastly less likely attack than a side-channel attack on the cryptographic software or gaining access to the server a different manner.
However, it is theoretically possible for a server to generate randomness that has a bias if care is not taken by the developers (in the case of Linux, the kernel developers) to ensure that the randomness source is "good".
So as long as there is no bias in this randomness there can't be a connection between different private keys.