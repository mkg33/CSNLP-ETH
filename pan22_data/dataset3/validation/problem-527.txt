Adam Langley, a Google Chrome engineer, points out that TLS 1.1 would not have solved this problem due to an implementation issue with SSLv3 that everyone has to work around: browsers have to downgrade to SSLv3 to support buggy servers, and an attacker can initiate this downgrade.
Yet another SSL/TLS library is GnuTLS, and it pretends to support TLS 1.2 already in its current release.
Probably some changes will also be needed in the mod_ssl code to actually enable TLS 1.2 for Apache.
http://it.slashdot.org/comments.pl?sid=2439924&cid=37477890
http://www.imperialviolet.org/2011/09/23/chromeandbeast.html
There is an Apache module using GnuTLS: mod_gnutls, which also claims to support TLS 1.2.
You cannot, OpenSSL does not offer a release for TLS 1.1 yet.
According to the OpenSSL changelog, support for TLS 1.2 was added to the development branch of OpenSSL 1.0.1, but this version is not yet released.
Another commonly used SSL/TLS library is NSS; it is used by a less well known Apache module mod_nss; unfortunately, current NSS releases also do not support TLS 1.2.
However, this module seems to be rather new, and might be not very stable; I never tried to use it.