Although not really initially meant for this purpose, Linear interpolation can also be used to create a simple easing effect, you simply have to call your interpolation function every frame with the same fraction given.
I'm going to paste my own Lerp function and how I call it to achieve this effect, but with a bit of searching you can find a bunch of different ways to achieve the same thing.
This is how I call the function every time the game updates:
Think about it like this: your object will move half of the distance to the destination, then half of the new distance the next frame, and so on, until it reaches its destination (or approximates it well enough).
This is a quick and easy way to approximate an easeOut function in what's essentially a single line of code.
The higher the fraction (0.2f) is, the 'faster' your movement will seem.
Essentially, you're telling it to change your value to 0.0f, and to move 0.2f of the distance every frame.
Though my example uses the function to decrease my player's velocity vector on one axis, the way you'd use it to change positions is identical.
Just to expand on Anko's answer - Easing functions are great, but they aren't necessary in every situation.