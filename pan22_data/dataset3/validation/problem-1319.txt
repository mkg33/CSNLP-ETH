I have seen few commercial products for CygWin while have seen only one product requiring UNIX Services for Windows NT and none since.
The real question is by how much and does it matter?
I don't know what Interix does here, but couldn't find any evidence of it supporting Unicode.
me) were introduced to CygWin by the need to have a X11 server.
Cygwin being based on Win32 instead of running in its own subsystem, while slower, provides much greater Windows integration.
- open source vs. closed source and more importantly openly available documentation.
The rename from SFU to SUA might look nice in the eyes of a marketing team but is confusing the unexperienced users.
Windows-style paths, both with forward and backward slashes, are supported.
An artificial example with heavy I/O can be brought up, of course.
- the naming and implementation changes are confusing.
Performance-wise one can argue that the Interix is closer to the kernel and thus enjoys shorter code run path.
My vote goes with CygWin as it has CygWin/X Xwindows server with all necessary features.
For most of the programs the difference is few percent and is negligible.
The early versions were using MKS toolkit which was later abandoned.
Cygwin's 'ps' does list Windows processes if you give it the -W option, and 'kill -f' will kill them.
- lower entry cost: the "any Windows" with CygWin vs. server-class license for SFU/SUA.
I'd mostly agree with andrews answer with a couple of comments.
In terms of completeness CygWin is also better positioned as it is open source and a lot of GNU or GPL-licensed software is ported to it.
Can't comment on JimB's answer, so tackling it here, in particular the point about Windows integration.
Cygwin 1.7 made UTF-8 the default character set, and Windows' UTF-16 filenames are automatically translated, thus filenames in any language show up correctly in Cygwin.
I would prefer to put such loads on native UNIX as it would be faster than both native Windows and UNIX add-ons on top of Windows.
I've replaced many unix systems with SUA/SFU (no they are not the same but close) under windows.
Many have migrated from Windows to UNIX with the increase of the load while I know no example of conversion from CygWin to Interix (or vice versa).
(I don't know whether that's possible in Interix.)
In the past even the list of commands and the APIs provided were available only to MSDN subscribers and little to no information was available on the Microsoft site.
In contrast the GNU toolset was well documented and available both online and as man pages;
Other integration features include the 'cygstart' utility for opening a file as if you double-clicked it in Explorer, and the /dev/clipboard device for accessing the Windows clipboard.
Some functionality is available for the desktop flavours of Windows but of the more expensive varieties and without the server components;
Windows programs can be invoked from within Cygwin and plugged together with Cygwin programs using all the usual mechanisms such as pipes.
It even allows Windows and UNIX APIs to be used in the same program, which enables things like the Cygwin X server or the mintty terminal.
It is the UNIX compatibility which is sought and not the UNIX performance, so I put this on the end of the list.
SFU got the basic X11 tools but it was too little and too late.
Package availability is a clear win for CygWin influeced by several factors: