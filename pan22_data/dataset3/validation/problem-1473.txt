The real issue could be that the string length inside the SSIS pipeline is still wrong because it got initialized at some earlier point.
There you can see the length of the field inside the pipeline.
I've tried using the Derived Column to cast the column into a DT_I4.
And why is it that I can't just ignore the "potential" loss of data?
I've tried changing the length of my DT_STR value in the source and the destination.
My suggestion would be to delete the connection and the Flat File Source and recreate them as I haven't found a way to re-sychronize pipeline meta data with source components.
I've tried connecting using an Excel Source connector instead with and without the IMEX=1 added to the connection string.
Let me start out by clarifying that this is not a duplicate question, nor a potential duplicate for that matter.
I have run into this a few times and the issue has been a mismatch of data types in the export/import parameters.
You can determine if that is the case by double-clicking the green arrow from your Flat File Source (or after Derived Column/Data Conversion) and choosing "Meta Data".
I've been struggling with this problem for the past two days (working on it for approximately 7 hours a day), and even after Googling the issue, it appears that no one else are having the same exact variant of my problem.
In SSIS, I am trying to read from a CSV file, and insert the rows from it into an OLE DB database.
First thing to do is check those parameters by right click on source or destination, selecting Advanced Editor.
I have tried implementing every answer to every single variant that already exists of this problem on StackOverflow and DBA Stack Exchange, without any luck.
It appears to be the type that I have the most faith in right now.
If have often seen that meta data doesn't match the source component anymore, mostly if creating the Flat File Source AND its corrsponding Connection via the Wizard.
Go to Input and Output Properties and check the data type for that column for all items - both External, Output, and Input.
It's a Windows Server 2008 R2 machine with SQL Server 2008 installed.
I've tried using the Data Conversion to cast my column's value to a DT_I4.
I have usually seen a variance here, often times one is Unicode (WSTR) and the other I4 or DSTR.
When I try to run it, it stops executing at my OLE DB Destination with the following error-message.
First of all, you should be able to ignore string truncation by going to your Flat File Source, Error Output and then changing "Fail Component" under "Truncation" to "Ignore Error".
The column that fails (Amount) is currently of type DT_STR.
For that, I have made the simplest setup ever, seen below.
The machine itself is fully updated through Windows Update.
I have never ever encountered such a big problem for such a simple thing.