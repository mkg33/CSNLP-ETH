(I will use the "&" to execute the command in background without blocking)
To execute this command, the only way I have is to connect to my web hosting throught SFTP using the ssh command :
To avoid the connection to be closed, I tried to create a ~/.ssh/config file on my client with the following content, as explained here :
Can you tell me if my mv command will continue to execute on the server even if my SSH connection has been lost?
My fear is that after I launch my mv command, as it should take a while, my ssh connection will be closed with this error...
Following things I've read on internet and StackOverflow, I think the best way is to use the mv command.
Both should survive a disconnection and after reestablishing a connection you should still be able to reconnect to a session (for screen -r option will do that).
thank you in advance, I can't achieve my migration without these answers as it would be too dangerous if my data are corrupted or in an unknown state!
I need to move this directory from one place to anuther on my hosting.
When I do that (I'm from Windows 10), I end with an error after a few minutes (I guess it is because of my inactivity) :
BUT then I have another error after a few minutes and my connection is also closed :
Then, when I try to launch my ssh connection from Windows PowerShell, I have an error
Indeed, I just need to move the entire folder and all its content (kind of "renaming" it), and I believe that my destination path is on the same filesystem (but I can't ensure this).
If the answer is NO, do you know how can I ensure to keep my ssh alive during the move operation ?
If you're going through SSH, you should look into scp.
If you're running the copy from a windows box, I'd recommend using something like WinSCP.
I have a large folder with many files in many sub-directories (100k+ files).
Then I tried from git bash, and I don't have this error, the ssh connection opens without errors.
I don't have the message in english, but it should be something like that
scp -r /local/directory/ username@to_host:/remote/directory/
This will not remove the existing files, but it absolutely will copy the files and maintain the ssh connection:
It's GUI driven, but it has a robust command line and you can script transfers with a few simple flags.
If I need to do an operation which takes some time over ssh I usually use screen and launch a command from within it.