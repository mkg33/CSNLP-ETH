You may launch cmd.exe from bash to get the host environment variables.
APPDATA=C:\Users&bsol;<my-username>\AppData\Roaming
It does what I wrote in the question I wanted to avoid - guessing the user's home directory by looking for fields containing AppData (and a bit more) within $PATH
I want to get the Windows "host" user home directory from within bash, so my theoretical environment variable (or program)
Assuming that you know your Windows userid, you can put this in your .profile:
It does require of course that there is at least one path in %APPDATA% in Windows, and (more problematic in my opinion) that there is no AppData path set with other user names, e.g.
LOCALAPPDATA=C:\Users&bsol;<my-username>\AppData\Local
This is my reference answer, should the question not be answerable at this time, or be unclear.
I have a fallback-idea of extracting it from $PATH, as there are some predictable paths like those containing AppData, but I'd prefer to keep it simple, if possible.
but there might be an easy answer that’s been under your nose all this time.
In Cygwin, I getHOMEPATH=\Users&bsol;<my-username>
When I search for it, I only find results for the opposite (finding the LXSS user path from the host)
in global scope and finally that the home directory is actually mounted in /mnt.
In the following, win_userprofile has your answer, and the other variables