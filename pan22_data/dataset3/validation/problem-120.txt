I have then written the client-side stress-test which simulates several clients connecting to the server and transferring files from one to another.
My question is, how can I automatically perform such a test?
Some products out there allow you to build in a plugin for a custom protocol, but you have to do the building (giving examples of those products is off topic).
As a newbie to network/server-side programming, what other things should I be looking out for (besides memory issues) before deploying such an application?
You know the protocol better than anyone, as well as the likely use-cases.
A better case here is to do what you're already doing: build your own stress-testing tool.
You can build up to tcp pretty easy and then your protocol in hexadecimal.
I've written a protocol on top of TCP using C# Sockets class which allows the transfer of files between many clients, and put it on a Windows Server 2008 VPS.
It all seems to be working fine, but I still need to see how the server will respond to thousands of client trying to transfer files simultaneously.
The pre-built solutions for this kind of thing assume well known protocols (http for example), but for something custom the pre-built stuff is a lot more spare on the ground.
Will there be memory issues, diminished transfer rate, etc...