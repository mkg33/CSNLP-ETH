Look at some existing files in /etc/init.d as models for your own liveinstance.conf file.
As for why your script isn't working as a cron job, Khai is correct that it's usually a difference in environment.
You have to make sure that you set $PATH to include any directories that you require that are not in the default $PATH or use fully specified directories to scripts and utilities that you use.
The cron logs show nothing untoward during the time the server was down (at least not to my novice eye:
I shall suggest you a different way for babysitting a failing service: psmon.
These commands work fine when typed individually as that user.
I have the following crontab set up, to automatically start a server if it crashes ('start' has no effect if it's already running):
Restart will happen way sooner than after a potential 10 minute delay you have with your current cron.
It can also send you e-mail/log the events it ran, so you can see how often the process gets restarted if you so want.
Pay particular attention to the required comment section at the beginning of the files.
It allows you to define all kind of conditions from just making sure a process is alive to restarting it if the process consumes too much RAM/CPU.
However, when the server crashes, this cron job never seems to start it.
It's a small daemon written in Perl, having an Apache stylish config file.
(The second line is purposely commented out, as the second instance isn't in use for now)