Since the plugin's render goes to HTML only, its usefulness to you is conditional on your needs.
None of this so far actually addresses your use of inline code blocks and processing it.
You can similarly set up a "View Rendered Doc" macro (different hotkey) that opens to resulting file, using a command of something like: SumatraPDF.exe $(CURRENT_DIRECTORY)/$(NAME_PART).pdf.
With this, you open the pdf once and keep it open and it updates on each re-rendering.)
(I use Sumatra PDF for several reasons, a prominent one being that it recognizes when the pdf file has been updated it and updates automatically, not a feature of AcroRead.
I'll say up front that I do not use npp much, though I recommend it in place of other language-specific editors (e.g., GAMSide, standard notepad, wordpad), specifically with programming in mind.
I think there were some discussions that it may not work in some configurations, but it's a start.
One side-effect (I think) is that it uses a specific renderer (Cpp-Markdown) vice the same renderer that Rstudio uses (pandoc).
To do that, I'd recommend simply setting up a macro to render the current .Rmd file for you in the current directory.
There are three components to editing and using Rmarkdown in npp.
standard has adjusted in the last couple of years, so it's possible or likely that they will not display everything accurately.
This does not mean they aren't good, but since a markdown (CommonMark?)
There are several conversations on npp's forums, specifically this one which discusses a npp plugin that provide previews.
On github, I found an older markdown syntax highlighter for npp, and at least two forks (here and here), though none of them appear to have any activity in the last couple of years.