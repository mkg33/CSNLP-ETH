Another method would be composite projects, with the SQL version specific code in separate projects.
You can deploy a dacpac built for an older SQL Server version to a newer one but not visa-versa.
        2016 can read DACPAC files generated by DAC tools shipped with SQL
    files from SQL Server 2008, SQL Server 2005 and SQL Server 2000
        by tools from SQL Server 2012 or SQL Server 2017.
DAC operations were introduced in SQL Server 2008 R2.
    SQL Server 2008 R2 databases, the tools support generation of DACPAC
        Server 2014, 2012, 2008 R2, 2008, and 2005, but not SQL Server 2000.
All of these add complexity the development, build, testing, and deployment processes so I suggest you stick to common features except in cases where the newer feature adds significant business value.
As per MSDN BOL Here In general, DAC tools are capable of reading DACPAC files generated by DAC tools from previous SQL Server versions, and can also deploy DACPACâ€™s to previous versions of SQL Server.
This assumes you include the latest DacFx version included in your setup program.
One approach to facilitate a different code base for each target SQL version is with separate source control branches.
However, DAC tools from earlier versions cannot read DACPAC files generated by DAC tools from later versions.
The dacpac target platform SQL Server version is determined at build time so newer features cannot be used unless you manage and deploy those with custom code.
In addition to SQL 2016 databases, the tools shipped with SQL Server
DAC tools from SQL Server 2008 R2 cannot read DACPAC files generated